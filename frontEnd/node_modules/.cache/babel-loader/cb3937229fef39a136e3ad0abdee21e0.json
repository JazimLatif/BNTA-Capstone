{"ast":null,"code":"var _jsxFileName = \"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/containers/NewWorkoutContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport ExerciseDropdownSearch from \"../components/ExerciseDropdownSearch\";\nimport ExerciseCardList from \"../components/ExerciseCardList\";\nimport ExerciseCard from \"../components/ExerciseTargetCard\";\nimport ExerciseTargetForm from \"../components/ExerciseTargetForm\";\nimport NewExerciseTargetList from \"../components/NewExerciseTargetList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewWorkoutContainer = () => {\n  _s();\n\n  const [allExercises, setAllExercises] = useState([]);\n  const [selectedExercise, setSelectedExercise] = useState(null);\n  const [DropSelect, setDropSelect] = useState(null);\n  const [exerciseTarget, setExerciseTarget] = useState(null);\n  const [newExerciseTargetList, setNewExerciseTargetList] = useState([]);\n  const [visibleSaveButton, setVisibleSaveButton] = useState(false);\n\n  const getSelectedExercise = () => {\n    if (DropSelect) {\n      fetch(`http://localhost:8080/api/v1/exercises/id/${DropSelect}`).then(response => response.json()).then(data => setSelectedExercise(data));\n    }\n  };\n\n  useEffect(getSelectedExercise, [DropSelect]);\n\n  const updateDrop = event => {\n    setDropSelect(event.target.value);\n  };\n\n  const getAllExercises = () => {\n    fetch(\"http://localhost:8080/api/v1/exercises\").then(response => response.json()).then(data => setAllExercises(data));\n  };\n\n  useEffect(getAllExercises, []);\n\n  const getAllExerciseTargets = () => {\n    fetch(\"http://localhost:8080/api/v1/exerciseTargets\").then(response => response.json()).then(data => setExerciseTarget(data)).then(console.log(exerciseTarget));\n  };\n\n  const onAddExerciseTarget = newExerciseTarget => {\n    // console.log(newExerciseTarget);\n    if (newExerciseTarget === newExerciseTargetList[newExerciseTargetList.length - 1]) {\n      console.log(\"same\");\n    } else {\n      setNewExerciseTargetList([...newExerciseTargetList, newExerciseTarget]);\n    } //add exercise target to a list of newWorkoutExerciseTargetsList\n    // fetch(\"http://localhost:8080/api/v1/exerciseTargets\", {\n    //     method: \"POST\",\n    //     headers: {\n    //         'Content-type': 'application/json'\n    //     },\n    //     body: JSON.stringify(newExerciseTarget)\n    // })\n    // .then(() => getAllExerciseTargets());\n\n  };\n\n  const deleteCard = id => {\n    const card = newExerciseTargetList.filter(exercise => {\n      return exercise.exercise_Id !== id;\n    });\n    setNewExerciseTargetList(card);\n  }; // const saveButton = newExerciseTargetList.length > 0 ? <button onClick={saveWorkout}>Save</button> : null\n\n\n  return allExercises.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"NavBar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"New Workout Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ExerciseDropdownSearch, {\n      allExercises: allExercises,\n      updateDrop: updateDrop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ExerciseTargetForm, {\n      exercise: selectedExercise,\n      onAddExerciseTarget: onAddExerciseTarget\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NewExerciseTargetList, {\n      newExerciseTargetList: newExerciseTargetList,\n      deleteCard: deleteCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewWorkoutContainer, \"i/OEjEE/XS48mlLGM0uUwARVryU=\");\n\n_c = NewWorkoutContainer;\nexport default NewWorkoutContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewWorkoutContainer\");","map":{"version":3,"sources":["/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/containers/NewWorkoutContainer.js"],"names":["useState","useEffect","ExerciseDropdownSearch","ExerciseCardList","ExerciseCard","ExerciseTargetForm","NewExerciseTargetList","NewWorkoutContainer","allExercises","setAllExercises","selectedExercise","setSelectedExercise","DropSelect","setDropSelect","exerciseTarget","setExerciseTarget","newExerciseTargetList","setNewExerciseTargetList","visibleSaveButton","setVisibleSaveButton","getSelectedExercise","fetch","then","response","json","data","updateDrop","event","target","value","getAllExercises","getAllExerciseTargets","console","log","onAddExerciseTarget","newExerciseTarget","length","deleteCard","id","card","filter","exercise","exercise_Id"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport ExerciseDropdownSearch from \"../components/ExerciseDropdownSearch\";\nimport ExerciseCardList from \"../components/ExerciseCardList\";\nimport ExerciseCard from \"../components/ExerciseTargetCard\";\nimport ExerciseTargetForm from \"../components/ExerciseTargetForm\";\nimport NewExerciseTargetList from \"../components/NewExerciseTargetList\";\n\nconst NewWorkoutContainer = () => {\n    \n    const[allExercises, setAllExercises] = useState([]);\n    const[selectedExercise, setSelectedExercise] = useState(null);\n    const[DropSelect, setDropSelect]=useState(null);\n    const[exerciseTarget, setExerciseTarget] = useState(null);\n    const[newExerciseTargetList, setNewExerciseTargetList] = useState([]);\n    const[visibleSaveButton, setVisibleSaveButton] = useState(false);\n\n    const getSelectedExercise =()=>{\n        if(DropSelect){\n        fetch(`http://localhost:8080/api/v1/exercises/id/${DropSelect}`)\n        .then(response => response.json())\n        .then(data => setSelectedExercise(data));\n        }\n    }\n\n    useEffect(getSelectedExercise, [DropSelect]);\n\n    const updateDrop=(event) => {\n        setDropSelect(event.target.value);\n    }\n\n    const getAllExercises = () => {\n        fetch(\"http://localhost:8080/api/v1/exercises\")\n            .then(response => response.json())\n            .then(data => setAllExercises(data))\n    }\n\n    useEffect(getAllExercises, []);\n\n    const getAllExerciseTargets = () => {\n        fetch(\"http://localhost:8080/api/v1/exerciseTargets\")\n            .then(response => response.json())\n            .then(data => setExerciseTarget(data))\n            .then(console.log(exerciseTarget))\n    }\n\n    const onAddExerciseTarget = (newExerciseTarget) => {\n        // console.log(newExerciseTarget);\n\n        if(newExerciseTarget === newExerciseTargetList[newExerciseTargetList.length-1]) {\n            console.log(\"same\");\n        }\n        else{\n            setNewExerciseTargetList([...newExerciseTargetList, newExerciseTarget]);\n        }\n\n        //add exercise target to a list of newWorkoutExerciseTargetsList\n        \n        // fetch(\"http://localhost:8080/api/v1/exerciseTargets\", {\n        //     method: \"POST\",\n        //     headers: {\n        //         'Content-type': 'application/json'\n        //     },\n        //     body: JSON.stringify(newExerciseTarget)\n        // })\n        // .then(() => getAllExerciseTargets());\n    }\n\n    const deleteCard = (id) => {\n        const card = newExerciseTargetList.filter(exercise => {\n            return (\n                exercise.exercise_Id !== id\n        )\n    })\n        setNewExerciseTargetList(card);\n    }\n\n    // const saveButton = newExerciseTargetList.length > 0 ? <button onClick={saveWorkout}>Save</button> : null\n\n\n\n    return (\n        allExercises.length > 0\n        ?\n        <>\n        <p>NavBar</p> \n        <p>New Workout Page</p>\n\n        <ExerciseDropdownSearch allExercises = {allExercises} updateDrop={updateDrop}/>\n        <ExerciseTargetForm exercise={selectedExercise} onAddExerciseTarget={onAddExerciseTarget}/>\n        <NewExerciseTargetList newExerciseTargetList={newExerciseTargetList} deleteCard={deleteCard} />\n        {/* {saveButton} */}\n        \n        </>\n        :\n        <p>Loading...</p>\n    )\n}\nexport default NewWorkoutContainer;"]},"metadata":{},"sourceType":"module"}