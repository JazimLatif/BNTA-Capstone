{"ast":null,"code":"var _jsxFileName = \"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseTargetForm.js\",\n    _s = $RefreshSig$();\n\nimport cardio from '../Icons/cardio.png';\nimport calisthenic from '../Icons/back-lever.png';\nimport { useState, useEffect } from 'react/cjs/react.development';\nimport './Workout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ExerciseTargetForm = _ref => {\n  _s();\n\n  let {\n    exercise,\n    onAddExerciseTarget\n  } = _ref;\n  const [sets, setSets] = useState(\"\");\n  const [reps, setReps] = useState(\"\");\n  const [weights, setWeights] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [distance, setDistance] = useState(\"\");\n\n  const handleSetsChange = event => {\n    setSets(event.target.value);\n  };\n\n  const handleRepsChange = event => {\n    setReps(event.target.value);\n  };\n\n  const handleWeightsChange = event => {\n    setWeights(event.target.value);\n  };\n\n  const handleTimeChange = event => {\n    setTime(event.target.value);\n  };\n\n  const handleDistanceChange = event => {\n    setDistance(event.target.value);\n  };\n\n  const handleSubmitTarget = event => {\n    event.preventDefault();\n    const newExerciseTarget = {\n      \"exercise_Id\": exercise.id,\n      \"workout_Id\": 1,\n      \"time\": time,\n      \"distance\": distance,\n      \"sets\": sets,\n      \"reps\": reps,\n      \"weight\": weights\n    };\n    onAddExerciseTarget(newExerciseTarget);\n    setSets(\"\");\n    setReps(\"\");\n    setWeights(\"\");\n    setTime(\"\");\n    setDistance(\"\");\n  }; //TODO: Enter numbers only!\n  //TODO: For weights enter lb/kg\n\n\n  const displayForm = () => {\n    console.log(exercise);\n\n    if (exercise) {\n      switch (exercise.exerciseType) {\n        case \"CALISTHENICS\":\n          console.log(\"calisthenics\");\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calisthenics-workout\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"calisthenics-image\",\n                src: calisthenic\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"calisthenics-workout-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"calisthenics-workout-name\",\n                  children: exercise.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"calisthenics-workout-targets\",\n                  children: /*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: handleSubmitTarget,\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Sets:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        onChange: handleSetsChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 75,\n                        columnNumber: 41\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Reps:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        onChange: handleRepsChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 78,\n                        columnNumber: 41\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 77,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"submit\",\n                      value: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this)\n          }, void 0, false);\n\n        case \"WEIGHTS\":\n          console.log(\"weights\");\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weights-workout\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"weights-workout-name\",\n              children: exercise.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmitTarget,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Sets:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  onChange: handleSetsChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Reps:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  onChange: handleRepsChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Weight(kg):\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  onChange: handleWeightsChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this);\n\n        case \"CARDIO\":\n          console.log(\"cardio\");\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cardio-workout\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"cardio-image\",\n                src: cardio\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cardio-workout-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"cardio-workout-name\",\n                  children: exercise.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cardio-workout-targets\",\n                  children: /*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: handleSubmitTarget,\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        onChange: handleTimeChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 120,\n                        columnNumber: 45\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Distance:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        onChange: handleDistanceChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 123,\n                        columnNumber: 45\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"submit\",\n                      value: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 25\n            }, this)\n          }, void 0, false);\n\n        default:\n          console.log(\"Unmatched exercise type\");\n      }\n    }\n  };\n\n  useEffect(displayForm, [exercise]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: displayForm({\n      exercise\n    })\n  }, void 0, false);\n};\n\n_s(ExerciseTargetForm, \"WAigtkycJ/6Mpb6uBzTdTYZcqVU=\");\n\n_c = ExerciseTargetForm;\nexport default ExerciseTargetForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExerciseTargetForm\");","map":{"version":3,"sources":["/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseTargetForm.js"],"names":["cardio","calisthenic","useState","useEffect","ExerciseTargetForm","exercise","onAddExerciseTarget","sets","setSets","reps","setReps","weights","setWeights","time","setTime","distance","setDistance","handleSetsChange","event","target","value","handleRepsChange","handleWeightsChange","handleTimeChange","handleDistanceChange","handleSubmitTarget","preventDefault","newExerciseTarget","id","displayForm","console","log","exerciseType","name"],"mappings":"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","sourcesContent":["import cardio from '../Icons/cardio.png';\nimport calisthenic from '../Icons/back-lever.png';\nimport { useState, useEffect } from 'react/cjs/react.development';\nimport './Workout.css'\n\nconst ExerciseTargetForm = ({exercise, onAddExerciseTarget}) => {\n\n    const[sets, setSets] = useState(\"\");\n    const[reps, setReps] = useState(\"\");\n    const[weights, setWeights] = useState(\"\");\n    const[time, setTime] = useState(\"\");\n    const[distance, setDistance] = useState(\"\");\n\n    const handleSetsChange = (event) => {\n        setSets(event.target.value);\n    }\n\n    const handleRepsChange = (event) => {\n        setReps(event.target.value);\n    }\n\n    const handleWeightsChange = (event) => {\n        setWeights(event.target.value);\n    }\n\n    const handleTimeChange = (event) => {\n        setTime(event.target.value);\n    }\n\n    const handleDistanceChange = (event) => {\n        setDistance(event.target.value);\n    }\n\n    const handleSubmitTarget = (event) => {\n        event.preventDefault();\n\n        const newExerciseTarget = {\n            \"exercise_Id\": exercise.id,\n            \"workout_Id\": 1,\n            \"time\": time,\n            \"distance\": distance,\n            \"sets\": sets,\n            \"reps\": reps,\n            \"weight\": weights\n        }\n\n        onAddExerciseTarget(newExerciseTarget);\n        \n        setSets(\"\");\n        setReps(\"\");\n        setWeights(\"\");\n        setTime(\"\");\n        setDistance(\"\");\n    }\n\n    //TODO: Enter numbers only!\n    //TODO: For weights enter lb/kg\n    const displayForm = () => {\n        console.log(exercise);\n        if(exercise) {\n                switch(exercise.exerciseType) {\n                case \"CALISTHENICS\":\n                    console.log(\"calisthenics\");\n                    return (\n                    <>\n                        <div className=\"calisthenics-workout\">\n                            <img className=\"calisthenics-image\" src={calisthenic} />\n                            \n                            <div className=\"calisthenics-workout-container\">\n                                <p className=\"calisthenics-workout-name\">{exercise.name}</p>\n\n                            <div className=\"calisthenics-workout-targets\">\n                                <form onSubmit={handleSubmitTarget}>\n                                    <label>Sets:\n                                        <input type=\"text\" onChange={handleSetsChange}/>\n                                    </label>\n                                    <label>Reps:\n                                        <input type=\"text\" onChange={handleRepsChange}/>\n                                    </label>\n                                    <input type=\"submit\" value=\"Add\"/>\n                                </form>\n\n                            </div>\n                        </div>\n                    </div>\n                    </>\n                    )\n                case \"WEIGHTS\":\n                    console.log(\"weights\");\n                    return(\n                    <div className=\"weights-workout\">\n                        <p className=\"weights-workout-name\">{exercise.name}</p>\n                                <form onSubmit={handleSubmitTarget}>\n                                    <label>Sets:\n                                        <input type=\"text\" onChange={handleSetsChange}/>\n                                    </label>\n                                    <label>Reps:\n                                        <input type=\"text\" onChange={handleRepsChange}/>\n                                    </label>\n                                    <label>Weight(kg):\n                                        <input type=\"text\" onChange={handleWeightsChange}/>\n                                    </label>\n                                    <input type=\"submit\" value=\"Add\"/>\n                                </form>\n                    </div>\n                    )\n                case \"CARDIO\":\n                    console.log(\"cardio\")\n                    return(\n                    <>\n                        <div className=\"cardio-workout\">\n                            <img className=\"cardio-image\" src={cardio}/>    \n\n                            <div className=\"cardio-workout-container\">\n                                <p className=\"cardio-workout-name\">{exercise.name}</p>\n\n                                <div className=\"cardio-workout-targets\">\n                                    <form onSubmit={handleSubmitTarget}>\n                                        <label>Time:\n                                            <input type=\"text\" onChange={handleTimeChange}/>\n                                        </label>\n                                        <label>Distance:\n                                            <input type=\"text\" onChange={handleDistanceChange}/>\n                                        </label>\n                                        <input type=\"submit\" value=\"Add\"/>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                    )\n                default: console.log(\"Unmatched exercise type\")\n            }\n        }\n    }\n\n    useEffect(displayForm, [exercise]);\n\n    return (\n        <>\n        {displayForm({exercise})}\n        </>\n    )\n\n}\nexport default ExerciseTargetForm;"]},"metadata":{},"sourceType":"module"}