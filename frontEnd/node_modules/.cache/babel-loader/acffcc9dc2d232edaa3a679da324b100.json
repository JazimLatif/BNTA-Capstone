{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ninoa\\\\Documents\\\\BNTA\\\\BNTA-Capstone\\\\frontEnd\\\\src\\\\components\\\\Graph.js\",\n    _s = $RefreshSig$();\n\nimport { Line } from 'react-chartjs-2';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Graph = _ref => {\n  _s();\n\n  let {\n    valuesToGraph\n  } = _ref;\n  const [chartData, setChartData] = useState([]);\n  useEffect(() => {\n    setChartData({\n      labels: valuesToGraph.map(value => value.date),\n      values: valuesToGraph.map(value => value.weightAchieved)\n    });\n  }, [valuesToGraph]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Graph, \"G738MvGn8fxZdXHBYos6nBcOPzI=\");\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["C:/Users/ninoa/Documents/BNTA/BNTA-Capstone/frontEnd/src/components/Graph.js"],"names":["Line","useEffect","useState","Graph","valuesToGraph","chartData","setChartData","labels","map","value","date","values","weightAchieved"],"mappings":";;;AAAA,SAAQA,IAAR,QAAmB,iBAAnB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,KAAK,GAAC,QAAmB;AAAA;;AAAA,MAAlB;AAACC,IAAAA;AAAD,GAAkB;AAE3B,QAAM,CAACC,SAAD,EAAWC,YAAX,IAAyBJ,QAAQ,CAAC,EAAD,CAAvC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,YAAY,CAAC;AACTC,MAAAA,MAAM,EAAEH,aAAa,CAACI,GAAd,CAAmBC,KAAK,IAAIA,KAAK,CAACC,IAAlC,CADC;AAETC,MAAAA,MAAM,EAAEP,aAAa,CAACI,GAAd,CAAmBC,KAAK,IAAIA,KAAK,CAACG,cAAlC;AAFC,KAAD,CAAZ;AAIF,GALO,EAKN,CAACR,aAAD,CALM,CAAT;AAOA,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,6BAEA,QAAC,IAAD;AACE,QAAA,IAAI,EAAEC,SADR;AAEE,QAAA,OAAO,EAAE;AAFX;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAaH,CAzBD;;GAAMF,K;;KAAAA,K;AA6BN,eAAeA,KAAf","sourcesContent":["import {Line} from 'react-chartjs-2'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\n\r\nconst Graph=({valuesToGraph})=>{\r\n\r\n    const [chartData,setChartData]=useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        setChartData({\r\n            labels: valuesToGraph.map((value => value.date)),\r\n            values: valuesToGraph.map((value => value.weightAchieved))\r\n        }\r\n    )},[valuesToGraph]);\r\n\r\n    return(\r\n        <>\r\n        <p>Hello</p>\r\n        <div>\r\n            \r\n        <Line\r\n          data={chartData}\r\n          options={{\r\n          }}\r\n        />\r\n      </div>\r\n      </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Graph;\r\n"]},"metadata":{},"sourceType":"module"}