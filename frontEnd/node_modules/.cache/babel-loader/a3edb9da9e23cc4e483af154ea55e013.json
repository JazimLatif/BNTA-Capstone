{"ast":null,"code":"var _jsxFileName = \"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/frontEnd/src/containers/MyStatsContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport ExerciseDropdownSearch from '../components/ExerciseDropdownSearch';\nimport Graph from '../components/Graph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyStatsContainer = () => {\n  _s();\n\n  const [allExercises, setAllExercises] = useState([]);\n  const [valuesToGraph, setValuesToGraph] = useState(null);\n  const [DropSelect, setDropSelect] = useState(null);\n\n  const getValuesToGraph = () => {\n    if (DropSelect) {\n      fetch(`http://localhost:8080/api/v1/data/${DropSelect}`).then(response => response.json()).then(data => setValuesToGraph(data));\n      console.log(\"valuesToGraph\");\n    }\n  };\n\n  useEffect(getValuesToGraph, [DropSelect]);\n\n  const updateDrop = event => {\n    setDropSelect(event.target.value);\n  };\n\n  const getAllExercises = () => {\n    fetch(\"http://localhost:8080/api/v1/exercises\").then(response => response.json()).then(data => setAllExercises(data));\n  };\n\n  useEffect(getAllExercises, []);\n  return allExercises.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"My Stats Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ExerciseDropdownSearch, {\n      allExercises: allExercises,\n      dropSelect: DropSelect,\n      updateDrop: updateDrop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Graph, {\n      valuesToGraph: valuesToGraph\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyStatsContainer, \"W12PkddV5mxE6v28MEHwniQUXr0=\");\n\n_c = MyStatsContainer;\nexport default MyStatsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyStatsContainer\");","map":{"version":3,"sources":["/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/frontEnd/src/containers/MyStatsContainer.js"],"names":["useState","useEffect","ExerciseDropdownSearch","Graph","MyStatsContainer","allExercises","setAllExercises","valuesToGraph","setValuesToGraph","DropSelect","setDropSelect","getValuesToGraph","fetch","then","response","json","data","console","log","updateDrop","event","target","value","getAllExercises","length"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,sBAAP,MAAmC,sCAAnC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;;AAGA,MAAMC,gBAAgB,GAAE,MAAI;AAAA;;AAExB,QAAK,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAkCR,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;;AAEA,QAAMW,gBAAgB,GAAC,MAAI;AACvB,QAAGF,UAAH,EAAc;AACdG,MAAAA,KAAK,CAAE,qCAAoCH,UAAW,EAAjD,CAAL,CACCI,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAIR,gBAAgB,CAACQ,IAAD,CAF9B;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACC;AACJ,GAPD;;AASAjB,EAAAA,SAAS,CAACU,gBAAD,EAAmB,CAACF,UAAD,CAAnB,CAAT;;AAGA,QAAMU,UAAU,GAAEC,KAAD,IAAW;AACxBV,IAAAA,aAAa,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC1BX,IAAAA,KAAK,CAAC,wCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIV,eAAe,CAACU,IAAD,CAFjC;AAGH,GAJD;;AAMAf,EAAAA,SAAS,CAACsB,eAAD,EAAkB,EAAlB,CAAT;AAGA,SACIlB,YAAY,CAACmB,MAAb,GAAsB,CAAtB,gBAEA;AAAA,4BAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAIA,QAAC,sBAAD;AAAwB,MAAA,YAAY,EAAInB,YAAxC;AAAsD,MAAA,UAAU,EAAEI,UAAlE;AAA8E,MAAA,UAAU,EAAEU;AAA1F;AAAA;AAAA;AAAA;AAAA,YAJA,eAKA,QAAC,KAAD;AAAO,MAAA,aAAa,EAAEZ;AAAtB;AAAA;AAAA;AAAA;AAAA,YALA;AAAA,kBAFA,gBAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZJ;AAcH,CA7CD;;GAAMH,gB;;KAAAA,gB;AA+CN,eAAeA,gBAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport ExerciseDropdownSearch from '../components/ExerciseDropdownSearch';\nimport Graph from '../components/Graph';\n\n\nconst MyStatsContainer =()=>{\n\n    const[allExercises, setAllExercises] = useState([]);\n    const [valuesToGraph, setValuesToGraph]=useState(null);\n    const [DropSelect, setDropSelect]=useState(null);\n\n    const getValuesToGraph=()=>{\n        if(DropSelect){\n        fetch(`http://localhost:8080/api/v1/data/${DropSelect}`)\n        .then(response => response.json())\n        .then(data => setValuesToGraph(data));\n        console.log(\"valuesToGraph\")\n        }\n    }\n\n    useEffect(getValuesToGraph, [DropSelect]);\n\n\n    const updateDrop=(event) => {\n        setDropSelect(event.target.value);\n    }\n\n    const getAllExercises = () => {\n        fetch(\"http://localhost:8080/api/v1/exercises\")\n            .then(response => response.json())\n            .then(data => setAllExercises(data))\n    }\n\n    useEffect(getAllExercises, []);\n\n\n    return (\n        allExercises.length > 0\n        ?\n        <>\n\n        <p>My Stats Page</p>\n\n        <ExerciseDropdownSearch allExercises = {allExercises} dropSelect={DropSelect} updateDrop={updateDrop}/>\n        <Graph valuesToGraph={valuesToGraph}/>\n\n        </>\n        :\n        <p>Loading...</p>\n    )\n}\n\nexport default MyStatsContainer;\n"]},"metadata":{},"sourceType":"module"}