{"ast":null,"code":"var _jsxFileName = \"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/containers/NewWorkoutContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport ExerciseDropdownSearch from \"../components/ExerciseDropdownSearch\";\nimport ExerciseList from \"../components/ExerciseList\";\nimport ExerciseCard from \"../components/ExerciseCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewWorkoutContainer = () => {\n  _s();\n\n  const [allExercises, setAllExercises] = useState([]);\n  const [selectedExercise, setSelectedExercise] = useState(null);\n  const [DropSelect, setDropSelect] = useState(null);\n\n  const getSelectedExercise = () => {\n    if (DropSelect) {\n      fetch(`http://localhost:8080/api/v1/exercises/id/${DropSelect}`).then(response => response.json()).then(data => setSelectedExercise(data));\n    }\n  };\n\n  useEffect(getSelectedExercise, [DropSelect]);\n\n  const updateDrop = event => {\n    setDropSelect(event.target.value);\n  };\n\n  const getAllExercises = () => {\n    fetch(\"http://localhost:8080/api/v1/exercises\").then(response => response.json()).then(data => setAllExercises(data));\n  };\n\n  useEffect(getAllExercises, []);\n  return allExercises.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"NavBar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"New Workout Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ExerciseDropdownSearch, {\n      allExercises: allExercises,\n      updateDrop: updateDrop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ExerciseCardList, {\n      selectedExercise: selectedExercise\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewWorkoutContainer, \"qHKIk9Wfdq9JZ3QH593dDBjfkFw=\");\n\n_c = NewWorkoutContainer;\nexport default NewWorkoutContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewWorkoutContainer\");","map":{"version":3,"sources":["/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/containers/NewWorkoutContainer.js"],"names":["useState","useEffect","ExerciseDropdownSearch","ExerciseList","ExerciseCard","NewWorkoutContainer","allExercises","setAllExercises","selectedExercise","setSelectedExercise","DropSelect","setDropSelect","getSelectedExercise","fetch","then","response","json","data","updateDrop","event","target","value","getAllExercises","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,sBAAP,MAAmC,sCAAnC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;;;AACA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAE9B,QAAK,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACQ,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;;AAEA,QAAMY,mBAAmB,GAAE,MAAI;AAC3B,QAAGF,UAAH,EAAc;AACdG,MAAAA,KAAK,CAAE,6CAA4CH,UAAW,EAAzD,CAAL,CACCI,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAIR,mBAAmB,CAACQ,IAAD,CAFjC;AAGC;AACJ,GAND;;AAQAhB,EAAAA,SAAS,CAACW,mBAAD,EAAsB,CAACF,UAAD,CAAtB,CAAT;;AAEA,QAAMQ,UAAU,GAAEC,KAAD,IAAW;AACxBR,IAAAA,aAAa,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC1BT,IAAAA,KAAK,CAAC,wCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIV,eAAe,CAACU,IAAD,CAFjC;AAGH,GAJD;;AAMAhB,EAAAA,SAAS,CAACqB,eAAD,EAAkB,EAAlB,CAAT;AAEA,SACIhB,YAAY,CAACiB,MAAb,GAAsB,CAAtB,gBAEA;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA,QAAC,sBAAD;AAAwB,MAAA,YAAY,EAAIjB,YAAxC;AAAsD,MAAA,UAAU,EAAEY;AAAlE;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA,QAAC,gBAAD;AAAkB,MAAA,gBAAgB,EAAEV;AAApC;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA,kBAFA,gBASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAVJ;AAYH,CAxCD;;GAAMH,mB;;KAAAA,mB;AAyCN,eAAeA,mBAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport ExerciseDropdownSearch from \"../components/ExerciseDropdownSearch\";\nimport ExerciseList from \"../components/ExerciseList\";\nimport ExerciseCard from \"../components/ExerciseCard\";\nconst NewWorkoutContainer = () => {\n    \n    const[allExercises, setAllExercises] = useState([]);\n    const [selectedExercise, setSelectedExercise] = useState(null);\n    const [DropSelect, setDropSelect]=useState(null);\n\n    const getSelectedExercise =()=>{\n        if(DropSelect){\n        fetch(`http://localhost:8080/api/v1/exercises/id/${DropSelect}`)\n        .then(response => response.json())\n        .then(data => setSelectedExercise(data));\n        }\n    }\n\n    useEffect(getSelectedExercise, [DropSelect]);\n\n    const updateDrop=(event) => {\n        setDropSelect(event.target.value);\n    }\n\n    const getAllExercises = () => {\n        fetch(\"http://localhost:8080/api/v1/exercises\")\n            .then(response => response.json())\n            .then(data => setAllExercises(data))\n    }\n\n    useEffect(getAllExercises, []);\n\n    return (\n        allExercises.length > 0\n        ?\n        <>\n        <p>NavBar</p> \n        <p>New Workout Page</p>\n        <ExerciseDropdownSearch allExercises = {allExercises} updateDrop={updateDrop}/>\n        <ExerciseCardList selectedExercise={selectedExercise}/>\n        </>\n        :\n        <p>Loading...</p>\n    )\n}\nexport default NewWorkoutContainer;"]},"metadata":{},"sourceType":"module"}