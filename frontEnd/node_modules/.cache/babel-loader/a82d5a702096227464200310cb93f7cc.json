{"ast":null,"code":"var _jsxFileName = \"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/frontEnd/src/Pages/MyStatsPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyStatsPage = _ref => {\n  _s();\n\n  let {\n    exercise\n  } = _ref;\n  const [valuesToGraph, setValuesToGraph] = useState([]);\n  const [DropSelect, setDropSelect] = useState(null);\n\n  const updateDrop = event => {\n    setDropSelect(event.target.value);\n  };\n\n  const getExercise = () => {};\n\n  const onFormSubmit = event => {\n    const getExerciseDataPointsByExerciseID = () => {\n      fetch(`http://localhost:8080/api/v1/data/${DropSelect}`).then(response => response.json()).then(data => setValuesToGraph(data));\n    }; // useEffect(()=>{\n    //     getExerciseDataPointsByExerciseID();\n    // },[]);\n\n\n    console.log(valuesToGraph);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onFormSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: updateDrop,\n        children: exercise.map(exercise => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: exercise.id,\n          label: exercise.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyStatsPage, \"gAkKtZW6qL9uxPTMatkZ00WUyfs=\");\n\n_c = MyStatsPage;\nexport default MyStatsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyStatsPage\");","map":{"version":3,"sources":["/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/frontEnd/src/Pages/MyStatsPage.js"],"names":["useState","MyStatsPage","exercise","valuesToGraph","setValuesToGraph","DropSelect","setDropSelect","updateDrop","event","target","value","getExercise","onFormSubmit","getExerciseDataPointsByExerciseID","fetch","then","response","json","data","console","log","map","id","name"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;;;AACA,MAAMC,WAAW,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAEhC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;;AAEA,QAAMO,UAAU,GAAEC,KAAD,IAAW;AACxBF,IAAAA,aAAa,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AAEH,GAHD;;AAKA,QAAMC,WAAW,GAAG,MAAK,CAExB,CAFD;;AAIA,QAAMC,YAAY,GAAIJ,KAAD,IAAS;AAE1B,UAAMK,iCAAiC,GAAG,MAAM;AAC5CC,MAAAA,KAAK,CAAE,qCAAoCT,UAAW,EAAjD,CAAL,CACKU,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAId,gBAAgB,CAACc,IAAD,CAFlC;AAIH,KALD,CAF0B,CAU1B;AACA;AACA;;;AAEJC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,aAAZ;AAIC,GAlBD;;AAsBA,sBAGI;AAAA,2BACA;AAAM,MAAA,QAAQ,EAAES,YAAhB;AAAA,6BACA;AAAQ,QAAA,QAAQ,EAAEL,UAAlB;AAAA,kBACKL,QAAQ,CAACmB,GAAT,CAAanB,QAAQ,iBAEtB;AAAQ,UAAA,KAAK,EAAEA,QAAQ,CAACoB,EAAxB;AAA4B,UAAA,KAAK,EAAEpB,QAAQ,CAACqB;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAFC;AADL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAiBH,CArDD;;GAAMtB,W;;KAAAA,W;AAuDN,eAAeA,WAAf","sourcesContent":["import {useState} from 'react';\nconst MyStatsPage = ({exercise}) => {\n\n    const [valuesToGraph, setValuesToGraph]=useState([]);\n    const [DropSelect, setDropSelect]=useState(null);\n\n    const updateDrop=(event) => {\n        setDropSelect(event.target.value);\n\n    }\n\n    const getExercise = () =>{\n\n    }\n\n    const onFormSubmit = (event)=>{\n\n        const getExerciseDataPointsByExerciseID = () => {\n            fetch(`http://localhost:8080/api/v1/data/${DropSelect}`)\n                .then(response => response.json())\n                .then(data => setValuesToGraph(data))\n                ;\n        }\n\n\n        // useEffect(()=>{\n        //     getExerciseDataPointsByExerciseID();\n        // },[]);\n            \n    console.log(valuesToGraph);\n\n\n\n    }\n\n\n\n    return(\n\n\n        <div>\n        <form onSubmit={onFormSubmit}>\n        <select onChange={updateDrop}>\n            {exercise.map(exercise => (\n\n            <option value={exercise.id} label={exercise.name}/>)\n            )}\n           \n            </select>\n           \n        </form>\n        \n        </div>\n    )\n}\n\nexport default MyStatsPage;"]},"metadata":{},"sourceType":"module"}