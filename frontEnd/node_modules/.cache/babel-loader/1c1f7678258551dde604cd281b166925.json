{"ast":null,"code":"var _jsxFileName = \"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/frontEnd/src/components/Graph.js\";\nimport { Line } from 'react-chartjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Graph = _ref => {\n  let {\n    valuesToGraph\n  } = _ref;\n\n  const renderGraph = () => {\n    if (valuesToGraph) {\n      if ((valuesToGraph.timeAchieved > 0 || valuesToGraph.distanceAchieved > 0) && valuesToGraph.setsAchieved === 0 && valuesToGraph.repsAchieved === 0 && valuesToGraph.weightAchieved === 0) {\n        data = [{\n          x: valuesToGraph.date,\n          y: valuesToGraph.timeAchieved\n        }, {}, {}];\n        return \"hello\";\n      } else if (valuesToGraph.setsAchieved > 0 && valuesToGraph.repsAchieved > 0 && valuesToGraph.timeAchieved === 0 && valuesToGraph.distanceAchieved === 0 && valuesToGraph.weightAchieved === 0) {\n        return \"Weights\";\n      } else if (valuesToGraph.setsAchieved > 0 && valuesToGraph.repsAchieved > 0 && valuesToGraph.weightAchieved > 0 && valuesToGraph.timeAchieved === 0 && valuesToGraph.distanceAchieved === 0) {\n        return \"Calisthenics\";\n      }\n    } else {\n      /*#__PURE__*/\n      _jsxDEV(\"p\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 10\n      }, this);\n    }\n  };\n\n  return renderGraph;\n};\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/frontEnd/src/components/Graph.js"],"names":["Line","Graph","valuesToGraph","renderGraph","timeAchieved","distanceAchieved","setsAchieved","repsAchieved","weightAchieved","data","x","date","y"],"mappings":";AAAA,SAAQA,IAAR,QAAmB,eAAnB;;;AAGA,MAAMC,KAAK,GAAC,QAAmB;AAAA,MAAlB;AAACC,IAAAA;AAAD,GAAkB;;AAM3B,QAAMC,WAAW,GAAG,MAAK;AAAC,QAAGD,aAAH,EAAiB;AAEvC,UAAG,CAACA,aAAa,CAACE,YAAd,GAA2B,CAA3B,IAAgCF,aAAa,CAACG,gBAAd,GAA+B,CAAhE,KAAsEH,aAAa,CAACI,YAAd,KAA6B,CAAnG,IAAwGJ,aAAa,CAACK,YAAd,KAA6B,CAArI,IAA0IL,aAAa,CAACM,cAAd,KAA+B,CAA5K,EAA8K;AAE1KC,QAAAA,IAAI,GAAC,CACD;AAACC,UAAAA,CAAC,EAACR,aAAa,CAACS,IAAjB;AAAsBC,UAAAA,CAAC,EAACV,aAAa,CAACE;AAAtC,SADC,EAED,EAFC,EAGD,EAHC,CAAL;AAMA,eAAO,OAAP;AAEH,OAVD,MAWK,IAAIF,aAAa,CAACI,YAAd,GAA2B,CAA3B,IAAgCJ,aAAa,CAACK,YAAd,GAA2B,CAA5D,IAAkEL,aAAa,CAACE,YAAd,KAA6B,CAA/F,IAAoGF,aAAa,CAACG,gBAAd,KAAiC,CAArI,IAA0IH,aAAa,CAACM,cAAd,KAA+B,CAA5K,EAA8K;AAE/K,eAAO,SAAP;AAEH,OAJI,MAKA,IAAIN,aAAa,CAACI,YAAd,GAA2B,CAA3B,IAAgCJ,aAAa,CAACK,YAAd,GAA2B,CAA3D,IAAgEL,aAAa,CAACM,cAAd,GAA6B,CAA9F,IAAqGN,aAAa,CAACE,YAAd,KAA6B,CAAlI,IAAuIF,aAAa,CAACG,gBAAd,KAAiC,CAA3K,EAA8K;AAE/K,eAAO,cAAP;AAEH;AACJ,KAvByB,MAwBtB;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAe;AAAC,GAxBrB;;AA2BA,SAAOF,WAAP;AAMH,CAvCD;;KAAMF,K;AAyCN,eAAeA,KAAf","sourcesContent":["import {Line} from 'react-chartjs';\n\n\nconst Graph=({valuesToGraph})=>{\n\n\n     \n\n\n    const renderGraph = () =>{if(valuesToGraph){\n        \n        if((valuesToGraph.timeAchieved>0 || valuesToGraph.distanceAchieved>0) && valuesToGraph.setsAchieved===0 && valuesToGraph.repsAchieved===0 && valuesToGraph.weightAchieved===0){\n\n            data=[\n                {x:valuesToGraph.date,y:valuesToGraph.timeAchieved},\n                {},\n                {}\n            ]\n    \n            return(\"hello\")\n    \n        }\n        else if((valuesToGraph.setsAchieved>0 && valuesToGraph.repsAchieved>0) && valuesToGraph.timeAchieved===0 && valuesToGraph.distanceAchieved===0 && valuesToGraph.weightAchieved===0){\n    \n            return(\"Weights\")\n    \n        }\n        else if((valuesToGraph.setsAchieved>0 && valuesToGraph.repsAchieved>0 && valuesToGraph.weightAchieved>0)  && valuesToGraph.timeAchieved===0 && valuesToGraph.distanceAchieved===0) {\n    \n            return(\"Calisthenics\")\n    \n        }\n    }\n    else{<p>Loading</p>}}\n\n\n    return(renderGraph);\n\n\n\n\n\n}\n\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}