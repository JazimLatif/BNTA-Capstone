[{"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/index.js":"1","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/App.js":"2","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/Pages/ProteinTrackerPage.js":"3","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/Pages/HomePage.js":"4","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/Pages/StartWorkoutPage.js":"5","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/Pages/MyWorkoutsPage.js":"6","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/Pages/WorkoutPage.js":"7","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/Navbar.js":"8","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/containers/MyStatsContainer.js":"9","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/Workout.js":"10","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutsList.js":"11","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseCard.js":"12","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseDropdownSearch.js":"13","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/StartWorkoutButton.js":"14","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutComponents/Timer.js":"15","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/Graph.js":"16","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutComponents/RecordForm.js":"17","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseTarget.js":"18","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutButton.js":"19","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/containers/NewWorkoutContainer.js":"20","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseTargetForm.js":"21","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseCardList.js":"22","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseTargetCard.js":"23","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/NewExerciseTargetList.js":"24"},{"size":719,"mtime":1639569239261,"results":"25","hashOfConfig":"26"},{"size":1181,"mtime":1639577532633,"results":"27","hashOfConfig":"26"},{"size":154,"mtime":1639569239259,"results":"28","hashOfConfig":"26"},{"size":1414,"mtime":1639569239259,"results":"29","hashOfConfig":"26"},{"size":2416,"mtime":1639569239259,"results":"30","hashOfConfig":"26"},{"size":685,"mtime":1639577878972,"results":"31","hashOfConfig":"26"},{"size":1229,"mtime":1639569239260,"results":"32","hashOfConfig":"26"},{"size":703,"mtime":1639569239257,"results":"33","hashOfConfig":"26"},{"size":1725,"mtime":1639569239261,"results":"34","hashOfConfig":"26"},{"size":2101,"mtime":1639569239261,"results":"35","hashOfConfig":"26"},{"size":888,"mtime":1639577918949,"results":"36","hashOfConfig":"26"},{"size":2773,"mtime":1639569239257,"results":"37","hashOfConfig":"26"},{"size":585,"mtime":1639569239260,"results":"38","hashOfConfig":"26"},{"size":895,"mtime":1639569239257,"results":"39","hashOfConfig":"26"},{"size":1406,"mtime":1639569239258,"results":"40","hashOfConfig":"26"},{"size":3030,"mtime":1639572279417,"results":"41","hashOfConfig":"26"},{"size":6622,"mtime":1639569239257,"results":"42","hashOfConfig":"26"},{"size":0,"mtime":1639569239260,"results":"43","hashOfConfig":"26"},{"size":851,"mtime":1639569239261,"results":"44","hashOfConfig":"26"},{"size":6126,"mtime":1639577575037,"results":"45","hashOfConfig":"26"},{"size":6100,"mtime":1639569239260,"results":"46","hashOfConfig":"26"},{"size":530,"mtime":1639569239260,"results":"47","hashOfConfig":"26"},{"size":3602,"mtime":1639569239260,"results":"48","hashOfConfig":"26"},{"size":815,"mtime":1639569239261,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1cit8of",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/index.js",[],["107","108"],"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/App.js",[],"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/Pages/ProteinTrackerPage.js",[],"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/Pages/HomePage.js",[],"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/Pages/StartWorkoutPage.js",["109","110"],"import '../components/WorkoutComponents/StartWorkoutPage.css';\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport ExerciseCard from '../components/ExerciseCard';\nimport RecordForm from '../components/WorkoutComponents/RecordForm';\nimport Timer from '../components/WorkoutComponents/Timer';\nimport '../components/WorkoutComponents/StartWorkoutPage.css'\n\nconst StartWorkoutPage = () => {\n\n    const {id} = useParams();\n    const [exercises,setExercises] = useState([]);\n    // const [currentExercise, setCurrentExercise] = useState([]);\n    const [nextExercise, setNextExercise] = useState(0);\n    // const {initialMinute} = 0\n    // const {initialSeconds} = 0\n\n    let exerciseCount = 0;\n\n    const getExercisesByWorkoutId = () => {\n        fetch(`http://localhost:8080/api/v1/exercises/workout/id/${id}`)\n        .then(response => response.json())\n        .then(data => setExercises(data[nextExercise]))\n\n    }\n\n    useEffect(getExercisesByWorkoutId, [nextExercise]);\n\n    const counter = () => {\n\n        if(nextExercise < 2) {\n            setNextExercise(nextExercise + 1);\n        }\n        console.log(nextExercise)\n    };\n    // construct a new object from exercisedp\n\n    const onAddExerciseDataPoint = (newExerciseDataPoint) => {\n        // const new object = create object that matches backend, map the object \n    fetch(\"http://localhost:8080/api/v1/data/record\", {\n        method: \"POST\",\n        headers: {\n            'Content-type': 'application/json'\n        },\n        body: JSON.stringify(newExerciseDataPoint)\n    })\n    .then(data => console.log(data))\n}\n\n\n    return(\n        <>\n            <div className=\"preset-beginner-title\">\n                <h1>Workout Routine:</h1>\n            </div>\n\n            <div className=\"start-workout-page-container\">\n                \n\n                <div className=\"beginner-current-exercise\">\n                    <h1>Current Exercise</h1>\n                    <ExerciseCard exercise={exercises} />\n                </div>\n\n                <div>\n                    <RecordForm exercise={exercises} onAddExerciseDataPoint = {onAddExerciseDataPoint}/>\n                </div>\n\n                <div>\n                    <Timer/>\n                </div>\n\n            </div>\n\n\n            <button className = \"next-workout-button\" onClick={counter}>Next Workout</button>\n\n        </>\n    )\n\n}\n\nexport default StartWorkoutPage;","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/Pages/MyWorkoutsPage.js",["111"],"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/Pages/WorkoutPage.js",["112","113"],"import Workout from \"../components/Workout\"\nimport { useState, useEffect } from \"react\";\nimport { Navigate, useParams } from \"react-router\";\nimport StartWorkoutButton from \"../components/StartWorkoutButton\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst WorkoutPage = () => {\n\n    const {id} = useParams();\n    const [exercises,setExercises] = useState([])\n\n\n\n    const getExercisesByWorkoutId = () => {\n        fetch(`http://localhost:8080/api/v1/exercises/workout/id/${id}`)\n        .then(response => response.json())\n        .then(data => setExercises(data))\n    }\n\n    useEffect(getExercisesByWorkoutId, []);\n\n    let navigate = useNavigate();\n\n    const goWorkout = () => {\n        navigate(\"/StartWorkoutPage\")\n    }\n\n    return(\n        <>\n        <div className=\"preset-beginner-title\">\n            <h1>Workout Routine:</h1>\n        </div>\n\n        <div className=\"preset-beginner-exercises\">\n            <Workout exercises = {exercises}/>\n        </div>\n\n        <div>\n            <StartWorkoutButton workoutId={id} goWorkout={goWorkout}/>\n        </div>\n\n        \n        {/* {exerciseTargets.map(exerciseTarget => <div>{exerciseTarget.exercise_Id}</div>)} */}\n        </>\n    )\n\n}\n\nexport default WorkoutPage;","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/Navbar.js",[],"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/containers/MyStatsContainer.js",[],"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/Workout.js",["114"],"import React from 'react';\nimport './Workout.css';\nimport ExerciseCard from './ExerciseCard';\nimport ExerciseTarget from './ExerciseTarget';\n\nconst Workout = ({exercises}) => {\n\n\n    //from exerciseTarget get exerciseId, then link to exerciseName in exercises\n\n    //filter exercises by exercise_Id, return exercise.name\n\n    // const mapExerciseTarget = exerciseTargets.map(exerciseTarget => {\n    //     exerciseTarget.exercise_Id;\n    // });\n\n    const exerciseElements = exercises.map(exercise => {\n        return(\n            <ExerciseCard exercise = {exercise} />\n        )\n    }\n      \n    )\n        \n    // const mapExercise = exercises.map(exercise => {\n\n    //     // if(exercise.id === exerciseTargets.exercise_Id) {\n    //         return(\n    //             <Exercise id={exercise.id}/>\n    //         )\n    //     // }\n\n    // })\n\n    // const filteredExercise = (exercise_Id) => exercises.filter(exercises => {\n        \n    // })\n    // () => {\n    //     if (targetExercise.exercise_Id === exercise.id){\n    //         return exercises.filter(exercise => {\n    //             return exercise.name\n    //         })\n    //     }\n    // }\n    \n    // const exerciseName = (exerciseTargets, {mapExercise}) => {\n    //     if(exerciseTargets.exercise_Id === {mapExercise}) {\n    //         return {exercise.name}\n    //     }\n            \n\n    // }\n\n    \n    return (\n        <>\n        {exerciseElements}\n\n        {/* {exerciseName(exerciseTargets, exercises)} \n        {exercises.map(exercise => {if(exercise.id === exerciseName(exerciseTargets)) return <div> {exercise.name} </div>})}\n        {exerciseTargets.map(exerciseTarget => <div> Sets {exerciseTarget.sets}</div>)}\n        {exerciseTargets.map(exerciseTarget => <div> Reps {exerciseTarget.reps}</div>)}\n        {exerciseTargets.map(exerciseTarget => <div> Time {exerciseTarget.time}</div>)}\n        {exerciseTargets.map(exerciseTarget => <div> Distance {exerciseTarget.distance}</div>)}\n        {exerciseTargets.map(exerciseTarget => <div> Weight {exerciseTarget.weight}</div>)} */}\n        </>\n    )\n}\n\n\nexport default Workout;\n","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutsList.js",["115"],"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseCard.js",["116","117","118","119"],"import React from 'react';\nimport cardio from '../Icons/cardio.png';\nimport calisthenic from '../Icons/back-lever.png';\nimport weight from '../Icons/dumbbell.png';\n\nconst ExerciseCard = ({exercise}) => {\n    switch(exercise.exerciseType)\n    {\n        case \"CALISTHENICS\":\n            return(\n            <>\n                <div className=\"calisthenics-workout\">\n                    <img className=\"calisthenics-image\" src={calisthenic} />\n                    \n                    <div className=\"calisthenics-workout-container\">\n                        <p className=\"calisthenics-workout-name\">{exercise.name}</p>\n\n                    <div className=\"calisthenics-workout-targets\">\n                        <p>Sets: {exercise.targetReps}</p>\n                        <p>Reps: {exercise.targetSets}</p>\n                    </div>\n                </div>\n            </div>\n            </>\n            )\n        case \"WEIGHTS\":\n            return(\n            <div className=\"weights-workout\">\n                <img className = 'weight-image' src = \"https://www.vippng.com/png/detail/55-554509_dumbbells-clipart-svg-gym-weight-icon-png.png\" />\n                <div className=\"weights-workout-container\">\n                    <p className=\"weights-workout-name\">{exercise.name}</p>\n                    <div className=\"cardio-workout-targets\">\n                        <p id = \"weights-workout-sets\">Sets: {exercise.targetSets}</p>\n                        <p id = \"weights-workout-reps\"> Reps: {exercise.targetReps}</p>\n                        <p id = \"weights-workout-weights\">Weights: {exercise.targetWeights}</p>\n                 </div>\n                </div>\n            </div>\n            )\n        case \"CARDIO\":\n            return(\n            <>\n                <div className=\"cardio-workout\">\n                    <img className=\"cardio-image\" src={cardio}/>    \n\n                    <div className=\"cardio-workout-container\">\n                        <p className=\"cardio-workout-name\">{exercise.name}</p>\n\n                        <div className=\"cardio-workout-targets\">\n                            <p id=\"cardio-workout-distance\">Distance: {exercise.targetDistance}</p>\n                            <p id=\"cardio-workout-time\">Time: {exercise.targetTime}</p>\n                        </div>\n                    </div>\n                </div>\n            </>\n            )\n        default: console.log(\"Unmatched exercise type\")\n    }\n\n    return (\n        <>\n            {ExerciseCard}\n\n\n        {/* <p>Time: {exercise.targetTime}</p>\n        <p>Distance: {exercise.targetDistance}</p>\n        <p>Sets: {exercise.targetSets}</p>\n        <p>Reps: {exercise.targetReps}</p>\n        <p>Weight: {exercise.targetWeight}</p> */}\n        </>\n\n    )\n}\n\nexport default ExerciseCard;\n","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseDropdownSearch.js",[],"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/StartWorkoutButton.js",["120","121","122","123"],"import React from 'react';\nimport './Workout.css';\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst StartWorkoutButton = ({workoutId, goWorkout}) => {\n    \n    const [exerciseTargets,setExerciseTargets] = useState([])\n\n    const getExerciseTargets = () =>{\n\n    }\n    return (\n        <>\n        <Link to={{ pathname: `/StartWorkoutPage/${workoutId}` }}>\n        {/* <div className=\"all-buttons\"> */}\n            {/* currentExercise === exercises.length ? */}\n            <button onClick = {()=>goWorkout(workoutId)}>Start Workout</button>\n            {/* : */}\n\n\n            {/* <div className=\"button-1\">\n                <button onClick = {getExerciseTargets(id)} className=\"beginner-button\"> Beginner Workout </button>\n            </div> */}\n        {/* </div> */}\n        </Link>\n        </>\n        \n    )\n\n\n\n}\n\nexport default StartWorkoutButton;","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutComponents/Timer.js",[],"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/Graph.js",["124"],"import {Line} from 'react-chartjs-2';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport {CategoryScale} from 'chart.js';\nimport Chart from 'chart.js/auto';\nChart.register(CategoryScale);\n\nconst Graph=({valuesToGraph, exerciseType})=>{\n\n    const [chartData,setChartData]=useState([]);\n\n\n    useEffect(() => {\n        setChartData({\n            labels: valuesToGraph.map((value => value.date)),\n            valuesTime: valuesToGraph.map((value => value.timeAchieved)),\n            valuesDistance: valuesToGraph.map((value => value.distanceAchieved)),\n            valuesSets: valuesToGraph.map((value => value.setsAchieved)),\n            valuesReps: valuesToGraph.map((value => value.repsAchieved)),\n            valuesWeight: valuesToGraph.map((value => value.weightAchieved))\n        }\n    )},[valuesToGraph]);\n\n    let yAxisLabel;\n    let yAxisData;\n    let unit;\n\n    if (exerciseType === \"WEIGHTS\") {\n      yAxisData = chartData.valuesWeight;\n      unit = \"kg\";\n      yAxisLabel = \"Weight Lifted\"\n    } else if (exerciseType === \"CALISTHENICS\") {\n      yAxisData = chartData.valuesSets.map(function (n, i) {\n        return n * chartData.valuesReps[i];\n      });\n      unit = \"reps\";\n      yAxisLabel = \"Total Reps\"\n    } else if (exerciseType === \"CARDIO\") {\n      yAxisData = chartData.valuesDistance.map(function (n, i) {\n        return n / chartData.valuesTime[i];\n      });\n      unit = \"meters/min\";\n      yAxisLabel = \"Pace\"\n    }\n\n    const data = {\n      datasets: [\n        {\n          label: valuesToGraph.date,\n          data: yAxisData,\n          fill: true,\n          backgroundColor: \"transparent\",\n          borderColor: \"rgba(255,30,0, 0.50)\",\n          pointBackgroundColor: \"rgba(255, 255, 255, 1)\",\n          tension: 0.15,\n          fill: {\n            target: \"origin\",\n            above: \"rgba(255,69,0,0.6)\", // Area will be red above the origin\n            below: \"rgb(0, 0, 255)\", // And blue below the origin\n          },\n        },\n      ],\n    };\n\n    return valuesToGraph ? (\n      <>\n        {console.log(exerciseType)}\n        {console.log(data)}\n\n        <p>Hello</p>\n        <div id=\"name\">\n          <Line\n            data={data}\n            options={{\n              scales: {\n                x: {\n                  labels: chartData.labels,\n                  title: {\n                    color: \"black\",\n                    display: true,\n                    text: \"Date\",\n                  },\n                },\n                y: {\n                  labels: data.datasets.data,\n                  ticks: {\n                    callback: function (value) {\n                      return value + ` ${unit}`;\n                    },\n                  },\n                  title: {\n                    color: \"black\",\n                    display: true,\n                    text: `${yAxisLabel}`,\n                  },\n                },\n              },\n            }}\n          />\n        </div>\n      </>\n    ) : (\n      <p>Loading...</p>\n    );\n}\n \n\nexport default Graph;","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutComponents/RecordForm.js",["125"],"import React from 'react'\nimport { useState, useEffect } from 'react';\nimport './StartWorkoutPage.css';\n\nconst RecordForm = ({exercise, onAddExerciseDataPoint}) => {\n\n    const[sets, setSets] = useState(\"\");\n    const[reps, setReps] = useState(\"\");\n    const[weights, setWeights] = useState(\"\");\n    const[time, setTime] = useState(\"\");\n    const[distance, setDistance] = useState(\"\");\n    const[date, setDate] = useState(\"\") \n\n    const handleSetsChange = (event) => {\n        setSets(event.target.value);\n    }\n\n    const handleDateChange = (event) => {\n           setDate(event.target.value)\n       } \n\n    const handleRepsChange = (event) => {\n        setReps(event.target.value);\n    }\n\n    const handleWeightsChange = (event) => {\n        setWeights(event.target.value);\n    }\n\n    const handleTimeChange = (event) => {\n        setTime(event.target.value);\n    }\n\n    const handleDistanceChange = (event) => {\n        setDistance(event.target.value);\n    }\n\n    const handleSubmitTarget = (event) => {\n        event.preventDefault();\n\n        const newExerciseDataPoint = {\n            \"exerciseID\": exercise.exercise_Id,\n            \"name\": exercise.name,\n            \"date\": date, \n            \"timeAchieved\": time,\n            \"distanceAchieved\": distance,\n            \"setsAchieved\": sets,\n            \"repsAchieved\": reps,\n            \"weightAchieved\": weights\n        }\n\n        onAddExerciseDataPoint(newExerciseDataPoint);\n        setDate(\"\") \n        setSets(\"\");\n        setReps(\"\");\n        setWeights(\"\");\n        setTime(\"\");\n        setDistance(\"\");\n    }\n\n\n    //TODO: Enter numbers only!\n    //TODO: For weights enter lb/kg\n    const displayForm = () => {\n        // console.log(exercise);\n        if(exercise) {\n                switch(exercise.exerciseType) {\n                case \"CALISTHENICS\":\n                    // console.log(\"calisthenics\");\n                    return (\n                    <>\n                        <div className=\"calisthenics-data\">\n                            \n                            <div className=\"calisthenics-data-container\">\n                                <p className=\"calisthenics-data-name\">{exercise.name}</p>\n\n                                <div className=\"calisthenics-data-targets\">\n                                    <form onSubmit={handleSubmitTarget}>\n                                        <label>Date:\n                                            <input type=\"text\" placeholder = \"yyyy-mm-dd\" onChange={handleDateChange}/>\n                                        </label>\n                                        <label>Sets Achieved:\n                                            <input type=\"text\" placeholder = \"enter sets completed\" onChange={handleSetsChange}/>\n                                        </label>\n                                        <label>Reps Achieved:\n                                            <input type=\"text\" placeholder = \"enter reps completed\" onChange={handleRepsChange}/>\n                                        </label>\n                                        <input type=\"submit\" value=\"Add\"/>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                    )\n                case \"WEIGHTS\":\n                    // console.log(\"weights\");\n                    return(\n                    <div className=\"weights-data\">\n\n                    <div className=\"weights-data-container\">\n                        <p className=\"weights-data-name\">{exercise.name}</p>\n\n                        <div className=\"weights-data-targets\">\n                                <form onSubmit={handleSubmitTarget}>\n                                    <label>Date:\n                                            <input type=\"text\" placeholder = \"yyyy-mm-dd\" onChange={handleDateChange}/>\n                                    </label>\n                                    <label>Sets Achieved:\n                                        <input type=\"text\" placeholder = \"enter sets completed\" onChange={handleSetsChange}/>\n                                    </label>\n                                    <label>Reps Achievced:\n                                        <input type=\"text\" placeholder = \"enter reps completed\" onChange={handleRepsChange}/>\n                                    </label>\n                                    <label>Weights Achievced:\n                                        <input type=\"text\" placeholder = \"enter weights completed\" onChange={handleWeightsChange}/>\n                                    </label>\n                                    <input type=\"submit\" value=\"Add\"/>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    )\n                case \"CARDIO\":\n                    // console.log(\"cardio\")\n                    return(\n                    <>\n                        <div className=\"cardio-data\">\n                            <div className=\"cardio-data-container\">\n                                <p className=\"cardio-data-name\">{exercise.name}</p>\n\n                                <div className=\"cardio-data-targets\">\n                                    <form onSubmit={handleSubmitTarget}>\n                                        <label>Date:\n                                            <input type=\"text\" placeholder = \"yyyy-mm-dd\" onChange={handleDateChange}/>\n                                        </label>\n                                        <label>Time Achieved:\n                                            <input type=\"text\" placeholder = \"enter duration\" onChange={handleTimeChange}/>\n                                        </label>\n                                        <label>Distance Achieved:\n                                            <input type=\"text\" placeholder = \"enter distance achieved\" onChange={handleDistanceChange}/>\n                                        </label>\n                                        <input type=\"submit\" value=\"Add\"/>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                    )\n                default: console.log(\"Unmatched exercise type\")\n            }\n        }\n    }\n\n    useEffect(displayForm, [exercise]);\n\n    return (\n        <>\n        <h1 class=\"review-form-name\">Review Form</h1>\n        {displayForm({exercise})}\n        </>\n    )\n\n}\n\nexport default RecordForm;\n","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseTarget.js",[],"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutButton.js",["126","127","128","129"],"import React from 'react';\nimport './Workout.css';\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst WorkoutButton = ({workout, goWorkout}) => {\n    \n    const [exerciseTargets,setExerciseTargets] = useState([])\n\n    \n    const getExerciseTargets = () =>{\n\n    }\n    return (\n        <>\n        <Link to={{ pathname: `/WorkoutPage/${workout.id}` }}>\n        {/* <div className=\"all-buttons\"> */}\n            \n            <button class = \"workout-routine-button\" onClick = {()=>goWorkout(workout.id)}>{workout.name}</button>\n\n            {/* <div className=\"button-1\">\n                <button onClick = {getExerciseTargets(id)} className=\"beginner-button\"> Beginner Workout </button>\n            </div> */}\n        {/* </div> */}\n        </Link>\n        </>\n        \n    )\n\n\n\n}\n\nexport default WorkoutButton;\n","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/containers/NewWorkoutContainer.js",["130","131","132","133","134","135","136"],"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseTargetForm.js",["137","138","139","140","141","142"],"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseCardList.js",[],"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseTargetCard.js",["143","144","145","146"],"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/BNTA-Capstone/frontEnd/src/components/NewExerciseTargetList.js",["147","148"],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":18,"column":9,"nodeType":"155","messageId":"156","endLine":18,"endColumn":22},{"ruleId":"157","severity":1,"message":"158","line":27,"column":40,"nodeType":"159","endLine":27,"endColumn":54,"suggestions":"160"},{"ruleId":"153","severity":1,"message":"161","line":3,"column":10,"nodeType":"155","messageId":"156","endLine":3,"endColumn":14},{"ruleId":"153","severity":1,"message":"162","line":3,"column":10,"nodeType":"155","messageId":"156","endLine":3,"endColumn":18},{"ruleId":"157","severity":1,"message":"158","line":20,"column":40,"nodeType":"159","endLine":20,"endColumn":42,"suggestions":"163"},{"ruleId":"153","severity":1,"message":"164","line":4,"column":8,"nodeType":"155","messageId":"156","endLine":4,"endColumn":22},{"ruleId":"153","severity":1,"message":"165","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":15},{"ruleId":"153","severity":1,"message":"166","line":4,"column":8,"nodeType":"155","messageId":"156","endLine":4,"endColumn":14},{"ruleId":"167","severity":1,"message":"168","line":13,"column":21,"nodeType":"169","endLine":13,"endColumn":77},{"ruleId":"167","severity":1,"message":"168","line":29,"column":17,"nodeType":"169","endLine":29,"endColumn":149},{"ruleId":"167","severity":1,"message":"168","line":44,"column":21,"nodeType":"169","endLine":44,"endColumn":65},{"ruleId":"153","severity":1,"message":"170","line":3,"column":20,"nodeType":"155","messageId":"156","endLine":3,"endColumn":29},{"ruleId":"153","severity":1,"message":"171","line":8,"column":12,"nodeType":"155","messageId":"156","endLine":8,"endColumn":27},{"ruleId":"153","severity":1,"message":"172","line":8,"column":28,"nodeType":"155","messageId":"156","endLine":8,"endColumn":46},{"ruleId":"153","severity":1,"message":"173","line":10,"column":11,"nodeType":"155","messageId":"156","endLine":10,"endColumn":29},{"ruleId":"174","severity":1,"message":"175","line":56,"column":11,"nodeType":"176","messageId":"177","endLine":56,"endColumn":15},{"ruleId":"157","severity":1,"message":"178","line":154,"column":28,"nodeType":"159","endLine":154,"endColumn":38,"suggestions":"179"},{"ruleId":"153","severity":1,"message":"170","line":3,"column":20,"nodeType":"155","messageId":"156","endLine":3,"endColumn":29},{"ruleId":"153","severity":1,"message":"171","line":8,"column":12,"nodeType":"155","messageId":"156","endLine":8,"endColumn":27},{"ruleId":"153","severity":1,"message":"172","line":8,"column":28,"nodeType":"155","messageId":"156","endLine":8,"endColumn":46},{"ruleId":"153","severity":1,"message":"173","line":11,"column":11,"nodeType":"155","messageId":"156","endLine":11,"endColumn":29},{"ruleId":"153","severity":1,"message":"180","line":3,"column":8,"nodeType":"155","messageId":"156","endLine":3,"endColumn":24},{"ruleId":"153","severity":1,"message":"181","line":4,"column":8,"nodeType":"155","messageId":"156","endLine":4,"endColumn":20},{"ruleId":"153","severity":1,"message":"161","line":7,"column":10,"nodeType":"155","messageId":"156","endLine":7,"endColumn":14},{"ruleId":"153","severity":1,"message":"182","line":17,"column":11,"nodeType":"155","messageId":"156","endLine":17,"endColumn":28},{"ruleId":"153","severity":1,"message":"183","line":17,"column":30,"nodeType":"155","messageId":"156","endLine":17,"endColumn":50},{"ruleId":"184","severity":1,"message":"185","line":99,"column":30,"nodeType":"186","messageId":"177","endLine":99,"endColumn":32},{"ruleId":"187","severity":1,"message":"188","line":129,"column":50,"nodeType":"189","messageId":"190","endLine":129,"endColumn":52},{"ruleId":"153","severity":1,"message":"191","line":3,"column":8,"nodeType":"155","messageId":"156","endLine":3,"endColumn":15},{"ruleId":"153","severity":1,"message":"192","line":14,"column":11,"nodeType":"155","messageId":"156","endLine":14,"endColumn":28},{"ruleId":"167","severity":1,"message":"168","line":78,"column":29,"nodeType":"169","endLine":78,"endColumn":85},{"ruleId":"167","severity":1,"message":"168","line":102,"column":25,"nodeType":"169","endLine":102,"endColumn":77},{"ruleId":"167","severity":1,"message":"168","line":129,"column":29,"nodeType":"169","endLine":129,"endColumn":73},{"ruleId":"157","severity":1,"message":"193","line":154,"column":28,"nodeType":"159","endLine":154,"endColumn":38,"suggestions":"194"},{"ruleId":"153","severity":1,"message":"195","line":5,"column":8,"nodeType":"155","messageId":"156","endLine":5,"endColumn":11},{"ruleId":"167","severity":1,"message":"168","line":25,"column":29,"nodeType":"169","endLine":25,"endColumn":85},{"ruleId":"167","severity":1,"message":"168","line":60,"column":29,"nodeType":"169","endLine":60,"endColumn":73},{"ruleId":"157","severity":1,"message":"196","line":81,"column":28,"nodeType":"159","endLine":81,"endColumn":38,"suggestions":"197"},{"ruleId":"153","severity":1,"message":"198","line":1,"column":8,"nodeType":"155","messageId":"156","endLine":1,"endColumn":26},{"ruleId":"153","severity":1,"message":"170","line":3,"column":10,"nodeType":"155","messageId":"156","endLine":3,"endColumn":19},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'exerciseCount' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["201"],"'Link' is defined but never used.","'Navigate' is defined but never used.",["202"],"'ExerciseTarget' is defined but never used.","'Workout' is defined but never used.","'weight' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'exerciseTargets' is assigned a value but never used.","'setExerciseTargets' is assigned a value but never used.","'getExerciseTargets' is assigned a value but never used.","no-dupe-keys","Duplicate key 'fill'.","ObjectExpression","unexpected","React Hook useEffect has a missing dependency: 'handleSubmitTarget'. Either include it or remove the dependency array.",["203"],"'ExerciseCardList' is defined but never used.","'ExerciseCard' is defined but never used.","'visibleSaveButton' is assigned a value but never used.","'setVisibleSaveButton' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'weights' is defined but never used.","'newExerciseTarget' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleSubmitTarget' and 'weights'. Either include them or remove the dependency array.",["204"],"'bin' is defined but never used.","React Hook useEffect has a missing dependency: 'handleDelete'. Either include it or remove the dependency array.",["205"],"'ExerciseTargetForm' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},"Update the dependencies array to be: [id, nextExercise]",{"range":"216","text":"217"},"Update the dependencies array to be: [id]",{"range":"218","text":"219"},"Update the dependencies array to be: [exercise, handleSubmitTarget]",{"range":"220","text":"221"},"Update the dependencies array to be: [exercise, handleSubmitTarget, weights]",{"range":"222","text":"223"},"Update the dependencies array to be: [exercise, handleDelete]",{"range":"224","text":"225"},[994,1008],"[id, nextExercise]",[617,619],"[id]",[6447,6457],"[exercise, handleSubmitTarget]",[5973,5983],"[exercise, handleSubmitTarget, weights]",[3475,3485],"[exercise, handleDelete]"]