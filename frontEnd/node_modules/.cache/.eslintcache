[{"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\index.js":"1","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\App.js":"2","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\HomePage.js":"3","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\ProteinTrackerPage.js":"4","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\containers\\MyStatsContainer.js":"5","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\Navbar.js":"6","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\StartWorkoutPage.js":"7","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\WorkoutPage.js":"8","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\MyWorkoutsPage.js":"9","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\containers\\NewWorkoutContainer.js":"10","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\Graph.js":"11","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseDropdownSearch.js":"12","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\Workout.js":"13","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\StartWorkoutButton.js":"14","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseCard.js":"15","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutsList.js":"16","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutComponents\\FinishedWorkoutModal.js":"17","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\NewExerciseTargetList.js":"18","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutComponents\\RecordForm.js":"19","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutComponents\\Timer.js":"20","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseTarget.js":"21","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutButton.js":"22","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseTargetCard.js":"23"},{"size":769,"mtime":1639582479512,"results":"24","hashOfConfig":"25"},{"size":1272,"mtime":1639612412629,"results":"26","hashOfConfig":"25"},{"size":1549,"mtime":1639604052204,"results":"27","hashOfConfig":"25"},{"size":162,"mtime":1639047547775,"results":"28","hashOfConfig":"25"},{"size":1944,"mtime":1639611073614,"results":"29","hashOfConfig":"25"},{"size":744,"mtime":1639604234796,"results":"30","hashOfConfig":"25"},{"size":4386,"mtime":1639654609166,"results":"31","hashOfConfig":"25"},{"size":1347,"mtime":1639651791053,"results":"32","hashOfConfig":"25"},{"size":806,"mtime":1639612437987,"results":"33","hashOfConfig":"25"},{"size":6152,"mtime":1639651791068,"results":"34","hashOfConfig":"25"},{"size":3221,"mtime":1639612399884,"results":"35","hashOfConfig":"25"},{"size":667,"mtime":1639608319988,"results":"36","hashOfConfig":"25"},{"size":2172,"mtime":1639566938358,"results":"37","hashOfConfig":"25"},{"size":962,"mtime":1639612399472,"results":"38","hashOfConfig":"25"},{"size":2931,"mtime":1639654124347,"results":"39","hashOfConfig":"25"},{"size":978,"mtime":1639612399852,"results":"40","hashOfConfig":"25"},{"size":635,"mtime":1639651791025,"results":"41","hashOfConfig":"25"},{"size":789,"mtime":1639651791058,"results":"42","hashOfConfig":"25"},{"size":8127,"mtime":1639658825119,"results":"43","hashOfConfig":"25"},{"size":1458,"mtime":1639651791044,"results":"44","hashOfConfig":"25"},{"size":0,"mtime":1639566925403,"results":"45","hashOfConfig":"25"},{"size":917,"mtime":1639607328333,"results":"46","hashOfConfig":"25"},{"size":3691,"mtime":1639566953198,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"qfve4r",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"50"},"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\index.js",[],["105","106"],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\App.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\HomePage.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\ProteinTrackerPage.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\containers\\MyStatsContainer.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\Navbar.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\StartWorkoutPage.js",["107","108","109","110","111","112"],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\WorkoutPage.js",["113","114"],"import Workout from \"../components/Workout\"\r\nimport { useState, useEffect } from \"react\";\r\nimport { Navigate, useParams } from \"react-router\";\r\nimport StartWorkoutButton from \"../components/StartWorkoutButton\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../components/Workout.css\"\r\n\r\nconst WorkoutPage = () => {\r\n\r\n    const {id} = useParams();\r\n    const [exercises,setExercises] = useState([])\r\n\r\n\r\n\r\n    const getExercisesByWorkoutId = () => {\r\n        fetch(`http://localhost:8080/api/v1/exercises/workout/id/${id}`)\r\n        .then(response => response.json())\r\n        .then(data => setExercises(data))\r\n    }\r\n\r\n    useEffect(getExercisesByWorkoutId, []);\r\n\r\n    let navigate = useNavigate();\r\n\r\n    const goWorkout = () => {\r\n        navigate(\"/StartWorkoutPage\")\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <div className=\"preset-beginner-title\">\r\n            <h1>Workout Routine:</h1>\r\n        </div>\r\n\r\n        <div className=\"preset-beginner-exercises\">\r\n            <Workout exercises = {exercises}/>\r\n        </div>\r\n\r\n        <div className=\"start-workout-wrapper\">\r\n            <StartWorkoutButton workoutId={id} goWorkout={goWorkout}/>\r\n        </div>\r\n\r\n        \r\n        {/* {exerciseTargets.map(exerciseTarget => <div>{exerciseTarget.exercise_Id}</div>)} */}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default WorkoutPage;","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\MyWorkoutsPage.js",["115"],"import React, { useState, useEffect } from \"react\";\r\nimport WorkoutsList from \"../components/WorkoutsList\"\r\nimport \"../Styles/MyWorkoutsPage.css\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MyWorkoutsPage = () => {\r\n  const [workouts, setWorkouts] = useState([]);\r\n  // const [exerciseTargets, setExerciseTargets] = useState([]);\r\n\r\n  const getAllWorkouts = () => {\r\n    fetch(\"http://localhost:8080/api/v1/workout\")\r\n    .then(response => response.json())\r\n    .then(data => setWorkouts(data))\r\n  }\r\n  \r\n  useEffect(getAllWorkouts, [])\r\n  // useEffect(getAllExerciseTargets, [])\r\n  \r\n    return(\r\n\r\n        <>\r\n        <h1 className=\"pageTitle\">My Workouts</h1>\r\n          <WorkoutsList workouts = {workouts} />\r\n          \r\n\r\n          \r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default MyWorkoutsPage;","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\containers\\NewWorkoutContainer.js",["116","117","118","119","120","121","122"],"import { useState, useEffect } from \"react\";\r\nimport ExerciseDropdownSearch from \"../components/ExerciseDropdownSearch\";\r\n// import ExerciseTargetForm from \"../components/ExerciseTargetForm\";\r\nimport NewExerciseTargetList from \"../components/NewExerciseTargetList\";\r\nimport { Link } from \"react-router-dom\";\r\nconst NewWorkoutContainer = () => {\r\n    \r\n    const[allExercises, setAllExercises] = useState([]);\r\n    const[selectedExercise, setSelectedExercise] = useState(null);\r\n    const[DropSelect, setDropSelect]=useState(null);\r\n    const[exerciseTarget, setExerciseTarget] = useState(null);\r\n    const[newExerciseTargetList, setNewExerciseTargetList] = useState([]);\r\n    const[workoutName, setWorkoutName] = useState([]);\r\n    // const[workoutId, setWorkoutId] = useState(\"\");\r\n    const[visibleSaveButton, setVisibleSaveButton] = useState(false);\r\n\r\n    const getSelectedExercise =()=>{\r\n        if(DropSelect){\r\n        fetch(`http://localhost:8080/api/v1/exercises/id/${DropSelect}`)\r\n        .then(response => response.json())\r\n        .then(data => setSelectedExercise(data));\r\n        }\r\n    }\r\n\r\n    useEffect(getSelectedExercise, [DropSelect]);\r\n\r\n    const updateDrop=(event) => {\r\n        setDropSelect(event.target.value);\r\n    }\r\n\r\n    const getAllExercises = () => {\r\n        fetch(\"http://localhost:8080/api/v1/exercises\")\r\n            .then(response => response.json())\r\n            .then(data => setAllExercises(data))\r\n    }\r\n\r\n    useEffect(getAllExercises, []);\r\n\r\n    const getAllExerciseTargets = () => {\r\n        fetch(\"http://localhost:8080/api/v1/exerciseTargets\")\r\n            .then(response => response.json())\r\n            .then(data => setExerciseTarget(data))\r\n            .then(console.log(exerciseTarget))\r\n    }\r\n\r\n    const onAddExerciseTarget = (newExerciseTarget) => {\r\n        // console.log(newExerciseTarget);\r\n\r\n        if(newExerciseTarget === newExerciseTargetList[newExerciseTargetList.length-1]) {\r\n            console.log(\"same\");\r\n        }\r\n        else{\r\n            setNewExerciseTargetList([...newExerciseTargetList, newExerciseTarget]);\r\n        }\r\n\r\n        //add exercise target to a list of newWorkoutExerciseTargetsList\r\n        \r\n        // fetch(\"http://localhost:8080/api/v1/exerciseTargets\", {\r\n        //     method: \"POST\",\r\n        //     headers: {\r\n        //         'Content-type': 'application/json'\r\n        //     },\r\n        //     body: JSON.stringify(newExerciseTarget)\r\n        // })\r\n        // .then(() => getAllExerciseTargets());\r\n    }\r\n\r\n    const deleteCard = (id) => {\r\n        const card = newExerciseTargetList.filter(exercise => {\r\n            return (\r\n                exercise.exercise_Id !== id\r\n        )\r\n    })\r\n        setNewExerciseTargetList(card);\r\n    }\r\n\r\n    const handleWorkoutName = (event) => {\r\n        setWorkoutName(event.target.value);\r\n    }\r\n\r\n    // const workoutNameForm = () => {\r\n    //     return (\r\n    //         <form>\r\n    //             <label>Workout Name:\r\n    //                 <input type=\"text\" onChange={handleWorkoutName}/>\r\n    //             </label>\r\n    //         </form>\r\n    //     )\r\n    // }\r\n\r\n    const getWorkoutId = () => {\r\n        return fetch(\"http://localhost:8080/api/v1/workout\")\r\n                .then(response => response.json())\r\n                .then(data => data.filter(workout => {\r\n                    console.log(\"workout: \", workout);\r\n                    return (\r\n                        workout.name == workoutName\r\n                    )\r\n                }))\r\n                .then(workout => {return(workout[0].id)})\r\n    }\r\n\r\n    const saveWorkout = () => {\r\n        //create new workout object, post it, get workoutId\r\n        const newWorkout = {\r\n            \"name\": workoutName\r\n        }\r\n\r\n        fetch(\"http://localhost:8080/api/v1/workout\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newWorkout)\r\n        })\r\n        .then(() => getWorkoutId())\r\n        //anonymous function, take nothing and call the function\r\n        .then((workoutId) => {\r\n            console.log(\"workoutId: \", workoutId);\r\n            postExerciseTargets(workoutId)});\r\n        \r\n        //exerciseTarget object to match with database\r\n        // postExerciseTargets();\r\n    }\r\n\r\n    const postExerciseTargets = (workoutId) => {\r\n        newExerciseTargetList.map(exerciseTarget => {\r\n\r\n        const newExerciseTarget = { \r\n            \"exercise_Id\": exerciseTarget.exercise_Id,\r\n            \"workout_Id\": workoutId,\r\n            \"time\": exerciseTarget.targetTime,\r\n            \"distance\": exerciseTarget.targetDistance,\r\n            \"sets\": exerciseTarget.targetSets,\r\n            \"reps\": exerciseTarget.targetReps,\r\n            \"weight\": exerciseTarget.targetWeight\r\n        }\r\n\r\n        fetch(\"http://localhost:8080/api/v1/exerciseTargets\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newExerciseTarget)\r\n        })\r\n        .then(data => console.log(data))  \r\n    })\r\n    getAllExerciseTargets();\r\n}\r\n\r\n    const saveButton = newExerciseTargetList.length > 0 ? <button onClick={saveWorkout}>Save</button> : null\r\n\r\n    return (\r\n        allExercises.length > 0\r\n        ?\r\n        <>\r\n        <p>NavBar</p> \r\n        <p>New Workout Page</p>\r\n            <form>\r\n                <label>Workout Name:\r\n                    <input type=\"text\" onChange={handleWorkoutName}/>\r\n                </label>\r\n            </form>\r\n        {/* {workoutNameForm} */}\r\n        <ExerciseDropdownSearch allExercises = {allExercises} updateDrop={updateDrop}/>\r\n        {/* <ExerciseTargetForm exercise={selectedExercise} onAddExerciseTarget={onAddExerciseTarget}/> */}\r\n        <NewExerciseTargetList newExerciseTargetList={newExerciseTargetList} deleteCard={deleteCard} />\r\n        {saveButton}\r\n        {/* <saveButton /> */}\r\n        {/* <button onClick={saveWorkout}>Save</button> */}\r\n        \r\n        </>\r\n        :\r\n        <p>Loading...</p>\r\n    )\r\n}\r\nexport default NewWorkoutContainer;","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\Graph.js",["123"],"import {Line} from 'react-chartjs-2';\r\nimport \"../Styles/MyStatsPage.css\";\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport {CategoryScale} from 'chart.js';\r\nimport Chart from 'chart.js/auto';\r\nChart.register(CategoryScale);\r\n\r\n\r\nconst Graph=({valuesToGraph, exerciseType})=>{\r\n\r\n    const [chartData,setChartData]=useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        setChartData({\r\n            labels: valuesToGraph.map((value => value.date)),\r\n            valuesTime: valuesToGraph.map((value => value.timeAchieved)),\r\n            valuesDistance: valuesToGraph.map((value => value.distanceAchieved)),\r\n            valuesSets: valuesToGraph.map((value => value.setsAchieved)),\r\n            valuesReps: valuesToGraph.map((value => value.repsAchieved)),\r\n            valuesWeight: valuesToGraph.map((value => value.weightAchieved))\r\n        }\r\n    )},[valuesToGraph]);\r\n\r\n    let yAxisLabel;\r\n    let yAxisData;\r\n    let unit;\r\n\r\n    if (exerciseType === \"WEIGHTS\") {\r\n      yAxisData = chartData.valuesWeight;\r\n      unit = \"kg\";\r\n      yAxisLabel = \"Weight Lifted\"\r\n    } else if (exerciseType === \"CALISTHENICS\") {\r\n      yAxisData = chartData.valuesSets.map(function (n, i) {\r\n        return n * chartData.valuesReps[i];\r\n      });\r\n      unit = \"reps\";\r\n      yAxisLabel = \"Total Reps\"\r\n    } else if (exerciseType === \"CARDIO\") {\r\n      yAxisData = chartData.valuesDistance.map(function (n, i) {\r\n        return n / chartData.valuesTime[i];\r\n      });\r\n      unit = \"meters/min\";\r\n      yAxisLabel = \"Pace\"\r\n    }\r\n\r\n    const data = {\r\n      datasets: [\r\n        {\r\n          label: valuesToGraph.date,\r\n          data: yAxisData,\r\n          fill: true,\r\n          backgroundColor: \"transparent\",\r\n          borderColor: \"rgba(255,30,0, 0.50)\",\r\n          pointBackgroundColor: \"rgba(255, 255, 255, 1)\",\r\n          tension: 0.15,\r\n          fill: {\r\n            target: \"origin\",\r\n            above: \"rgba(255,69,0,0.6)\", // Area will be red above the origin\r\n            below: \"rgb(0, 0, 255)\", // And blue below the origin\r\n          },\r\n        },\r\n      ],\r\n    };\r\n\r\n    return valuesToGraph ? (\r\n      <>\r\n        {console.log(exerciseType)}\r\n        {console.log(data)}\r\n          <Line\r\n            data={data}\r\n            options={{\r\n              scales: {\r\n                x: {\r\n                  labels: chartData.labels,\r\n                  title: {\r\n                    color: \"grey\",\r\n                    display: true,\r\n                    text: \"Date\",\r\n                  },\r\n                },\r\n                y: {\r\n                  labels: data.datasets.data,\r\n                  ticks: {\r\n                    callback: function (value) {\r\n                      return value + ` ${unit}`;\r\n                    },\r\n                  },\r\n                  title: {\r\n                    color: \"grey\",\r\n                    display: true,\r\n                    text: `${yAxisLabel}`,\r\n                  },\r\n                },\r\n              },\r\n              responsive: true,\r\n              maintainAspectRatio: false,\r\n              aspectRatio:2.6\r\n                 }}\r\n          />\r\n      </>\r\n    ) : (\r\n      <p>Loading...</p>\r\n    );\r\n}\r\n \r\n\r\nexport default Graph;","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseDropdownSearch.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\Workout.js",["124"],"import React from 'react';\r\nimport './Workout.css';\r\nimport ExerciseCard from './ExerciseCard';\r\nimport ExerciseTarget from './ExerciseTarget';\r\n\r\nconst Workout = ({exercises}) => {\r\n\r\n\r\n    //from exerciseTarget get exerciseId, then link to exerciseName in exercises\r\n\r\n    //filter exercises by exercise_Id, return exercise.name\r\n\r\n    // const mapExerciseTarget = exerciseTargets.map(exerciseTarget => {\r\n    //     exerciseTarget.exercise_Id;\r\n    // });\r\n\r\n    const exerciseElements = exercises.map(exercise => {\r\n        return(\r\n            <ExerciseCard exercise = {exercise} />\r\n        )\r\n    }\r\n      \r\n    )\r\n        \r\n    // const mapExercise = exercises.map(exercise => {\r\n\r\n    //     // if(exercise.id === exerciseTargets.exercise_Id) {\r\n    //         return(\r\n    //             <Exercise id={exercise.id}/>\r\n    //         )\r\n    //     // }\r\n\r\n    // })\r\n\r\n    // const filteredExercise = (exercise_Id) => exercises.filter(exercises => {\r\n        \r\n    // })\r\n    // () => {\r\n    //     if (targetExercise.exercise_Id === exercise.id){\r\n    //         return exercises.filter(exercise => {\r\n    //             return exercise.name\r\n    //         })\r\n    //     }\r\n    // }\r\n    \r\n    // const exerciseName = (exerciseTargets, {mapExercise}) => {\r\n    //     if(exerciseTargets.exercise_Id === {mapExercise}) {\r\n    //         return {exercise.name}\r\n    //     }\r\n            \r\n\r\n    // }\r\n\r\n    \r\n    return (\r\n        <>\r\n        {exerciseElements}\r\n\r\n        {/* {exerciseName(exerciseTargets, exercises)} \r\n        {exercises.map(exercise => {if(exercise.id === exerciseName(exerciseTargets)) return <div> {exercise.name} </div>})}\r\n        {exerciseTargets.map(exerciseTarget => <div> Sets {exerciseTarget.sets}</div>)}\r\n        {exerciseTargets.map(exerciseTarget => <div> Reps {exerciseTarget.reps}</div>)}\r\n        {exerciseTargets.map(exerciseTarget => <div> Time {exerciseTarget.time}</div>)}\r\n        {exerciseTargets.map(exerciseTarget => <div> Distance {exerciseTarget.distance}</div>)}\r\n        {exerciseTargets.map(exerciseTarget => <div> Weight {exerciseTarget.weight}</div>)} */}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Workout;\r\n","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\StartWorkoutButton.js",["125","126","127","128"],"import React from 'react';\r\nimport './Workout.css';\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StartWorkoutButton = ({workoutId, goWorkout}) => {\r\n    \r\n    const [exerciseTargets,setExerciseTargets] = useState([])\r\n\r\n    const getExerciseTargets = () =>{\r\n\r\n    }\r\n    return (\r\n        <>\r\n        <Link to={{ pathname: `/StartWorkoutPage/${workoutId}` }}>\r\n        {/* <div className=\"all-buttons\"> */}\r\n            {/* currentExercise === exercises.length ? */}\r\n            <button className=\"start-workout-button\" onClick = {()=>goWorkout(workoutId)}>Start Workout</button>\r\n            {/* : */}\r\n\r\n\r\n            {/* <div className=\"button-1\">\r\n                <button onClick = {getExerciseTargets(id)} className=\"beginner-button\"> Beginner Workout </button>\r\n            </div> */}\r\n        {/* </div> */}\r\n        </Link>\r\n        </>\r\n        \r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default StartWorkoutButton;","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseCard.js",["129","130","131","132"],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutsList.js",["133"],"import React from 'react';\r\nimport Workout from './Workout';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport WorkoutButton from './WorkoutButton';\r\nimport \"../Styles/MyWorkoutsPage.css\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst WorkoutsList= ({workouts}) => {\r\n    let navigate = useNavigate()\r\n\r\n    const goWorkout = (id) =>{\r\n        navigate(\"/WorkoutPage\")\r\n    }\r\n\r\n    const workoutComponents = workouts.map(workout => {\r\n        return(\r\n            <WorkoutButton workout={workout} goWorkout={goWorkout}/>\r\n            \r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container__button_primary\">\r\n            {workoutComponents}\r\n\r\n            <Link to={{ pathname:\"/NewWorkoutPage\"}}><button className=\"advanced-button\">Create Custom Workout</button></Link>\r\n            \r\n            <section className=\"Workout-List\">\r\n\r\n            </section>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default WorkoutsList;\r\n\r\n","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutComponents\\FinishedWorkoutModal.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\NewExerciseTargetList.js",["134"],"\r\nimport ExerciseTargetCard from \"./ExerciseTargetCard\"\r\nimport { useEffect } from \"react/cjs/react.development\"\r\n\r\n//an array of the exerciseTargetLists\r\nconst NewExerciseTargetList = ({newExerciseTargetList, deleteCard}) => {\r\n    \r\n    // const exerciseTarget = console.log(\"object:\", (Object.values(newExerciseTargetList))[0][0]);\r\n    \r\n    const exerciseTargets = newExerciseTargetList.map(exerciseTarget => {\r\n        return (\r\n            <ExerciseTargetCard exercise={exerciseTarget} deleteCard={deleteCard}/>\r\n        )\r\n    });\r\n\r\n    return (\r\n        // newExerciseTargetList.length > 0\r\n        // ?\r\n        <>\r\n        {exerciseTargets}\r\n        </>\r\n        // :\r\n        // <>\r\n        // <p>Loading...</p>\r\n        // </>\r\n    )\r\n}\r\nexport default NewExerciseTargetList;","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutComponents\\RecordForm.js",["135"],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutComponents\\Timer.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseTarget.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutButton.js",["136","137","138","139"],"import React from 'react';\r\nimport './Workout.css';\r\nimport { useState, useEffect } from \"react\";\r\nimport \"../Styles/MyWorkoutsPage.css\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst WorkoutButton = ({workout, goWorkout}) => {\r\n    \r\n    const [exerciseTargets,setExerciseTargets] = useState([])\r\n\r\n    \r\n    const getExerciseTargets = () =>{\r\n\r\n    }\r\n    return (\r\n        <>\r\n        <Link to={{ pathname: `/WorkoutPage/${workout.id}` }}>\r\n        {/* <div className=\"all-buttons\"> */}\r\n            \r\n            <button class = \"button__primary\" onClick = {()=>goWorkout(workout.id)}>{workout.name}</button>\r\n\r\n            {/* <div className=\"button-1\">\r\n                <button onClick = {getExerciseTargets(id)} className=\"beginner-button\"> Beginner Workout </button>\r\n            </div> */}\r\n        {/* </div> */}\r\n        </Link>\r\n        </>\r\n        \r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default WorkoutButton;\r\n","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseTargetCard.js",["140","141","142","143"],"import cardio from '../Icons/cardio.png'\r\nimport calisthenic from '../Icons/back-lever.png'\r\nimport { useEffect } from 'react/cjs/react.development'\r\nimport './Workout.css'\r\nimport bin from '../Icons/binIcon.png'\r\n\r\nconst ExerciseTargetCard = ({exercise, deleteCard}) => {\r\n\r\n    const handleDelete = (event) => {\r\n        console.log(\"id: \", exercise.exercise_Id);\r\n        //delete the card with id\r\n        event.preventDefault();\r\n        deleteCard(exercise.exercise_Id);\r\n    }\r\n    \r\n    const displayCard = () => {\r\n        // console.log(\"card: \", exercise);\r\n        if(exercise) {\r\n                switch(exercise.exerciseType) {\r\n                case \"CALISTHENICS\":\r\n                    console.log(\"calisthenics\");\r\n                    return (\r\n                    <>\r\n                        <div className=\"calisthenics-workout\">\r\n                            <img className=\"calisthenics-image\" src={calisthenic} />\r\n                            \r\n                            <div className=\"calisthenics-workout-container\">\r\n                                <p className=\"calisthenics-workout-name\">{exercise.name}</p>\r\n\r\n                            <div className=\"calisthenics-workout-targets\">\r\n                                <p>Sets: {exercise.targetReps}</p>\r\n                                <p>Reps: {exercise.targetSets}</p>\r\n                                <button onClick={handleDelete}>Delete\r\n                                    {/* <image className=\"bin-icon\" src={bin}/> */}\r\n                                </button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    </>\r\n                    )\r\n                case \"WEIGHTS\":\r\n                    console.log(\"weights\");\r\n                    return(\r\n                    <div className=\"weights-workout\">\r\n                        <p className=\"weights-workout-name\">{exercise.name}</p>\r\n                        <p>Sets: {exercise.targetSets}</p>\r\n                        <p>Reps: {exercise.targetReps}</p>\r\n                        <p>Weights: {exercise.targetWeights}</p>\r\n                        <button onClick={handleDelete}>Delete\r\n                                    {/* <image className=\"bin-icon\" src={bin}/> */}\r\n                        </button>\r\n                    </div>\r\n                    )\r\n                case \"CARDIO\":\r\n                    // console.log(\"cardio\")\r\n                    return(\r\n                    <>\r\n                        <div className=\"cardio-workout\">\r\n                            <img className=\"cardio-image\" src={cardio}/>    \r\n\r\n                            <div className=\"cardio-workout-container\">\r\n                                <p className=\"cardio-workout-name\">{exercise.name}</p>\r\n\r\n                                <div className=\"cardio-workout-targets\">\r\n                                    <p id=\"cardio-workout-time\">Time: {exercise.targetTime}</p>\r\n                                    <p id=\"cardio-workout-distance\">Distance: {exercise.targetDistance}</p>\r\n                                    <button onClick={handleDelete}>Delete\r\n                                    {/* <image className=\"bin-icon\" src={bin}/> */}\r\n                                </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    )\r\n                default: console.log(\"Unmatched exercise type\")\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(displayCard, [exercise]);\r\n\r\n    return (\r\n        <>\r\n        {displayCard({exercise})}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExerciseTargetCard;",{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":18,"column":12,"nodeType":"150","messageId":"151","endLine":18,"endColumn":19},{"ruleId":"148","severity":1,"message":"152","line":19,"column":12,"nodeType":"150","messageId":"151","endLine":19,"endColumn":20},{"ruleId":"153","severity":1,"message":"154","line":27,"column":43,"nodeType":"155","endLine":27,"endColumn":45,"suggestions":"156"},{"ruleId":"153","severity":1,"message":"154","line":41,"column":39,"nodeType":"155","endLine":41,"endColumn":53,"suggestions":"157"},{"ruleId":"153","severity":1,"message":"158","line":49,"column":11,"nodeType":"159","endLine":67,"endColumn":6,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":125,"column":25,"nodeType":"163","endLine":125,"endColumn":58},{"ruleId":"148","severity":1,"message":"164","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":18},{"ruleId":"153","severity":1,"message":"154","line":21,"column":40,"nodeType":"155","endLine":21,"endColumn":42,"suggestions":"165"},{"ruleId":"148","severity":1,"message":"166","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":14},{"ruleId":"148","severity":1,"message":"166","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":14},{"ruleId":"148","severity":1,"message":"167","line":9,"column":11,"nodeType":"150","messageId":"151","endLine":9,"endColumn":27},{"ruleId":"148","severity":1,"message":"168","line":15,"column":11,"nodeType":"150","messageId":"151","endLine":15,"endColumn":28},{"ruleId":"148","severity":1,"message":"169","line":15,"column":30,"nodeType":"150","messageId":"151","endLine":15,"endColumn":50},{"ruleId":"148","severity":1,"message":"170","line":46,"column":11,"nodeType":"150","messageId":"151","endLine":46,"endColumn":30},{"ruleId":"171","severity":1,"message":"172","line":97,"column":38,"nodeType":"173","messageId":"174","endLine":97,"endColumn":40},{"ruleId":"175","severity":1,"message":"176","line":127,"column":50,"nodeType":"177","messageId":"178","endLine":127,"endColumn":52},{"ruleId":"179","severity":1,"message":"180","line":58,"column":11,"nodeType":"181","messageId":"174","endLine":58,"endColumn":15},{"ruleId":"148","severity":1,"message":"182","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":22},{"ruleId":"148","severity":1,"message":"183","line":3,"column":20,"nodeType":"150","messageId":"151","endLine":3,"endColumn":29},{"ruleId":"148","severity":1,"message":"184","line":8,"column":12,"nodeType":"150","messageId":"151","endLine":8,"endColumn":27},{"ruleId":"148","severity":1,"message":"185","line":8,"column":28,"nodeType":"150","messageId":"151","endLine":8,"endColumn":46},{"ruleId":"148","severity":1,"message":"186","line":10,"column":11,"nodeType":"150","messageId":"151","endLine":10,"endColumn":29},{"ruleId":"148","severity":1,"message":"187","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":14},{"ruleId":"188","severity":1,"message":"189","line":13,"column":21,"nodeType":"163","endLine":13,"endColumn":77},{"ruleId":"188","severity":1,"message":"189","line":29,"column":17,"nodeType":"163","endLine":29,"endColumn":149},{"ruleId":"188","severity":1,"message":"189","line":44,"column":21,"nodeType":"163","endLine":44,"endColumn":65},{"ruleId":"148","severity":1,"message":"190","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":15},{"ruleId":"148","severity":1,"message":"183","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":19},{"ruleId":"153","severity":1,"message":"191","line":175,"column":28,"nodeType":"155","endLine":175,"endColumn":38,"suggestions":"192"},{"ruleId":"148","severity":1,"message":"183","line":3,"column":20,"nodeType":"150","messageId":"151","endLine":3,"endColumn":29},{"ruleId":"148","severity":1,"message":"184","line":9,"column":12,"nodeType":"150","messageId":"151","endLine":9,"endColumn":27},{"ruleId":"148","severity":1,"message":"185","line":9,"column":28,"nodeType":"150","messageId":"151","endLine":9,"endColumn":46},{"ruleId":"148","severity":1,"message":"186","line":12,"column":11,"nodeType":"150","messageId":"151","endLine":12,"endColumn":29},{"ruleId":"148","severity":1,"message":"193","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":11},{"ruleId":"188","severity":1,"message":"189","line":25,"column":29,"nodeType":"163","endLine":25,"endColumn":85},{"ruleId":"188","severity":1,"message":"189","line":60,"column":29,"nodeType":"163","endLine":60,"endColumn":73},{"ruleId":"153","severity":1,"message":"194","line":81,"column":28,"nodeType":"155","endLine":81,"endColumn":38,"suggestions":"195"},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'seconds' is assigned a value but never used.","Identifier","unusedVar","'isActive' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["198"],["199"],"The 'counter' function makes the dependencies of useEffect Hook (at line 69) change on every render. To fix this, wrap the definition of 'counter' in its own useCallback() Hook.","VariableDeclarator",["200"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Navigate' is defined but never used.",["201"],"'Link' is defined but never used.","'selectedExercise' is assigned a value but never used.","'visibleSaveButton' is assigned a value but never used.","'setVisibleSaveButton' is assigned a value but never used.","'onAddExerciseTarget' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-dupe-keys","Duplicate key 'fill'.","ObjectExpression","'ExerciseTarget' is defined but never used.","'useEffect' is defined but never used.","'exerciseTargets' is assigned a value but never used.","'setExerciseTargets' is assigned a value but never used.","'getExerciseTargets' is assigned a value but never used.","'weight' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Workout' is defined but never used.","React Hook useEffect has missing dependencies: 'date' and 'handleSubmitTarget'. Either include them or remove the dependency array.",["202"],"'bin' is defined but never used.","React Hook useEffect has a missing dependency: 'handleDelete'. Either include it or remove the dependency array.",["203"],"no-global-assign","no-unsafe-negation",{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"204","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},"Update the dependencies array to be: [id]",{"range":"215","text":"216"},"Update the dependencies array to be: [id, nextExercise]",{"range":"217","text":"218"},"Wrap the definition of 'counter' in its own useCallback() Hook.",{"range":"219","text":"220"},{"range":"221","text":"216"},"Update the dependencies array to be: [date, exercise, handleSubmitTarget]",{"range":"222","text":"223"},"Update the dependencies array to be: [exercise, handleDelete]",{"range":"224","text":"225"},[1283,1285],"[id]",[1652,1666],"[id, nextExercise]",[1795,2247],"useCallback(() => {\r\n\r\n\r\n        if(nextExercise < exercisesOfWorkout.length-1) {\r\n            setNextExercise(nextExercise + 1);\r\n        }\r\n\r\n        if(nextExercise === exercisesOfWorkout.length - 2) {\r\n            changeText(\"Finish Workout\")\r\n        }\r\n        if(nextExercise === exercisesOfWorkout.length - 1) {\r\n            setModal(true)\r\n        }\r\n\r\n        console.log(nextExercise)\r\n        setSeconds(0);\r\n        setIsActive(true);\r\n        \r\n    })",[672,674],[7872,7882],"[date, exercise, handleSubmitTarget]",[3555,3565],"[exercise, handleDelete]"]