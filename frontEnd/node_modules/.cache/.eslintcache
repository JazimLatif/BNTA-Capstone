[{"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/index.js":"1","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/reportWebVitals.js":"2","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/App.js":"3","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/containers/NewWorkoutContainer.js":"4","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/containers/MyStatsContainer.js":"5","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseDropdownSearch.js":"6","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/Graph.js":"7","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseCardList.js":"8","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseTargetForm.js":"9","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseTargetCard.js":"10","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/NewExerciseTargetList.js":"11"},{"size":998,"mtime":1639482251533,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1638790362700,"results":"14","hashOfConfig":"13"},{"size":370,"mtime":1639498189924,"results":"15","hashOfConfig":"13"},{"size":3310,"mtime":1639497829556,"results":"16","hashOfConfig":"13"},{"size":1725,"mtime":1639498303943,"results":"17","hashOfConfig":"13"},{"size":585,"mtime":1639498190193,"results":"18","hashOfConfig":"13"},{"size":1903,"mtime":1639498189926,"results":"19","hashOfConfig":"13"},{"size":530,"mtime":1639411610590,"results":"20","hashOfConfig":"13"},{"size":6100,"mtime":1639481664642,"results":"21","hashOfConfig":"13"},{"size":3596,"mtime":1639484485455,"results":"22","hashOfConfig":"13"},{"size":815,"mtime":1639483729775,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1s0z7y7",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/index.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/reportWebVitals.js",[],["48","49"],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/App.js",["50","51","52","53"],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/containers/NewWorkoutContainer.js",["54","55","56","57","58"],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/containers/MyStatsContainer.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseDropdownSearch.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/Graph.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseCardList.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseTargetForm.js",["59","60","61","62","63","64"],"import cardio from '../Icons/cardio.png';\nimport calisthenic from '../Icons/back-lever.png';\nimport weights from '../Icons/dumbbell.png';\nimport { useState, useEffect } from 'react/cjs/react.development';\nimport './Workout.css'\n\nconst ExerciseTargetForm = ({exercise, onAddExerciseTarget}) => {\n\n    const[sets, setSets] = useState(\"\");\n    const[reps, setReps] = useState(\"\");\n    const[weights, setWeights] = useState(\"\");\n    const[time, setTime] = useState(\"\");\n    const[distance, setDistance] = useState(\"\");\n    const newExerciseTarget = \"\";\n\n    const handleSetsChange = (event) => {\n        setSets(event.target.value);\n    }\n\n    const handleRepsChange = (event) => {\n        setReps(event.target.value);\n    }\n\n    const handleWeightsChange = (event) => {\n        setWeights(event.target.value);\n    }\n\n    const handleTimeChange = (event) => {\n        setTime(event.target.value);\n    }\n\n    const handleDistanceChange = (event) => {\n        setDistance(event.target.value);\n    }\n\n    const handleSubmitTarget = (event) => {\n        event.preventDefault();\n\n        // const oldExerciseTarget = newExerciseTarget;\n\n        const newExerciseTarget = {\n            \"exercise_Id\": exercise.id,\n            \"exerciseType\": exercise.exerciseType,\n            \"name\": exercise.name,\n            \"targetTime\": time,\n            \"targetDistance\": distance,\n            \"targetSets\": sets,\n            \"targetReps\": reps,\n            \"targetWeight\": weights\n        }\n\n        // if(oldExerciseTarget === newExerciseTarget) {\n        //     console.log(\"same\");\n        // }\n        // else {\n        onAddExerciseTarget(newExerciseTarget);\n\n        setSets(\"\");\n        setReps(\"\");\n        setWeights(\"\");\n        setTime(\"\");\n        setDistance(\"\");\n        // }\n    \n    }\n\n    //TODO: Enter numbers only!\n    //TODO: For weights enter lb/kg\n    const displayForm = () => {\n        // console.log(exercise);\n        if(exercise) {\n                switch(exercise.exerciseType) {\n                case \"CALISTHENICS\":\n                    // console.log(\"calisthenics\");\n                    return (\n                    <>\n                        <div className=\"calisthenics-workout\">\n                            <img className=\"calisthenics-image\" src={calisthenic} />\n                            \n                            <div className=\"calisthenics-workout-container\">\n                                <p className=\"calisthenics-workout-name\">{exercise.name}</p>\n\n                                <div className=\"calisthenics-workout-targets\">\n                                    <form onSubmit={handleSubmitTarget}>\n                                        <label>Sets:\n                                            <input type=\"number\" onChange={handleSetsChange}/>\n                                        </label>\n                                        <label>Reps:\n                                            <input type=\"number\" onChange={handleRepsChange}/>\n                                        </label>\n                                        <input type=\"submit\" value=\"Add\"/>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                    )\n                case \"WEIGHTS\":\n                    // console.log(\"weights\");\n                    return(\n                    <div className=\"weights-workout\">\n                        <img className=\"calisthenics-image\" src={weights} />\n\n                    <div className=\"calisthenics-workout-container\">\n                        <p className=\"weights-workout-name\">{exercise.name}</p>\n\n                        <div className=\"calisthenics-workout-targets\">\n                                <form onSubmit={handleSubmitTarget}>\n                                    <label>Sets:\n                                        <input type=\"number\" onChange={handleSetsChange}/>\n                                    </label>\n                                    <label>Reps:\n                                        <input type=\"number\" onChange={handleRepsChange}/>\n                                    </label>\n                                    <label>Weight(kg):\n                                        <input type=\"number\" onChange={handleWeightsChange}/>\n                                    </label>\n                                    <input type=\"submit\" value=\"Add\"/>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    )\n                case \"CARDIO\":\n                    // console.log(\"cardio\")\n                    return(\n                    <>\n                        <div className=\"cardio-workout\">\n                            <img className=\"cardio-image\" src={cardio}/>    \n\n                            <div className=\"cardio-workout-container\">\n                                <p className=\"cardio-workout-name\">{exercise.name}</p>\n\n                                <div className=\"cardio-workout-targets\">\n                                    <form onSubmit={handleSubmitTarget}>\n                                        <label>Time:\n                                            <input type=\"number\" onChange={handleTimeChange}/>\n                                        </label>\n                                        <label>Distance:\n                                            <input type=\"number\" onChange={handleDistanceChange}/>\n                                        </label>\n                                        <input type=\"submit\" value=\"Add\"/>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                    )\n                default: console.log(\"Unmatched exercise type\")\n            }\n        }\n    }\n\n    useEffect(displayForm, [exercise]);\n\n    return (\n        <>\n        {displayForm({exercise})}\n        </>\n    )\n\n}\nexport default ExerciseTargetForm;","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseTargetCard.js",["65","66","67","68"],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/NewExerciseTargetList.js",["69","70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":27},{"ruleId":"75","severity":1,"message":"79","line":3,"column":9,"nodeType":"77","messageId":"78","endLine":3,"endColumn":22},{"ruleId":"75","severity":1,"message":"80","line":3,"column":24,"nodeType":"77","messageId":"78","endLine":3,"endColumn":30},{"ruleId":"75","severity":1,"message":"81","line":3,"column":32,"nodeType":"77","messageId":"78","endLine":3,"endColumn":37},{"ruleId":"75","severity":1,"message":"82","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":24},{"ruleId":"75","severity":1,"message":"83","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":20},{"ruleId":"75","severity":1,"message":"84","line":15,"column":11,"nodeType":"77","messageId":"78","endLine":15,"endColumn":28},{"ruleId":"75","severity":1,"message":"85","line":15,"column":30,"nodeType":"77","messageId":"78","endLine":15,"endColumn":50},{"ruleId":"75","severity":1,"message":"86","line":39,"column":11,"nodeType":"77","messageId":"78","endLine":39,"endColumn":32},{"ruleId":"75","severity":1,"message":"87","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":15},{"ruleId":"75","severity":1,"message":"88","line":14,"column":11,"nodeType":"77","messageId":"78","endLine":14,"endColumn":28},{"ruleId":"89","severity":1,"message":"90","line":78,"column":29,"nodeType":"91","endLine":78,"endColumn":85},{"ruleId":"89","severity":1,"message":"90","line":102,"column":25,"nodeType":"91","endLine":102,"endColumn":77},{"ruleId":"89","severity":1,"message":"90","line":129,"column":29,"nodeType":"91","endLine":129,"endColumn":73},{"ruleId":"92","severity":1,"message":"93","line":154,"column":28,"nodeType":"94","endLine":154,"endColumn":38,"suggestions":"95"},{"ruleId":"75","severity":1,"message":"96","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":11},{"ruleId":"89","severity":1,"message":"90","line":25,"column":29,"nodeType":"91","endLine":25,"endColumn":85},{"ruleId":"89","severity":1,"message":"90","line":60,"column":29,"nodeType":"91","endLine":60,"endColumn":73},{"ruleId":"92","severity":1,"message":"97","line":81,"column":28,"nodeType":"94","endLine":81,"endColumn":38,"suggestions":"98"},{"ruleId":"75","severity":1,"message":"99","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"100","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":19},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'NewWorkoutContainer' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'ExerciseCardList' is defined but never used.","'ExerciseCard' is defined but never used.","'visibleSaveButton' is assigned a value but never used.","'setVisibleSaveButton' is assigned a value but never used.","'getAllExerciseTargets' is assigned a value but never used.","'weights' is defined but never used.","'newExerciseTarget' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleSubmitTarget' and 'weights'. Either include them or remove the dependency array.","ArrayExpression",["103"],"'bin' is defined but never used.","React Hook useEffect has a missing dependency: 'handleDelete'. Either include it or remove the dependency array.",["104"],"'ExerciseTargetForm' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [exercise, handleSubmitTarget, weights]",{"range":"109","text":"110"},"Update the dependencies array to be: [exercise, handleDelete]",{"range":"111","text":"112"},[5973,5983],"[exercise, handleSubmitTarget, weights]",[3469,3479],"[exercise, handleDelete]"]