[{"/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/index.js":"1","/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/App.js":"2","/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Pages/ProteinTrackerPage.js":"3","/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Pages/HomePage.js":"4","/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Pages/MyStatsPage.js":"5","/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Pages/WorkoutPage.js":"6","/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Pages/MyWorkoutsPage.js":"7","/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Components/Navbar.js":"8","/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Pages/StartWorkoutPage.js":"9","/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Components/StartWorkoutButton.js":"10","/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Components/WorkoutsList.js":"11","/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Components/ExerciseCard.js":"12","/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Components/Workout.js":"13","/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Components/WorkoutComponents/CurrentExercise.js":"14","/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Components/WorkoutComponents/RecordForm.js":"15","/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Components/WorkoutComponents/Timer.js":"16","/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Components/WorkoutButton.js":"17","/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Components/ExerciseTarget.js":"18"},{"size":221,"mtime":1639153844047,"results":"19","hashOfConfig":"20"},{"size":1020,"mtime":1639403624378,"results":"21","hashOfConfig":"20"},{"size":154,"mtime":1639153844047,"results":"22","hashOfConfig":"20"},{"size":1414,"mtime":1639403624379,"results":"23","hashOfConfig":"20"},{"size":133,"mtime":1639153844047,"results":"24","hashOfConfig":"20"},{"size":1229,"mtime":1639521111424,"results":"25","hashOfConfig":"20"},{"size":622,"mtime":1639403624379,"results":"26","hashOfConfig":"20"},{"size":703,"mtime":1639153844046,"results":"27","hashOfConfig":"20"},{"size":2486,"mtime":1639521106733,"results":"28","hashOfConfig":"20"},{"size":895,"mtime":1639476717241,"results":"29","hashOfConfig":"20"},{"size":735,"mtime":1639153844047,"results":"30","hashOfConfig":"20"},{"size":2773,"mtime":1639520717115,"results":"31","hashOfConfig":"20"},{"size":2101,"mtime":1639403624379,"results":"32","hashOfConfig":"20"},{"size":437,"mtime":1639476717242,"results":"33","hashOfConfig":"20"},{"size":6622,"mtime":1639519562474,"results":"34","hashOfConfig":"20"},{"size":1406,"mtime":1639476717242,"results":"35","hashOfConfig":"20"},{"size":851,"mtime":1639564926426,"results":"36","hashOfConfig":"20"},{"size":0,"mtime":1639153844047,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"65tg5s",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/index.js",[],["82","83"],"/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/App.js",[],"/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Pages/ProteinTrackerPage.js",[],"/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Pages/HomePage.js",[],"/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Pages/MyStatsPage.js",[],"/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Pages/WorkoutPage.js",["84","85"],"import Workout from \"../Components/Workout\"\nimport { useState, useEffect } from \"react\";\nimport { Navigate, useParams } from \"react-router\";\nimport StartWorkoutButton from \"../Components/StartWorkoutButton\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst WorkoutPage = () => {\n\n    const {id} = useParams();\n    const [exercises,setExercises] = useState([])\n\n\n\n    const getExercisesByWorkoutId = () => {\n        fetch(`http://localhost:8080/api/v1/exercises/workout/id/${id}`)\n        .then(response => response.json())\n        .then(data => setExercises(data))\n    }\n\n    useEffect(getExercisesByWorkoutId, []);\n\n    let navigate = useNavigate();\n\n    const goWorkout = () => {\n        navigate(\"/StartWorkoutPage\")\n    }\n\n    return(\n        <>\n        <div className=\"preset-beginner-title\">\n            <h1>Workout Routine:</h1>\n        </div>\n\n        <div className=\"preset-beginner-exercises\">\n            <Workout exercises = {exercises}/>\n        </div>\n\n        <div>\n            <StartWorkoutButton workoutId={id} goWorkout={goWorkout}/>\n        </div>\n\n        \n        {/* {exerciseTargets.map(exerciseTarget => <div>{exerciseTarget.exercise_Id}</div>)} */}\n        </>\n    )\n\n}\n\nexport default WorkoutPage;","/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Pages/MyWorkoutsPage.js",[],"/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Components/Navbar.js",[],"/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Pages/StartWorkoutPage.js",["86","87","88","89","90","91","92"],"import '../Components/WorkoutComponents/StartWorkoutPage.css';\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport CurrentExercise from \"../Components/WorkoutComponents/CurrentExercise\";\nimport ExerciseCard from '../Components/ExerciseCard';\nimport RecordForm from '../Components/WorkoutComponents/RecordForm';\nimport Timer from '../Components/WorkoutComponents/Timer';\nimport '../Components/WorkoutComponents/StartWorkoutPage.css'\n\nconst StartWorkoutPage = () => {\n\n    const {id} = useParams();\n    const [exercises,setExercises] = useState([]);\n    const [currentExercise, setCurrentExercise] = useState([]);\n    const [nextExercise, setNextExercise] = useState(0);\n    const {initialMinute} = 0\n    const {initialSeconds} = 0\n\n    let exerciseCount = 0;\n\n    const getExercisesByWorkoutId = () => {\n        fetch(`http://localhost:8080/api/v1/exercises/workout/id/${id}`)\n        .then(response => response.json())\n        .then(data => setExercises(data[nextExercise]))\n\n    }\n\n    useEffect(getExercisesByWorkoutId, [nextExercise]);\n\n    const counter = () => {\n\n        if(nextExercise < 2) {\n            setNextExercise(nextExercise + 1);\n        }\n        console.log(nextExercise)\n    };\n    // construct a new object from exercisedp\n\n    const onAddExerciseDataPoint = (newExerciseDataPoint) => {\n        // const new object = create object that matches backend, map the object \n    fetch(\"http://localhost:8080/api/v1/data/record\", {\n        method: \"POST\",\n        headers: {\n            'Content-type': 'application/json'\n        },\n        body: JSON.stringify(newExerciseDataPoint)\n    })\n    .then(data => console.log(data))\n}\n\n\n    return(\n        <>\n            <div className=\"preset-beginner-title\">\n                <h1>Workout Routine:</h1>\n            </div>\n\n            <div className=\"start-workout-page-container\">\n                \n\n                <div className=\"beginner-current-exercise\">\n                    <h1>Current Exercise</h1>\n                    <ExerciseCard exercise={exercises} />\n                </div>\n\n                <div>\n                    <RecordForm exercise={exercises} onAddExerciseDataPoint = {onAddExerciseDataPoint}/>\n                </div>\n\n                <div>\n                    <Timer/>\n                </div>\n\n            </div>\n\n\n            <button className = \"next-workout-button\" onClick={counter}>Next Workout</button>\n\n        </>\n    )\n\n}\n\nexport default StartWorkoutPage;","/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Components/StartWorkoutButton.js",["93","94","95","96"],"import React from 'react';\nimport './Workout.css';\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst StartWorkoutButton = ({workoutId, goWorkout}) => {\n    \n    const [exerciseTargets,setExerciseTargets] = useState([])\n\n    const getExerciseTargets = () =>{\n\n    }\n    return (\n        <>\n        <Link to={{ pathname: `/StartWorkoutPage/${workoutId}` }}>\n        {/* <div className=\"all-buttons\"> */}\n            {/* currentExercise === exercises.length ? */}\n            <button onClick = {()=>goWorkout(workoutId)}>Start Workout</button>\n            {/* : */}\n\n\n            {/* <div className=\"button-1\">\n                <button onClick = {getExerciseTargets(id)} className=\"beginner-button\"> Beginner Workout </button>\n            </div> */}\n        {/* </div> */}\n        </Link>\n        </>\n        \n    )\n\n\n\n}\n\nexport default StartWorkoutButton;","/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Components/WorkoutsList.js",["97","98"],"import React from 'react';\nimport Workout from './Workout';\nimport { useNavigate } from \"react-router-dom\";\nimport WorkoutButton from './WorkoutButton';\nimport { Link } from \"react-router-dom\";\n\nconst WorkoutsList= ({workouts}) => {\n    let navigate = useNavigate()\n\n    const goWorkout = (id) =>{\n        navigate(\"/WorkoutPage\")\n    }\n\n    const workoutComponents = workouts.map(workout => {\n        return(\n            <WorkoutButton workout={workout} goWorkout={goWorkout}/>\n        )\n    })\n\n    return (\n        <>\n            <h1>\n            My workouts\n            </h1>\n\n            {workoutComponents}\n\n            <section className=\"Workout-List\">\n\n            </section>\n        </>\n    )\n}\nexport default WorkoutsList;\n\n","/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Components/ExerciseCard.js",["99","100","101","102"],"import React from 'react';\nimport cardio from '../Icons/cardio.png';\nimport calisthenic from '../Icons/back-lever.png';\nimport weight from '../Icons/dumbbell.png';\n\nconst ExerciseCard = ({exercise}) => {\n    switch(exercise.exerciseType)\n    {\n        case \"CALISTHENICS\":\n            return(\n            <>\n                <div className=\"calisthenics-workout\">\n                    <img className=\"calisthenics-image\" src={calisthenic} />\n                    \n                    <div className=\"calisthenics-workout-container\">\n                        <p className=\"calisthenics-workout-name\">{exercise.name}</p>\n\n                    <div className=\"calisthenics-workout-targets\">\n                        <p>Sets: {exercise.targetReps}</p>\n                        <p>Reps: {exercise.targetSets}</p>\n                    </div>\n                </div>\n            </div>\n            </>\n            )\n        case \"WEIGHTS\":\n            return(\n            <div className=\"weights-workout\">\n                <img className = 'weight-image' src = \"https://www.vippng.com/png/detail/55-554509_dumbbells-clipart-svg-gym-weight-icon-png.png\" />\n                <div className=\"weights-workout-container\">\n                    <p className=\"weights-workout-name\">{exercise.name}</p>\n                    <div className=\"cardio-workout-targets\">\n                        <p id = \"weights-workout-sets\">Sets: {exercise.targetSets}</p>\n                        <p id = \"weights-workout-reps\"> Reps: {exercise.targetReps}</p>\n                        <p id = \"weights-workout-weights\">Weights: {exercise.targetWeights}</p>\n                 </div>\n                </div>\n            </div>\n            )\n        case \"CARDIO\":\n            return(\n            <>\n                <div className=\"cardio-workout\">\n                    <img className=\"cardio-image\" src={cardio}/>    \n\n                    <div className=\"cardio-workout-container\">\n                        <p className=\"cardio-workout-name\">{exercise.name}</p>\n\n                        <div className=\"cardio-workout-targets\">\n                            <p id=\"cardio-workout-distance\">Distance: {exercise.targetDistance}</p>\n                            <p id=\"cardio-workout-time\">Time: {exercise.targetTime}</p>\n                        </div>\n                    </div>\n                </div>\n            </>\n            )\n        default: console.log(\"Unmatched exercise type\")\n    }\n\n    return (\n        <>\n            {ExerciseCard}\n\n\n        {/* <p>Time: {exercise.targetTime}</p>\n        <p>Distance: {exercise.targetDistance}</p>\n        <p>Sets: {exercise.targetSets}</p>\n        <p>Reps: {exercise.targetReps}</p>\n        <p>Weight: {exercise.targetWeight}</p> */}\n        </>\n\n    )\n}\n\nexport default ExerciseCard;\n","/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Components/Workout.js",["103"],"import React from 'react';\nimport './Workout.css';\nimport ExerciseCard from './ExerciseCard';\nimport ExerciseTarget from './ExerciseTarget';\n\nconst Workout = ({exercises}) => {\n\n\n    //from exerciseTarget get exerciseId, then link to exerciseName in exercises\n\n    //filter exercises by exercise_Id, return exercise.name\n\n    // const mapExerciseTarget = exerciseTargets.map(exerciseTarget => {\n    //     exerciseTarget.exercise_Id;\n    // });\n\n    const exerciseElements = exercises.map(exercise => {\n        return(\n            <ExerciseCard exercise = {exercise} />\n        )\n    }\n      \n    )\n        \n    // const mapExercise = exercises.map(exercise => {\n\n    //     // if(exercise.id === exerciseTargets.exercise_Id) {\n    //         return(\n    //             <Exercise id={exercise.id}/>\n    //         )\n    //     // }\n\n    // })\n\n    // const filteredExercise = (exercise_Id) => exercises.filter(exercises => {\n        \n    // })\n    // () => {\n    //     if (targetExercise.exercise_Id === exercise.id){\n    //         return exercises.filter(exercise => {\n    //             return exercise.name\n    //         })\n    //     }\n    // }\n    \n    // const exerciseName = (exerciseTargets, {mapExercise}) => {\n    //     if(exerciseTargets.exercise_Id === {mapExercise}) {\n    //         return {exercise.name}\n    //     }\n            \n\n    // }\n\n    \n    return (\n        <>\n        {exerciseElements}\n\n        {/* {exerciseName(exerciseTargets, exercises)} \n        {exercises.map(exercise => {if(exercise.id === exerciseName(exerciseTargets)) return <div> {exercise.name} </div>})}\n        {exerciseTargets.map(exerciseTarget => <div> Sets {exerciseTarget.sets}</div>)}\n        {exerciseTargets.map(exerciseTarget => <div> Reps {exerciseTarget.reps}</div>)}\n        {exerciseTargets.map(exerciseTarget => <div> Time {exerciseTarget.time}</div>)}\n        {exerciseTargets.map(exerciseTarget => <div> Distance {exerciseTarget.distance}</div>)}\n        {exerciseTargets.map(exerciseTarget => <div> Weight {exerciseTarget.weight}</div>)} */}\n        </>\n    )\n}\n\n\nexport default Workout;\n","/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Components/WorkoutComponents/CurrentExercise.js",[],"/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Components/WorkoutComponents/RecordForm.js",["104"],"import React from 'react'\nimport { useState, useEffect } from 'react';\nimport './StartWorkoutPage.css';\n\nconst RecordForm = ({exercise, onAddExerciseDataPoint}) => {\n\n    const[sets, setSets] = useState(\"\");\n    const[reps, setReps] = useState(\"\");\n    const[weights, setWeights] = useState(\"\");\n    const[time, setTime] = useState(\"\");\n    const[distance, setDistance] = useState(\"\");\n    const[date, setDate] = useState(\"\") \n\n    const handleSetsChange = (event) => {\n        setSets(event.target.value);\n    }\n\n    const handleDateChange = (event) => {\n           setDate(event.target.value)\n       } \n\n    const handleRepsChange = (event) => {\n        setReps(event.target.value);\n    }\n\n    const handleWeightsChange = (event) => {\n        setWeights(event.target.value);\n    }\n\n    const handleTimeChange = (event) => {\n        setTime(event.target.value);\n    }\n\n    const handleDistanceChange = (event) => {\n        setDistance(event.target.value);\n    }\n\n    const handleSubmitTarget = (event) => {\n        event.preventDefault();\n\n        const newExerciseDataPoint = {\n            \"exerciseID\": exercise.exercise_Id,\n            \"name\": exercise.name,\n            \"date\": date, \n            \"timeAchieved\": time,\n            \"distanceAchieved\": distance,\n            \"setsAchieved\": sets,\n            \"repsAchieved\": reps,\n            \"weightAchieved\": weights\n        }\n\n        onAddExerciseDataPoint(newExerciseDataPoint);\n        setDate(\"\") \n        setSets(\"\");\n        setReps(\"\");\n        setWeights(\"\");\n        setTime(\"\");\n        setDistance(\"\");\n    }\n\n\n    //TODO: Enter numbers only!\n    //TODO: For weights enter lb/kg\n    const displayForm = () => {\n        // console.log(exercise);\n        if(exercise) {\n                switch(exercise.exerciseType) {\n                case \"CALISTHENICS\":\n                    // console.log(\"calisthenics\");\n                    return (\n                    <>\n                        <div className=\"calisthenics-data\">\n                            \n                            <div className=\"calisthenics-data-container\">\n                                <p className=\"calisthenics-data-name\">{exercise.name}</p>\n\n                                <div className=\"calisthenics-data-targets\">\n                                    <form onSubmit={handleSubmitTarget}>\n                                        <label>Date:\n                                            <input type=\"text\" placeholder = \"yyyy-mm-dd\" onChange={handleDateChange}/>\n                                        </label>\n                                        <label>Sets Achieved:\n                                            <input type=\"text\" placeholder = \"enter sets completed\" onChange={handleSetsChange}/>\n                                        </label>\n                                        <label>Reps Achieved:\n                                            <input type=\"text\" placeholder = \"enter reps completed\" onChange={handleRepsChange}/>\n                                        </label>\n                                        <input type=\"submit\" value=\"Add\"/>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                    )\n                case \"WEIGHTS\":\n                    // console.log(\"weights\");\n                    return(\n                    <div className=\"weights-data\">\n\n                    <div className=\"weights-data-container\">\n                        <p className=\"weights-data-name\">{exercise.name}</p>\n\n                        <div className=\"weights-data-targets\">\n                                <form onSubmit={handleSubmitTarget}>\n                                    <label>Date:\n                                            <input type=\"text\" placeholder = \"yyyy-mm-dd\" onChange={handleDateChange}/>\n                                    </label>\n                                    <label>Sets Achieved:\n                                        <input type=\"text\" placeholder = \"enter sets completed\" onChange={handleSetsChange}/>\n                                    </label>\n                                    <label>Reps Achievced:\n                                        <input type=\"text\" placeholder = \"enter reps completed\" onChange={handleRepsChange}/>\n                                    </label>\n                                    <label>Weights Achievced:\n                                        <input type=\"text\" placeholder = \"enter weights completed\" onChange={handleWeightsChange}/>\n                                    </label>\n                                    <input type=\"submit\" value=\"Add\"/>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    )\n                case \"CARDIO\":\n                    // console.log(\"cardio\")\n                    return(\n                    <>\n                        <div className=\"cardio-data\">\n                            <div className=\"cardio-data-container\">\n                                <p className=\"cardio-data-name\">{exercise.name}</p>\n\n                                <div className=\"cardio-data-targets\">\n                                    <form onSubmit={handleSubmitTarget}>\n                                        <label>Date:\n                                            <input type=\"text\" placeholder = \"yyyy-mm-dd\" onChange={handleDateChange}/>\n                                        </label>\n                                        <label>Time Achieved:\n                                            <input type=\"text\" placeholder = \"enter duration\" onChange={handleTimeChange}/>\n                                        </label>\n                                        <label>Distance Achieved:\n                                            <input type=\"text\" placeholder = \"enter distance achieved\" onChange={handleDistanceChange}/>\n                                        </label>\n                                        <input type=\"submit\" value=\"Add\"/>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                    )\n                default: console.log(\"Unmatched exercise type\")\n            }\n        }\n    }\n\n    useEffect(displayForm, [exercise]);\n\n    return (\n        <>\n        <h1 class=\"review-form-name\">Review Form</h1>\n        {displayForm({exercise})}\n        </>\n    )\n\n}\n\nexport default RecordForm;\n","/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Components/WorkoutComponents/Timer.js",[],"/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Components/WorkoutButton.js",["105","106","107","108"],"/Users/zahir/Documents/capstone-2/BNTA-Capstone/frontEnd/src/Components/ExerciseTarget.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":18},{"ruleId":"117","severity":1,"message":"118","line":20,"column":40,"nodeType":"119","endLine":20,"endColumn":42,"suggestions":"120"},{"ruleId":"113","severity":1,"message":"121","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":23},{"ruleId":"113","severity":1,"message":"122","line":14,"column":12,"nodeType":"115","messageId":"116","endLine":14,"endColumn":27},{"ruleId":"113","severity":1,"message":"123","line":14,"column":29,"nodeType":"115","messageId":"116","endLine":14,"endColumn":47},{"ruleId":"113","severity":1,"message":"124","line":16,"column":12,"nodeType":"115","messageId":"116","endLine":16,"endColumn":25},{"ruleId":"113","severity":1,"message":"125","line":17,"column":12,"nodeType":"115","messageId":"116","endLine":17,"endColumn":26},{"ruleId":"113","severity":1,"message":"126","line":19,"column":9,"nodeType":"115","messageId":"116","endLine":19,"endColumn":22},{"ruleId":"117","severity":1,"message":"118","line":28,"column":40,"nodeType":"119","endLine":28,"endColumn":54,"suggestions":"127"},{"ruleId":"113","severity":1,"message":"128","line":3,"column":20,"nodeType":"115","messageId":"116","endLine":3,"endColumn":29},{"ruleId":"113","severity":1,"message":"129","line":8,"column":12,"nodeType":"115","messageId":"116","endLine":8,"endColumn":27},{"ruleId":"113","severity":1,"message":"130","line":8,"column":28,"nodeType":"115","messageId":"116","endLine":8,"endColumn":46},{"ruleId":"113","severity":1,"message":"131","line":10,"column":11,"nodeType":"115","messageId":"116","endLine":10,"endColumn":29},{"ruleId":"113","severity":1,"message":"132","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":15},{"ruleId":"113","severity":1,"message":"133","line":5,"column":10,"nodeType":"115","messageId":"116","endLine":5,"endColumn":14},{"ruleId":"113","severity":1,"message":"134","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":14},{"ruleId":"135","severity":1,"message":"136","line":13,"column":21,"nodeType":"137","endLine":13,"endColumn":77},{"ruleId":"135","severity":1,"message":"136","line":29,"column":17,"nodeType":"137","endLine":29,"endColumn":149},{"ruleId":"135","severity":1,"message":"136","line":44,"column":21,"nodeType":"137","endLine":44,"endColumn":65},{"ruleId":"113","severity":1,"message":"138","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":22},{"ruleId":"117","severity":1,"message":"139","line":154,"column":28,"nodeType":"119","endLine":154,"endColumn":38,"suggestions":"140"},{"ruleId":"113","severity":1,"message":"128","line":3,"column":20,"nodeType":"115","messageId":"116","endLine":3,"endColumn":29},{"ruleId":"113","severity":1,"message":"129","line":8,"column":12,"nodeType":"115","messageId":"116","endLine":8,"endColumn":27},{"ruleId":"113","severity":1,"message":"130","line":8,"column":28,"nodeType":"115","messageId":"116","endLine":8,"endColumn":46},{"ruleId":"113","severity":1,"message":"131","line":11,"column":11,"nodeType":"115","messageId":"116","endLine":11,"endColumn":29},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["143"],"'CurrentExercise' is defined but never used.","'currentExercise' is assigned a value but never used.","'setCurrentExercise' is assigned a value but never used.","'initialMinute' is assigned a value but never used.","'initialSeconds' is assigned a value but never used.","'exerciseCount' is assigned a value but never used.",["144"],"'useEffect' is defined but never used.","'exerciseTargets' is assigned a value but never used.","'setExerciseTargets' is assigned a value but never used.","'getExerciseTargets' is assigned a value but never used.","'Workout' is defined but never used.","'Link' is defined but never used.","'weight' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ExerciseTarget' is defined but never used.","React Hook useEffect has a missing dependency: 'handleSubmitTarget'. Either include it or remove the dependency array.",["145"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [id]",{"range":"152","text":"153"},"Update the dependencies array to be: [id, nextExercise]",{"range":"154","text":"155"},"Update the dependencies array to be: [exercise, handleSubmitTarget]",{"range":"156","text":"157"},[617,619],"[id]",[1064,1078],"[id, nextExercise]",[6447,6457],"[exercise, handleSubmitTarget]"]