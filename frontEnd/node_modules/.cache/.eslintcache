[{"/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/index.js":"1","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/App.js":"2","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/Pages/ProteinTrackerPage.js":"3","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/Pages/HomePage.js":"4","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/containers/MyStatsContainer.js":"5","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/Pages/StartWorkoutPage.js":"6","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/Pages/WorkoutPage.js":"7","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/Navbar.js":"8","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/Pages/MyWorkoutsPage.js":"9","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/Pages/EditWorkoutPage.js":"10","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/containers/NewWorkoutContainer.js":"11","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/Graph.js":"12","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/ExerciseDropdownSearch.js":"13","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/WorkoutsList.js":"14","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/Workout.js":"15","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/NewExerciseTargetList.js":"16","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/ExerciseCard.js":"17","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/ExerciseCardList.js":"18","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/StartWorkoutButton.js":"19","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/ExerciseTargetForm.js":"20","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/WorkoutComponents/RecordForm.js":"21","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/ExerciseTargetCard.js":"22","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/WorkoutComponents/FinishedWorkoutModal.js":"23","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/EditWorkoutComponents/SaveWorkoutModal.js":"24","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/EditWorkoutComponents/EditWorkoutButton.js":"25","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/WorkoutComponents/Timer.js":"26","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/WorkoutButton.js":"27","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/ExerciseTarget.js":"28","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/Footer.js":"29"},{"size":740,"mtime":1639690010569,"results":"30","hashOfConfig":"31"},{"size":1444,"mtime":1639690790087,"results":"32","hashOfConfig":"31"},{"size":154,"mtime":1639690010568,"results":"33","hashOfConfig":"31"},{"size":1489,"mtime":1639690010567,"results":"34","hashOfConfig":"31"},{"size":1880,"mtime":1639690010569,"results":"35","hashOfConfig":"31"},{"size":4243,"mtime":1639690298324,"results":"36","hashOfConfig":"31"},{"size":1535,"mtime":1639690010568,"results":"37","hashOfConfig":"31"},{"size":881,"mtime":1639690010565,"results":"38","hashOfConfig":"31"},{"size":775,"mtime":1639690010568,"results":"39","hashOfConfig":"31"},{"size":7327,"mtime":1639690010567,"results":"40","hashOfConfig":"31"},{"size":5993,"mtime":1639690010569,"results":"41","hashOfConfig":"31"},{"size":3111,"mtime":1639690010568,"results":"42","hashOfConfig":"31"},{"size":680,"mtime":1639690010568,"results":"43","hashOfConfig":"31"},{"size":941,"mtime":1639690010569,"results":"44","hashOfConfig":"31"},{"size":2101,"mtime":1639690010569,"results":"45","hashOfConfig":"31"},{"size":633,"mtime":1639690010568,"results":"46","hashOfConfig":"31"},{"size":2860,"mtime":1639690010565,"results":"47","hashOfConfig":"31"},{"size":530,"mtime":1639690010568,"results":"48","hashOfConfig":"31"},{"size":481,"mtime":1639690010565,"results":"49","hashOfConfig":"31"},{"size":6705,"mtime":1639690010565,"results":"50","hashOfConfig":"31"},{"size":8009,"mtime":1639690010566,"results":"51","hashOfConfig":"31"},{"size":3923,"mtime":1639690010568,"results":"52","hashOfConfig":"31"},{"size":732,"mtime":1639690010565,"results":"53","hashOfConfig":"31"},{"size":1097,"mtime":1639690010565,"results":"54","hashOfConfig":"31"},{"size":387,"mtime":1639690010565,"results":"55","hashOfConfig":"31"},{"size":1401,"mtime":1639690010566,"results":"56","hashOfConfig":"31"},{"size":882,"mtime":1639690010569,"results":"57","hashOfConfig":"31"},{"size":0,"mtime":1639690010568,"results":"58","hashOfConfig":"31"},{"size":832,"mtime":1639690834839,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"jjxzbu",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"62"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/index.js",[],["135","136"],"/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/App.js",[],"/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/Pages/ProteinTrackerPage.js",[],"/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/Pages/HomePage.js",[],"/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/containers/MyStatsContainer.js",[],"/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/Pages/StartWorkoutPage.js",["137","138","139","140","141","142"],"import '../components/WorkoutComponents/StartWorkoutPage.css';\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport ExerciseCard from \"../components/ExerciseCard\"\nimport RecordForm from '../components/WorkoutComponents/RecordForm';\nimport Timer from '../components/WorkoutComponents/Timer';\nimport '../components/WorkoutComponents/StartWorkoutPage.css';\nimport Slider from '@mui/material/Slider';\nimport FinishedWorkoutModal from '../components/WorkoutComponents/FinishedWorkoutModal';\n\nconst StartWorkoutPage = () => {\n    const {id} = useParams();\n    const [exercisesOfWorkout, setExercisesOfWorkout] = useState([]);\n    const [exercise, setExercise] = useState([]);\n    const [nextExercise, setNextExercise] = useState(0);\n    const [finishWorkout, setFinishWorkout] = useState(\"Next Exercise\");\n    const [modal, setModal] = useState(false);\n    const [seconds, setSeconds] = useState(0);\n    const [isActive, setIsActive] = useState(false);\n\n    const getAllExercisesByWorkoutId = () => {\n        fetch(`http://localhost:8080/api/v1/exercises/workout/id/${id}`)\n        .then(response => response.json())\n        .then(data => setExercisesOfWorkout(data))\n    }\n    \n    useEffect(getAllExercisesByWorkoutId, []);\n\n    const getExerciseByWorkoutId = () => {\n        fetch(`http://localhost:8080/api/v1/exercises/workout/id/${id}`)\n        .then(response => response.json())\n        .then(data => setExercise(data[nextExercise]))\n    }\n\n    const resetTimer = () => {\n        setSeconds(0);\n        setIsActive(false);\n\n    }\n\n    useEffect(getExerciseByWorkoutId, [nextExercise]);\n\n\n    // const reset = () => {\n    //     setSeconds(0);\n    //     setIsActive(false);\n    // }\n\n    const counter = () => {\n\n\n        if(nextExercise < exercisesOfWorkout.length-1) {\n            setNextExercise(nextExercise + 1);\n        }\n\n        if(nextExercise === exercisesOfWorkout.length - 2) {\n            changeText(\"Finish Workout\")\n        }\n        if(nextExercise === exercisesOfWorkout.length - 1) {\n            setModal(true)\n        }\n\n        console.log(nextExercise)\n        setSeconds(0);\n        setIsActive(true);\n        \n    };\n    \n    useEffect(resetTimer,[counter])\n    // construct a new object from exercisedp\n\n    const onAddExerciseDataPoint = (newExerciseDataPoint) => {\n        // const new object = create object that matches backend, map the object \n    fetch(\"http://localhost:8080/api/v1/data/record\", {\n        method: \"POST\",\n        headers: {\n            'Content-type': 'application/json'\n        },\n        body: JSON.stringify(newExerciseDataPoint)\n    })\n    .then(data => console.log(data))\n\n    \n}\n\n    const nextButton = <button className=\"finish-workout-button\"onClick={counter}>{finishWorkout}</button> \n\n    const changeText = (text) => {\n        setFinishWorkout(text)\n    }\n\n\n    return(\n        <>\n            <div className=\"preset-beginner-title\">\n                <h1>Workout Routine:</h1>\n                <div className=\"slider-container\">\n                <div className=\"slider\">\n                <Slider\n        defaultValue={1}\n        value={nextExercise+1}\n        step={1}\n        marks\n        min={1}\n        max={exercisesOfWorkout.length}\n        valueLabelDisplay=\"auto\"\n      />\n      </div>\n      </div>\n            </div>\n\n                <div className=\"start-workout-page-container\">\n\n\n                    <div className=\"beginner-current-exercise\">\n                        <h1 className=\"beginner-current-exercise-title\">Current Exercise</h1>\n                        <ExerciseCard exercise={exercise} />\n                    </div>\n\n                    <div>\n                        <RecordForm exercise={exercise} onAddExerciseDataPoint = {onAddExerciseDataPoint}/>\n                    </div>    \n\n                    <div className=\"rest-timer-wrapper\">\n                        <h1 className=\"rest-timer-title\"></h1>\n                        <Timer/>\n                    </div>\n\n            </div>\n\n\n            <div className=\"finish-workout-button-wrapper\">\n                {nextButton}\n                {modal && <FinishedWorkoutModal close={setModal}/>}\n            </div>\n        \n        </>\n    )\n\n}\n\n\nexport default StartWorkoutPage;","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/Pages/WorkoutPage.js",["143","144"],"import Workout from \"../components/Workout\"\nimport { useState, useEffect } from \"react\";\nimport { Navigate, useParams } from \"react-router\";\nimport StartWorkoutButton from \"../components/StartWorkoutButton\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../components/Workout.css\"\nimport EditWorkoutButton from \"../components/EditWorkoutComponents/EditWorkoutButton\";\n\nconst WorkoutPage = () => {\n\n    const {id} = useParams();\n    const [exercises,setExercises] = useState([])\n\n\n\n    const getExercisesByWorkoutId = () => {\n        fetch(`http://localhost:8080/api/v1/exercises/workout/id/${id}`)\n        .then(response => response.json())\n        .then(data => setExercises(data))\n    }\n\n    useEffect(getExercisesByWorkoutId, []);\n\n    let navigate = useNavigate();\n\n    const goWorkout = () => {\n        navigate(\"/StartWorkoutPage\")\n    }\n\n    const editWorkout = () => {\n        navigate(\"/EditWorkoutPage\")\n    }\n\n    return(\n        <>\n        <div className=\"preset-beginner-title\">\n            <h1>Workout Routine:</h1>\n        </div>\n\n        <div className=\"preset-beginner-exercises\">\n            <Workout exercises = {exercises}/>\n        </div>\n\n        <div className=\"start-workout-wrapper\">\n            <StartWorkoutButton workoutId={id} goWorkout={goWorkout}/>\n            <EditWorkoutButton workoutId={id} editWorkout={editWorkout}/>\n        </div>\n\n        \n        {/* {exerciseTargets.map(exerciseTarget => <div>{exerciseTarget.exercise_Id}</div>)} */}\n        </>\n    )\n\n}\n\nexport default WorkoutPage;","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/Navbar.js",["145"],"import { useNavigate } from \"react-router-dom\";\nimport \"../Styles/Navbar.css\"\nimport github from \"../Icons/github-icon.png\"\n\n\nconst Navbar = () =>{\n    let navigate = useNavigate();\n\n    const goHomePage = () => {\n      navigate(\"/\");\n    };\n    return (\n      <>\n        <div className={\"container__navbar\"}>\n          <h1 className={\"navbar__title\"}>GainzTracker</h1>\n          <div className={\"container__navbar_buttons\"}>\n            <button className={\"navbar__button\"} onClick={goHomePage}>\n              My Dashboard\n            </button>\n            <button className={\"navbar__button\"}>Login</button>\n            <button className={\"navbar__button\"}>Signup</button>\n            <a href=\"https://github.com/imcalled/BNTA-Capstone\" ><img className={\"navbar__icon\" } src={github} /></a>\n          </div>\n        </div>\n        <hr/>\n      </>\n    );\n}\n\nexport default Navbar;","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/Pages/MyWorkoutsPage.js",["146"],"import React, { useState, useEffect } from \"react\";\nimport WorkoutsList from \"../components/WorkoutsList\"\nimport \"../Styles/MyWorkoutsPage.css\"\nimport { Link } from \"react-router-dom\";\n\n\nconst MyWorkoutsPage = () => {\n  const [workouts, setWorkouts] = useState([]);\n  // const [exerciseTargets, setExerciseTargets] = useState([]);\n\n  const getAllWorkouts = () => {\n    fetch(\"http://localhost:8080/api/v1/workout\")\n    .then(response => response.json())\n    .then(data => setWorkouts(data))\n  }\n  \n  useEffect(getAllWorkouts, [])\n  // useEffect(getAllExerciseTargets, [])\n  \n    return(\n\n        <>\n        <h1 className=\"pageTitle\">My Workouts</h1>\n          <WorkoutsList workouts = {workouts} />\n          \n\n          \n        </>\n\n\n    )\n}\n\nexport default MyWorkoutsPage;","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/Pages/EditWorkoutPage.js",["147","148","149","150","151","152","153","154","155"],"import { useState, useEffect} from \"react\";\nimport ExerciseDropdownSearch from \"../components/ExerciseDropdownSearch\";\nimport ExerciseCardList from \"../components/ExerciseCardList\";\nimport ExerciseCard from \"../components/ExerciseTargetCard\";\nimport ExerciseTargetForm from \"../components/ExerciseTargetForm\";\nimport NewExerciseTargetList from \"../components/NewExerciseTargetList\";\nimport { useParams } from \"react-router-dom\";\nimport SaveWorkoutModal from \"../components/EditWorkoutComponents/SaveWorkoutModal\"\nimport EditWorkoutCSS from \"../components/EditWorkoutComponents/EditWorkoutCSS.css\"\n\nconst EditWorkoutPage = () => {\n\n    const{id} = useParams();\n\n    // const[exercises,setExercises] = useState([]);    \n    const[allExercises, setAllExercises] = useState([]);\n    const[selectedExercise, setSelectedExercise] = useState(null);\n    const[DropSelect, setDropSelect]=useState(null);\n    const[exerciseTarget, setExerciseTarget] = useState(null);\n    const[newExerciseTargetList, setNewExerciseTargetList] = useState([]);\n    const[workoutName, setWorkoutName] = useState(\"\");\n    const[modal, setModal] = useState(false);\n    const[empty, setEmpty] = useState(false);\n\n    const getWorkoutNameById = () => {\n        return fetch(\"http://localhost:8080/api/v1/workout\")\n            .then(response => response.json())\n            .then(data => data.filter(workout => {\n                return (\n                    workout.id == id\n                )\n            }))\n            .then(workout => setWorkoutName(workout[0].name))\n            .then(() => console.log(workoutName))\n    }\n\n    useEffect(getWorkoutNameById, []);\n\n    const getExercisesByWorkoutId = () => {\n        fetch(`http://localhost:8080/api/v1/exercises/workout/id/${id}`)\n        .then(response => response.json())\n        .then(data => {\n            setNewExerciseTargetList(data)\n        })\n    }\n\n    useEffect(getExercisesByWorkoutId, []);\n\n    const getSelectedExercise = () =>{\n        if(DropSelect){\n        fetch(`http://localhost:8080/api/v1/exercises/id/${DropSelect}`)\n        .then(response => response.json())\n        .then(data => setSelectedExercise(data));\n        }\n    }\n\n    useEffect(getSelectedExercise, [DropSelect]);\n\n    const updateDrop=(event) => {\n        setDropSelect(event.target.value);\n    }\n\n    const getAllExercises = () => {\n        fetch(\"http://localhost:8080/api/v1/exercises\")\n            .then(response => response.json())\n            .then(data => setAllExercises(data))\n    }\n\n    useEffect(getAllExercises, []);\n\n    const getAllExerciseTargets = () => {\n        fetch(\"http://localhost:8080/api/v1/exerciseTargets\")\n            .then(response => response.json())\n            .then(data => setExerciseTarget(data))\n            .then(console.log(exerciseTarget))\n    }\n\n    const onAddExerciseTarget = (newExerciseTarget) => {\n        // console.log(newExerciseTarget);\n\n        if(newExerciseTarget === newExerciseTargetList[newExerciseTargetList.length-1]) {\n            console.log(\"same\");\n        }\n        else{\n            setNewExerciseTargetList([...newExerciseTargetList, newExerciseTarget]);\n        }\n    }\n\n    const deleteCard = (id) => {\n        const card = newExerciseTargetList.filter(exercise => {\n            return (\n                exercise.exercise_Id !== id\n        )\n    })\n        setNewExerciseTargetList(card);\n    }\n\n    const handleWorkoutName = (event) => {\n        setWorkoutName(event.target.value);\n    }\n\n    const getWorkoutId = () => {\n        return fetch(\"http://localhost:8080/api/v1/workout\")\n                .then(response => response.json())\n                .then(data => data.filter(workout => {\n                    console.log(\"workout: \", workout);\n                    return (\n                        workout.name == workoutName\n                    )\n                }))\n                .then(workout => {return(workout[0].id)})\n    }\n\n    const saveWorkout = () => {\n        //create new workout object, post it, get workoutId\n\n        if(workoutName === \"\") {\n            setEmpty(true);\n            alert(\"Enter a workout name\");\n            window.scrollTo({\n                top: 0, \n                behavior: 'smooth'\n                /* you can also use 'auto' behaviour\n                   in place of 'smooth' */\n              });\n        }\n\n        if(newExerciseTargetList === []) {\n            alert(\"Add exercises to your workout!\");\n            window.scrollTo({\n                top: 0, \n                behavior: 'smooth'\n                /* you can also use 'auto' behaviour\n                   in place of 'smooth' */\n              });\n        }\n\n        else {\n            const newWorkout = {\n                \"name\": workoutName\n            }\n    \n            fetch(\"http://localhost:8080/api/v1/workout\", {\n                method: \"POST\",\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify(newWorkout)\n            })\n            .then(() => getWorkoutId())\n            //anonymous function, take nothing and call the function\n            .then((workoutId) => {\n                console.log(\"workoutId: \", workoutId);\n                postExerciseTargets(workoutId)})\n            .then(setModal(true))\n            .then(successPopup());\n            //pop up alert to say successful, redirect to \n        }\n    }\n\n    const successPopup = () => {\n        {modal && <SaveWorkoutModal close={setModal}/>}\n    }\n\n    const postExerciseTargets = (workoutId) => {\n        newExerciseTargetList.map(exerciseTarget => {\n\n        const newExerciseTarget = { \n            \"exercise_Id\": exerciseTarget.exercise_Id,\n            \"workout_Id\": workoutId,\n            \"time\": exerciseTarget.targetTime,\n            \"distance\": exerciseTarget.targetDistance,\n            \"sets\": exerciseTarget.targetSets,\n            \"reps\": exerciseTarget.targetReps,\n            \"weight\": exerciseTarget.targetWeight\n        }\n\n        fetch(\"http://localhost:8080/api/v1/exerciseTargets\", {\n            method: \"POST\",\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(newExerciseTarget)\n        })\n        .then(data => console.log(data))  \n    })\n    getAllExerciseTargets();\n}\n\n    const saveButton = newExerciseTargetList.length > 0 ? <button onClick={saveWorkout}>Save</button> : null\n\n    return (\n        allExercises.length > 0\n        ?\n        <>\n        <h1>Edit workout</h1>\n            <form>\n                <label>Workout Name:\n                    <input className={empty ? \"invalid\" : \"workoutName\"} type=\"text\" value={workoutName} onChange={handleWorkoutName}/>\n                </label>\n            </form>\n        {/* {workoutNameForm} */}\n        <ExerciseDropdownSearch allExercises = {allExercises} updateDrop={updateDrop}/>\n        <ExerciseTargetForm exercise={selectedExercise} onAddExerciseTarget={onAddExerciseTarget}/>\n        <NewExerciseTargetList newExerciseTargetList={newExerciseTargetList} deleteCard={deleteCard} />\n        {saveButton}\n        {modal && <SaveWorkoutModal close={setModal}/>}\n        {/* <saveButton /> */}\n        {/* <button onClick={saveWorkout}>Save</button> */}\n        \n        </>\n        :\n        <p>Loading...</p>\n    )\n}\nexport default EditWorkoutPage;","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/containers/NewWorkoutContainer.js",["156","157","158","159"],"import { useState, useEffect } from \"react\";\nimport ExerciseDropdownSearch from \"../components/ExerciseDropdownSearch\";\nimport ExerciseTargetForm from \"../components/ExerciseTargetForm\";\nimport NewExerciseTargetList from \"../components/NewExerciseTargetList\";\nimport SaveWorkoutModal from \"../components/EditWorkoutComponents/SaveWorkoutModal\"\nimport EditWorkoutCSS from \"../components/EditWorkoutComponents/EditWorkoutCSS.css\"\nimport { Link } from \"react-router-dom\";\n\nconst NewWorkoutContainer = () => {\n    \n    const[allExercises, setAllExercises] = useState([]);\n    const[selectedExercise, setSelectedExercise] = useState(null);\n    const[DropSelect, setDropSelect]=useState(null);\n    const[exerciseTarget, setExerciseTarget] = useState(null);\n    const[newExerciseTargetList, setNewExerciseTargetList] = useState([]);\n    const[workoutName, setWorkoutName] = useState(\"\");\n    const[empty, setEmpty] = useState(false);\n    const[modal, setModal] = useState(false);\n    const[workoutId, setWorkoutId] = useState(\"\");\n\n    const getSelectedExercise =()=>{\n        if(DropSelect){\n        fetch(`http://localhost:8080/api/v1/exercises/id/${DropSelect}`)\n        .then(response => response.json())\n        .then(data => setSelectedExercise(data));\n        }\n    }\n\n    useEffect(getSelectedExercise, [DropSelect]);\n\n    const updateDrop=(event) => {\n        setDropSelect(event.target.value);\n    }\n\n    const getAllExercises = () => {\n        fetch(\"http://localhost:8080/api/v1/exercises\")\n            .then(response => response.json())\n            .then(data => setAllExercises(data))\n    }\n\n    useEffect(getAllExercises, []);\n\n    const getAllExerciseTargets = () => {\n        fetch(\"http://localhost:8080/api/v1/exerciseTargets\")\n            .then(response => response.json())\n            .then(data => setExerciseTarget(data))\n            .then(console.log(exerciseTarget))\n    }\n\n    const onAddExerciseTarget = (newExerciseTarget) => {\n\n        if(newExerciseTarget === newExerciseTargetList[newExerciseTargetList.length-1]) {\n            console.log(\"same\");\n        }\n        else{\n            setNewExerciseTargetList([...newExerciseTargetList, newExerciseTarget]);\n        }\n    }\n\n    const deleteCard = (id) => {\n        const card = newExerciseTargetList.filter(exercise => {\n            return (\n                exercise.exercise_Id !== id\n        )\n    })\n        setNewExerciseTargetList(card);\n    }\n\n    const handleWorkoutName = (event) => {\n        setEmpty(false);\n        setWorkoutName(event.target.value);\n    }\n\n    const getWorkoutId = () => {\n        return fetch(\"http://localhost:8080/api/v1/workout\")\n                .then(response => response.json())\n                .then(data => data.filter(workout => {\n                    console.log(\"workout: \", workout);\n                    return (\n                        workout.name == workoutName\n                    )\n                }))\n                .then(workout => {return(workout[0].id)})\n    }\n\n    const saveWorkout = () => {\n        //create new workout object, post it, get workoutId\n\n        if(workoutName === \"\") {\n            setEmpty(true);\n            alert(\"Enter a workout name\");\n            window.scrollTo({\n                top: 0, \n                behavior: 'smooth'\n                /* you can also use 'auto' behaviour\n                   in place of 'smooth' */\n              });\n        }\n\n        else {\n            const newWorkout = {\n                \"name\": workoutName\n            }\n\n            fetch(\"http://localhost:8080/api/v1/workout\", {\n                method: \"POST\",\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify(newWorkout)\n            })\n            .then(() => getWorkoutId())\n            //anonymous function, take nothing and call the function\n            .then((id) => {setWorkoutId(workoutId); return id})\n            .then((id) => {postExerciseTargets(id)})\n            .then(setModal(true))\n            // .then(successPopup());\n        }\n    }\n\n    // const successPopup = () => {\n    //     {modal && <SaveWorkoutModal close={setModal}/>}\n    // }\n\n    const postExerciseTargets = (workoutId) => {\n        newExerciseTargetList.map(exerciseTarget => {\n\n        const newExerciseTarget = { \n            \"exercise_Id\": exerciseTarget.exercise_Id,\n            \"workout_Id\": workoutId,\n            \"time\": exerciseTarget.targetTime,\n            \"distance\": exerciseTarget.targetDistance,\n            \"sets\": exerciseTarget.targetSets,\n            \"reps\": exerciseTarget.targetReps,\n            \"weight\": exerciseTarget.targetWeight\n        }\n\n        fetch(\"http://localhost:8080/api/v1/exerciseTargets\", {\n            method: \"POST\",\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(newExerciseTarget)\n        })\n        .then(data => console.log(data))  \n    })\n    getAllExerciseTargets();\n}\n\n    const saveButton = newExerciseTargetList.length > 0 ? <button onClick={saveWorkout}>Save</button> : null\n\n    return (\n        allExercises.length > 0\n        ?\n        <>\n            <form>\n                <label>Workout Name:\n                    <input className={empty ? \"invalid\" : \"workoutName\"} type=\"text\" onChange={handleWorkoutName}/>\n                </label>\n            </form>\n        {/* {workoutNameForm} */}\n        <ExerciseDropdownSearch allExercises = {allExercises} updateDrop={updateDrop}/>\n        <ExerciseTargetForm exercise={selectedExercise} onAddExerciseTarget={onAddExerciseTarget}/>\n        <NewExerciseTargetList newExerciseTargetList={newExerciseTargetList} deleteCard={deleteCard} />\n        {saveButton}\n        {modal && <SaveWorkoutModal close={setModal} id={workoutId}/>}\n        {/* <saveButton /> */}\n        {/* <button onClick={saveWorkout}>Save</button> */}\n        \n        </>\n        :\n        <p>Loading...</p>\n    )\n}\nexport default NewWorkoutContainer;","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/Graph.js",["160"],"import {Line} from 'react-chartjs-2';\nimport \"../Styles/MyStatsPage.css\";\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport {CategoryScale} from 'chart.js';\nimport Chart from 'chart.js/auto';\nChart.register(CategoryScale);\n\n\nconst Graph=({valuesToGraph, exerciseType})=>{\n\n    const [chartData,setChartData]=useState([]);\n\n\n    useEffect(() => {\n        setChartData({\n            labels: valuesToGraph.map((value => value.date)),\n            valuesTime: valuesToGraph.map((value => value.timeAchieved)),\n            valuesDistance: valuesToGraph.map((value => value.distanceAchieved)),\n            valuesSets: valuesToGraph.map((value => value.setsAchieved)),\n            valuesReps: valuesToGraph.map((value => value.repsAchieved)),\n            valuesWeight: valuesToGraph.map((value => value.weightAchieved))\n        }\n    )},[valuesToGraph]);\n\n    let yAxisLabel;\n    let yAxisData;\n    let unit;\n\n    if (exerciseType === \"WEIGHTS\") {\n      yAxisData = chartData.valuesWeight;\n      unit = \"kg\";\n      yAxisLabel = \"Weight Lifted\"\n    } else if (exerciseType === \"CALISTHENICS\") {\n      yAxisData = chartData.valuesSets.map(function (n, i) {\n        return n * chartData.valuesReps[i];\n      });\n      unit = \"reps\";\n      yAxisLabel = \"Total Reps\"\n    } else if (exerciseType === \"CARDIO\") {\n      yAxisData = chartData.valuesDistance.map(function (n, i) {\n        return n / chartData.valuesTime[i];\n      });\n      unit = \"meters/min\";\n      yAxisLabel = \"Pace\"\n    }\n\n    const data = {\n      datasets: [\n        {\n          label:\"Exercise Logs\",\n          data: yAxisData,\n          fill: true,\n          backgroundColor: \"transparent\",\n          borderColor: \"rgba(255,30,0, 0.50)\",\n          pointBackgroundColor: \"rgba(255, 255, 255, 1)\",\n          tension: 0.15,\n          fill: {\n            target: \"origin\",\n            above: \"rgba(255,69,0,0.6)\", // Area will be red above the origin\n            below: \"rgb(0, 0, 255)\", // And blue below the origin\n          },\n        },\n      ],\n    };\n\n    return (\n      exerciseType ?(\n\n        <Line\n            data={data}\n            options={{\n\n              scales: {\n                x: {\n                  labels: chartData.labels,\n                  title: {\n                    color: \"grey\",\n                    display: true,\n                    text: \"Date\",\n                  },\n                },\n                y: {\n                  labels: data.datasets.data,\n                  ticks: {\n                    callback: function (value) {\n                      return value + ` ${unit}`;\n                    },\n                  },\n                  title: {\n                    color: \"grey\",\n                    display: true,\n                    text: `${yAxisLabel}`,\n                  },\n                },\n              },\n              responsive: true,\n              maintainAspectRatio: false,\n              aspectRatio:2.6\n                 }}\n                \n          />)\n          :\n\n          (<p>Select an exercise to see your progress</p>)\n          \n          \n\n    );\n}\n \n\nexport default Graph;","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/ExerciseDropdownSearch.js",[],"/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/WorkoutsList.js",["161"],"import React from 'react';\nimport Workout from './Workout';\nimport { useNavigate } from \"react-router-dom\";\nimport WorkoutButton from './WorkoutButton';\nimport \"../Styles/MyWorkoutsPage.css\"\nimport { Link } from \"react-router-dom\";\n\nconst WorkoutsList= ({workouts}) => {\n    let navigate = useNavigate()\n\n    const goWorkout = (id) =>{\n        navigate(\"/WorkoutPage\")\n    }\n\n    const workoutComponents = workouts.map(workout => {\n        return(\n            <WorkoutButton workout={workout} goWorkout={goWorkout}/>\n            \n        )\n    })\n\n    return (\n        <>\n            <div className=\"container__button_primary\">\n            {workoutComponents}\n\n            <Link to={{ pathname:\"/NewWorkoutPage\"}}><button className=\"advanced-button\">Create Custom Workout</button></Link>\n            \n            <section className=\"Workout-List\">\n\n            </section>\n            </div>\n        </>\n    )\n}\nexport default WorkoutsList;\n\n","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/Workout.js",["162"],"import React from 'react';\nimport './Workout.css';\nimport ExerciseCard from './ExerciseCard';\nimport ExerciseTarget from './ExerciseTarget';\n\nconst Workout = ({exercises}) => {\n\n\n    //from exerciseTarget get exerciseId, then link to exerciseName in exercises\n\n    //filter exercises by exercise_Id, return exercise.name\n\n    // const mapExerciseTarget = exerciseTargets.map(exerciseTarget => {\n    //     exerciseTarget.exercise_Id;\n    // });\n\n    const exerciseElements = exercises.map(exercise => {\n        return(\n            <ExerciseCard exercise = {exercise} />\n        )\n    }\n      \n    )\n        \n    // const mapExercise = exercises.map(exercise => {\n\n    //     // if(exercise.id === exerciseTargets.exercise_Id) {\n    //         return(\n    //             <Exercise id={exercise.id}/>\n    //         )\n    //     // }\n\n    // })\n\n    // const filteredExercise = (exercise_Id) => exercises.filter(exercises => {\n        \n    // })\n    // () => {\n    //     if (targetExercise.exercise_Id === exercise.id){\n    //         return exercises.filter(exercise => {\n    //             return exercise.name\n    //         })\n    //     }\n    // }\n    \n    // const exerciseName = (exerciseTargets, {mapExercise}) => {\n    //     if(exerciseTargets.exercise_Id === {mapExercise}) {\n    //         return {exercise.name}\n    //     }\n            \n\n    // }\n\n    \n    return (\n        <>\n        {exerciseElements}\n\n        {/* {exerciseName(exerciseTargets, exercises)} \n        {exercises.map(exercise => {if(exercise.id === exerciseName(exerciseTargets)) return <div> {exercise.name} </div>})}\n        {exerciseTargets.map(exerciseTarget => <div> Sets {exerciseTarget.sets}</div>)}\n        {exerciseTargets.map(exerciseTarget => <div> Reps {exerciseTarget.reps}</div>)}\n        {exerciseTargets.map(exerciseTarget => <div> Time {exerciseTarget.time}</div>)}\n        {exerciseTargets.map(exerciseTarget => <div> Distance {exerciseTarget.distance}</div>)}\n        {exerciseTargets.map(exerciseTarget => <div> Weight {exerciseTarget.weight}</div>)} */}\n        </>\n    )\n}\n\n\nexport default Workout;\n","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/NewExerciseTargetList.js",["163"],"import ExerciseTargetCard from \"./ExerciseTargetCard\"\nimport { useEffect } from \"react/cjs/react.development\"\n\n//an array of the exerciseTargetLists\nconst NewExerciseTargetList = ({newExerciseTargetList, deleteCard}) => {\n    \n    // const exerciseTarget = console.log(\"object:\", (Object.values(newExerciseTargetList))[0][0]);\n    \n    const exerciseTargets = newExerciseTargetList.map(exerciseTarget => {\n        return (\n            <ExerciseTargetCard exercise={exerciseTarget} deleteCard={deleteCard}/>\n        )\n    });\n\n    return (\n        <>\n        {exerciseTargets}\n        </>\n    )\n}\nexport default NewExerciseTargetList;","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/ExerciseCard.js",["164","165","166","167"],"import React from 'react';\nimport cardio from '../Icons/cardio.png';\nimport calisthenic from '../Icons/back-lever.png';\nimport weight from '../Icons/dumbbell.png';\n\nconst ExerciseCard = ({exercise}) => {\n    switch(exercise.exerciseType)\n    {\n        case \"CALISTHENICS\":\n            return(\n            <>\n                <div className=\"calisthenics-workout\">\n                    <img className=\"calisthenics-image\" src={calisthenic} />\n                    \n                    <div className=\"calisthenics-workout-container\">\n                        <p className=\"calisthenics-workout-name\">{exercise.name}</p>\n\n                    <div className=\"calisthenics-workout-targets\">\n                        <p>Sets: {exercise.targetReps}</p>\n                        <p>Reps: {exercise.targetSets}</p>\n                    </div>\n                </div>\n            </div>\n            </>\n            )\n        case \"WEIGHTS\":\n            return(\n            <div className=\"weights-workout\">\n                <img className = 'weight-image' src = \"https://www.vippng.com/png/detail/55-554509_dumbbells-clipart-svg-gym-weight-icon-png.png\" />\n                <div className=\"weights-workout-container\">\n                    <p className=\"weights-workout-name\">{exercise.name}</p>\n                    <div className=\"cardio-workout-targets\">\n                        <p id = \"weights-workout-sets\">Sets: {exercise.targetSets}</p>\n                        <p id = \"weights-workout-reps\"> Reps: {exercise.targetReps}</p>\n                        <p id = \"weights-workout-weights\">Weight: {exercise.targetWeight}kg</p>\n                 </div>\n                </div>\n            </div>\n            )\n        case \"CARDIO\":\n            return(\n            <>\n                <div className=\"cardio-workout\">\n                    <img className=\"cardio-image\" src={cardio}/>    \n\n                    <div className=\"cardio-workout-container\">\n                        <p className=\"cardio-workout-name\">{exercise.name}</p>\n\n                        <div className=\"cardio-workout-targets\">\n                            <p id=\"cardio-workout-distance\">Distance: {exercise.targetDistance}m</p>\n                            <p id=\"cardio-workout-time\">Time: {exercise.targetTime}mins</p>\n                        </div>\n                    </div>\n                </div>\n            </>\n            )\n        default: console.log(\"Unmatched exercise type\")\n    }\n\n    return (\n        <>\n            <h1 className=\"beginner-current-exercise-title\">Current Exercise</h1>\n            {ExerciseCard}\n\n\n        {/* <p>Time: {exercise.targetTime}</p>\n        <p>Distance: {exercise.targetDistance}</p>\n        <p>Sets: {exercise.targetSets}</p>\n        <p>Reps: {exercise.targetReps}</p>\n        <p>Weight: {exercise.targetWeight}</p> */}\n        </>\n\n    )\n}\n\nexport default ExerciseCard;\n","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/ExerciseCardList.js",[],"/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/StartWorkoutButton.js",["168","169"],"import React from 'react';\nimport './Workout.css';\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst StartWorkoutButton = ({workoutId, goWorkout}) => {\n\n    return (\n        <>\n        <Link to={{ pathname: `/StartWorkoutPage/${workoutId}` }}>\n            <button className=\"start-workout-button\" onClick = {()=>goWorkout(workoutId)}>Start Workout</button>\n        </Link>\n        </>\n        \n    )\n\n}\n\nexport default StartWorkoutButton;","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/ExerciseTargetForm.js",["170","171","172","173","174","175"],"import cardio from '../Icons/cardio.png';\nimport calisthenic from '../Icons/back-lever.png';\nimport weights from '../Icons/dumbbell.png';\nimport { useState, useEffect } from 'react/cjs/react.development';\nimport './Workout.css'\n\nconst ExerciseTargetForm = ({exercise, onAddExerciseTarget}) => {\n\n    const[sets, setSets] = useState(\"\");\n    const[reps, setReps] = useState(\"\");\n    const[weights, setWeights] = useState(\"\");\n    const[time, setTime] = useState(\"\");\n    const[distance, setDistance] = useState(\"\");\n    const newExerciseTarget = \"\";\n\n    const handleSetsChange = (event) => {\n        setSets(event.target.value);\n    }\n\n    const handleRepsChange = (event) => {\n        setReps(event.target.value);\n    }\n\n    const handleWeightsChange = (event) => {\n        setWeights(event.target.value);\n    }\n\n    const handleTimeChange = (event) => {\n        setTime(event.target.value);\n    }\n\n    const handleDistanceChange = (event) => {\n        setDistance(event.target.value);\n    }\n\n    const handleSubmitTarget = (event) => {\n        event.preventDefault();\n\n        // const oldExerciseTarget = newExerciseTarget;\n\n        const newExerciseTarget = {\n            \"exercise_Id\": exercise.id,\n            \"exerciseType\": exercise.exerciseType,\n            \"name\": exercise.name,\n            \"targetTime\": time,\n            \"targetDistance\": distance,\n            \"targetSets\": sets,\n            \"targetReps\": reps,\n            \"targetWeight\": weights\n        }\n\n        // if(oldExerciseTarget === newExerciseTarget) {\n        //     console.log(\"same\");\n        // }\n        // else {\n        onAddExerciseTarget(newExerciseTarget);\n\n        setSets(\"\");\n        setReps(\"\");\n        setWeights(\"\");\n        setTime(\"\");\n        setDistance(\"\");\n        // }\n\n        event.target.reset();\n    \n    }\n\n    //TODO: Enter numbers only!\n    //TODO: For weights enter lb/kg\n    const displayForm = () => {\n        // console.log(exercise);\n        if(exercise) {\n                switch(exercise.exerciseType) {\n                case \"CALISTHENICS\":\n                    // console.log(\"calisthenics\");\n                    return (\n                    <>\n                        <div className=\"calisthenics-workout\">\n                            <img className=\"calisthenics-image\" src={calisthenic} />\n                            \n                            <div className=\"calisthenics-workout-container\">\n                                <p className=\"calisthenics-workout-name\">{exercise.name}</p>\n\n                                <div className=\"calisthenics-workout-targets\">\n                                    <form onSubmit={handleSubmitTarget}>\n                                        <label>Sets:\n                                            <input type=\"number\" onChange={handleSetsChange}/>\n                                        </label>\n                                        <label>Reps:\n                                            <input type=\"number\" onChange={handleRepsChange}/>\n                                        </label>\n                                        <div className=\"add-exercise-button-container\" >\n                                        <input className=\"add-exercise-button\" type=\"submit\" value=\"Add\"/>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                    )\n                case \"WEIGHTS\":\n                    // console.log(\"weights\");\n                    return(\n                    <div className=\"weights-workout\">\n                        <img className=\"weights-image2\" src=\"https://www.vippng.com/png/detail/55-554509_dumbbells-clipart-svg-gym-weight-icon-png.png\" />\n\n                    <div className=\"calisthenics-workout-container\">\n                        <p className=\"weights-workout-name\">{exercise.name}</p>\n\n                        <div className=\"calisthenics-workout-targets\">\n                                <form  onSubmit={handleSubmitTarget}>\n                                    <label>Sets:\n                                        <input type=\"number\" onChange={handleSetsChange}/>\n                                    </label>\n                                    <label>Reps:\n                                        <input type=\"number\" onChange={handleRepsChange}/>\n                                    </label>\n                                    <label>Weight(kg):\n                                        <input type=\"number\" onChange={handleWeightsChange}/>\n                                    </label>\n                                    <div className=\"add-exercise-button-container\">\n                                    <input className=\"add-exercise-button\" type=\"submit\" value=\"Add\"/>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    )\n                case \"CARDIO\":\n                    // console.log(\"cardio\")\n                    return(\n                    <>\n                        <div className=\"cardio-workout\">\n                            <img className=\"cardio-image\" src={cardio}/>    \n\n                            <div className=\"cardio-workout-container\">\n                                <p className=\"cardio-workout-name\">{exercise.name}</p>\n\n                                <div className=\"cardio-workout-targets\">\n                                    <form  onSubmit={handleSubmitTarget}>\n                                        <label>Time:\n                                            <input type=\"number\" onChange={handleTimeChange}/>\n                                        </label>\n                                        <label>Distance:\n                                            <input type=\"number\" onChange={handleDistanceChange}/>\n                                        </label>\n                                        <div className=\"add-exercise-button-container\">\n                                        <input className=\"add-exercise-button\" type=\"submit\" value=\"Add\"/>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                    )\n                default: console.log(\"Unmatched exercise type\")\n            }\n        }\n    }\n\n    useEffect(displayForm, [exercise]);\n\n    return (\n        <>\n        {displayForm({exercise})}\n        </>\n    )\n\n}\nexport default ExerciseTargetForm;","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/WorkoutComponents/RecordForm.js",["176"],"import React from 'react'\nimport { useState, useEffect } from 'react';\nimport './StartWorkoutPage.css';\n\nconst RecordForm = ({exercise, onAddExerciseDataPoint}) => {\n\n    const[sets, setSets] = useState(\"\");\n    const[reps, setReps] = useState(\"\");\n    const[weights, setWeights] = useState(\"\");\n    const[time, setTime] = useState(\"\");\n    const[distance, setDistance] = useState(\"\");\n    const[date, setDate] = useState(\"\") \n\n    const handleSetsChange = (event) => {\n        setSets(event.target.value);\n    }\n\n    const handleDateChange = (event) => {\n           setDate(event.target.value)\n       } \n\n    const handleDateChangeToday = () => {\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2,'0');\n        var mm = String(today.getMonth() +1).padStart(2,'0');\n        var yyyy = today.getFullYear();\n\n        today = yyyy + '-' + mm + '-' + dd;\n        console.log(String(today));\n        setDate(String(today));\n    }\n\n    const handleRepsChange = (event) => {\n        setReps(event.target.value);\n    }\n\n    const handleWeightsChange = (event) => {\n        setWeights(event.target.value);\n    }\n\n    const handleTimeChange = (event) => {\n        setTime(event.target.value);\n    }\n\n    const handleDistanceChange = (event) => {\n        setDistance(event.target.value);\n    }\n\n    const handleSubmitTarget = (event) => {\n        event.preventDefault();\n\n        const newExerciseDataPoint = {\n            \"exerciseID\": exercise.exercise_Id,\n            \"name\": exercise.name,\n            \"date\": date, \n            \"timeAchieved\": time,\n            \"distanceAchieved\": distance,\n            \"setsAchieved\": sets,\n            \"repsAchieved\": reps,\n            \"weightAchieved\": weights\n        }\n\n        onAddExerciseDataPoint(newExerciseDataPoint);\n        setDate(\"\") \n        setSets(\"\");\n        setReps(\"\");\n        setWeights(\"\");\n        setTime(\"\");\n        setDistance(\"\");\n    }\n\n\n    //TODO: Enter numbers only!\n    //TODO: For weights enter lb/kg\n    const displayForm = () => {\n        // console.log(exercise);\n        if(exercise) {\n                switch(exercise.exerciseType) {\n                case \"CALISTHENICS\":\n                    // console.log(\"calisthenics\");\n                    return (\n                    <>\n                        <div className=\"calisthenics-data\">\n                            \n                            <div className=\"calisthenics-data-container\">\n                                <p className=\"calisthenics-data-name\">{exercise.name}</p>\n\n                                <div className=\"calisthenics-data-targets\">\n                                    <form className=\"record-form-wrapper\"onSubmit={handleSubmitTarget}>\n                                        <label>Date:\n                                        <div className = \"container__date\">\n                                            <input value={date} type=\"text\" placeholder = \"yyyy-mm-dd\" onChange={handleDateChange}/>\n                                            <button type=\"button\" onClick={handleDateChangeToday}>Use Today's Date</button>\n                                        </div>\n                                        </label>\n                                        <label>Sets Achieved:\n                                            <input value={sets} type=\"text\" placeholder = \"enter sets completed\" onChange={handleSetsChange}/>\n                                        </label>\n                                        <label>Reps Achieved:\n                                            <input value={reps} type=\"text\" placeholder = \"enter reps completed\" onChange={handleRepsChange}/>\n                                        </label>\n                                        <input type=\"submit\" value=\"Add\"/>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                    )\n                case \"WEIGHTS\":\n                    // console.log(\"weights\");\n                    return(\n                    <div className=\"weights-data\">\n\n                    <div className=\"weights-data-container\">\n                        <p className=\"weights-data-name\">{exercise.name}</p>\n\n                        <div className=\"weights-data-targets\">\n                                <form className=\"record-form-wrapper\"onSubmit={handleSubmitTarget}>\n                                    <label>Date:\n                                        <div className = \"container__date\">\n                                            <input value={date} type=\"text\" placeholder = \"yyyy-mm-dd\" onChange={handleDateChange}/>\n                                            <button type=\"button\" onClick={handleDateChangeToday}>Use Today's Date</button>\n                                        </div>\n                                    </label>\n                                    \n                                    <label>Sets Achieved:\n                                        <input value={sets} type=\"text\" placeholder = \"enter sets completed\" onChange={handleSetsChange}/>\n                                    </label>\n                                    <label>Reps Achievced:\n                                        <input value={reps} type=\"text\" placeholder = \"enter reps completed\" onChange={handleRepsChange}/>\n                                    </label>\n                                    <label>Weights Achievced:\n                                        <input value={weights} type=\"text\" placeholder = \"enter weights completed\" onChange={handleWeightsChange}/>\n                                    </label>\n                                    <input type=\"submit\" value=\"Add\"/>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    )\n                case \"CARDIO\":\n                    // console.log(\"cardio\")\n                    return(\n                    <>\n                        <div className=\"cardio-data\">\n                            <div className=\"cardio-data-container\">\n                                <p className=\"cardio-data-name\">{exercise.name}</p>\n\n                                <div className=\"cardio-data-targets\">\n                                    <form className=\"record-form-wrapper\" onSubmit={handleSubmitTarget}>\n                                        <label>Date:\n                                        <div className = \"container__date\">\n                                            <input value={date} type=\"text\" placeholder = \"yyyy-mm-dd\" onChange={handleDateChange}/>\n                                            <button type=\"button\" onClick={handleDateChangeToday}>Use Today's Date</button>\n                                        </div>\n                                        </label>\n                                        <label>Time Achieved:\n                                            <input type=\"text\" placeholder = \"enter minutes\" onChange={handleTimeChange}/>\n                                        </label>\n                                        <label>Distance Achieved:\n                                            <input type=\"text\" placeholder = \"enter meters\" onChange={handleDistanceChange}/>\n                                        </label>\n                                        <input type=\"submit\" value=\"Add\"/>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                    )\n                default: console.log(\"Unmatched exercise type\")\n            }\n        }\n    }\n\n    useEffect(displayForm, [exercise]);\n\n    return (\n        <>\n        <h1 className=\"review-form-name\">Review Form</h1>\n        <div className=\"review-form-data\">\n            {displayForm({exercise})}\n        </div>\n        </>\n    )\n\n}\n\nexport default RecordForm;\n","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/ExerciseTargetCard.js",["177","178","179","180","181"],"import cardio from '../Icons/cardio.png'\nimport calisthenic from '../Icons/back-lever.png'\nimport { useEffect } from 'react/cjs/react.development'\nimport './Workout.css'\nimport bin from '../Icons/binIcon.png'\n\nconst ExerciseTargetCard = ({exercise, deleteCard}) => {\n\n    const handleDelete = (event) => {\n        console.log(\"id: \", exercise.exercise_Id);\n        //delete the card with id\n        event.preventDefault();\n        deleteCard(exercise.exercise_Id);\n    }\n    \n    const displayCard = () => {\n        // console.log(\"card: \", exercise);\n        if(exercise) {\n                switch(exercise.exerciseType) {\n                case \"CALISTHENICS\":\n                    console.log(\"calisthenics\");\n                    return (\n                    <>\n                        <div className=\"calisthenics-workout\">\n                            <img className=\"calisthenics-image\" src={calisthenic} />\n                            \n                            <div className=\"calisthenics-workout-container\">\n                                <p className=\"calisthenics-workout-name\">{exercise.name}</p>\n\n                            <div className=\"calisthenics-workout-targets\">\n                                <p>Sets: {exercise.targetReps}</p>\n                                <p>Reps: {exercise.targetSets}</p>\n                                <button className=\"delete-exercise-button\"  onClick={handleDelete}>Delete\n                                    {/* <image className=\"bin-icon\" src={bin}/> */}\n                                </button>\n                            </div>\n\n                        </div>\n                    </div>\n                    </>\n                    )\n                case \"WEIGHTS\":\n                    console.log(\"weights\");\n                    return(\n                    <div className=\"weights-workout\">\n                        <img className=\"weights-image2\" src=\"https://www.vippng.com/png/detail/55-554509_dumbbells-clipart-svg-gym-weight-icon-png.png\" />\n                        <p className=\"weights-workout-name\">{exercise.name}</p>\n                        <div className=\"weight-issue\">\n                        <p>Sets: {exercise.targetSets}</p>\n                        <p>Reps: {exercise.targetReps}</p>\n                        <p>Weight: {exercise.targetWeights}</p>\n                        <button className=\"delete-exercise-button\" onClick={handleDelete}>Delete</button>\n                        </div>\n                       \n                                    {/* <image className=\"bin-icon\" src={bin}/> */}\n                        \n                    </div>\n                    )\n                case \"CARDIO\":\n                    // console.log(\"cardio\")\n                    return(\n                    <>\n                        <div className=\"cardio-workout\">\n                            <img className=\"cardio-image\" src={cardio}/>    \n\n                            <div className=\"cardio-workout-container\">\n                                <p className=\"cardio-workout-name\">{exercise.name}</p>\n\n                                <div className=\"cardio-workout-targets\">\n                                    <p>Time: {exercise.targetTime}mins</p>\n                                    <p>Distance: {exercise.targetDistance}m</p>\n                                    <button className=\"delete-exercise-button\" onClick={handleDelete}>Delete\n                                    {/* <image className=\"bin-icon\" src={bin}/> */}\n                                </button>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                    )\n                default: console.log(\"Unmatched exercise type\")\n            }\n        }\n    }\n\n    useEffect(displayCard, [exercise]);\n\n    return (\n        <>\n        {displayCard({exercise})}\n        </>\n    )\n}\n\nexport default ExerciseTargetCard;","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/WorkoutComponents/FinishedWorkoutModal.js",[],"/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/EditWorkoutComponents/SaveWorkoutModal.js",[],"/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/EditWorkoutComponents/EditWorkoutButton.js",[],"/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/WorkoutComponents/Timer.js",[],"/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/WorkoutButton.js",["182","183","184","185"],"import React from 'react';\nimport './Workout.css';\nimport { useState, useEffect } from \"react\";\nimport \"../Styles/MyWorkoutsPage.css\"\nimport { Link } from \"react-router-dom\";\n\nconst WorkoutButton = ({workout, goWorkout}) => {\n    \n    const [exerciseTargets,setExerciseTargets] = useState([])\n\n    \n    const getExerciseTargets = () =>{\n\n    }\n    return (\n        <>\n        <Link to={{ pathname: `/WorkoutPage/${workout.id}` }}>\n        {/* <div className=\"all-buttons\"> */}\n            \n            <button class = \"button__primary\" onClick = {()=>goWorkout(workout.id)}>{workout.name}</button>\n\n            {/* <div className=\"button-1\">\n                <button onClick = {getExerciseTargets(id)} className=\"beginner-button\"> Beginner Workout </button>\n            </div> */}\n        {/* </div> */}\n        </Link>\n        </>\n        \n    )\n\n\n\n}\n\nexport default WorkoutButton;\n","/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/ExerciseTarget.js",[],"/Users/zahir/Documents/capstone-5/BNTA-Capstone/frontEnd/src/components/Footer.js",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":18,"column":12,"nodeType":"192","messageId":"193","endLine":18,"endColumn":19},{"ruleId":"190","severity":1,"message":"194","line":19,"column":12,"nodeType":"192","messageId":"193","endLine":19,"endColumn":20},{"ruleId":"195","severity":1,"message":"196","line":27,"column":43,"nodeType":"197","endLine":27,"endColumn":45,"suggestions":"198"},{"ruleId":"195","severity":1,"message":"196","line":41,"column":39,"nodeType":"197","endLine":41,"endColumn":53,"suggestions":"199"},{"ruleId":"195","severity":1,"message":"200","line":49,"column":11,"nodeType":"201","endLine":67,"endColumn":6,"suggestions":"202"},{"ruleId":"203","severity":1,"message":"204","line":125,"column":25,"nodeType":"205","endLine":125,"endColumn":58},{"ruleId":"190","severity":1,"message":"206","line":3,"column":10,"nodeType":"192","messageId":"193","endLine":3,"endColumn":18},{"ruleId":"195","severity":1,"message":"196","line":22,"column":40,"nodeType":"197","endLine":22,"endColumn":42,"suggestions":"207"},{"ruleId":"208","severity":1,"message":"209","line":22,"column":66,"nodeType":"205","endLine":22,"endColumn":114},{"ruleId":"190","severity":1,"message":"210","line":4,"column":10,"nodeType":"192","messageId":"193","endLine":4,"endColumn":14},{"ruleId":"190","severity":1,"message":"211","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":24},{"ruleId":"190","severity":1,"message":"212","line":4,"column":8,"nodeType":"192","messageId":"193","endLine":4,"endColumn":20},{"ruleId":"190","severity":1,"message":"213","line":9,"column":8,"nodeType":"192","messageId":"193","endLine":9,"endColumn":22},{"ruleId":"214","severity":1,"message":"215","line":30,"column":32,"nodeType":"216","messageId":"217","endLine":30,"endColumn":34},{"ruleId":"195","severity":1,"message":"218","line":37,"column":35,"nodeType":"197","endLine":37,"endColumn":37,"suggestions":"219"},{"ruleId":"195","severity":1,"message":"196","line":47,"column":40,"nodeType":"197","endLine":47,"endColumn":42,"suggestions":"220"},{"ruleId":"214","severity":1,"message":"215","line":108,"column":38,"nodeType":"216","messageId":"217","endLine":108,"endColumn":40},{"ruleId":"221","severity":1,"message":"222","line":162,"column":9,"nodeType":"223","messageId":"224","endLine":162,"endColumn":56},{"ruleId":"225","severity":1,"message":"226","line":166,"column":50,"nodeType":"227","messageId":"228","endLine":166,"endColumn":52},{"ruleId":"190","severity":1,"message":"213","line":6,"column":8,"nodeType":"192","messageId":"193","endLine":6,"endColumn":22},{"ruleId":"190","severity":1,"message":"210","line":7,"column":10,"nodeType":"192","messageId":"193","endLine":7,"endColumn":14},{"ruleId":"214","severity":1,"message":"215","line":80,"column":38,"nodeType":"216","messageId":"217","endLine":80,"endColumn":40},{"ruleId":"225","severity":1,"message":"226","line":126,"column":50,"nodeType":"227","messageId":"228","endLine":126,"endColumn":52},{"ruleId":"229","severity":1,"message":"230","line":58,"column":11,"nodeType":"231","messageId":"217","endLine":58,"endColumn":15},{"ruleId":"190","severity":1,"message":"232","line":2,"column":8,"nodeType":"192","messageId":"193","endLine":2,"endColumn":15},{"ruleId":"190","severity":1,"message":"233","line":4,"column":8,"nodeType":"192","messageId":"193","endLine":4,"endColumn":22},{"ruleId":"190","severity":1,"message":"234","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":19},{"ruleId":"190","severity":1,"message":"235","line":4,"column":8,"nodeType":"192","messageId":"193","endLine":4,"endColumn":14},{"ruleId":"208","severity":1,"message":"209","line":13,"column":21,"nodeType":"205","endLine":13,"endColumn":77},{"ruleId":"208","severity":1,"message":"209","line":29,"column":17,"nodeType":"205","endLine":29,"endColumn":149},{"ruleId":"208","severity":1,"message":"209","line":44,"column":21,"nodeType":"205","endLine":44,"endColumn":65},{"ruleId":"190","severity":1,"message":"236","line":3,"column":10,"nodeType":"192","messageId":"193","endLine":3,"endColumn":18},{"ruleId":"190","severity":1,"message":"234","line":3,"column":20,"nodeType":"192","messageId":"193","endLine":3,"endColumn":29},{"ruleId":"190","severity":1,"message":"237","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":15},{"ruleId":"190","severity":1,"message":"238","line":14,"column":11,"nodeType":"192","messageId":"193","endLine":14,"endColumn":28},{"ruleId":"208","severity":1,"message":"209","line":80,"column":29,"nodeType":"205","endLine":80,"endColumn":85},{"ruleId":"208","severity":1,"message":"209","line":106,"column":25,"nodeType":"205","endLine":106,"endColumn":155},{"ruleId":"208","severity":1,"message":"209","line":135,"column":29,"nodeType":"205","endLine":135,"endColumn":73},{"ruleId":"195","severity":1,"message":"239","line":162,"column":28,"nodeType":"197","endLine":162,"endColumn":38,"suggestions":"240"},{"ruleId":"195","severity":1,"message":"241","line":175,"column":28,"nodeType":"197","endLine":175,"endColumn":38,"suggestions":"242"},{"ruleId":"190","severity":1,"message":"243","line":5,"column":8,"nodeType":"192","messageId":"193","endLine":5,"endColumn":11},{"ruleId":"208","severity":1,"message":"209","line":25,"column":29,"nodeType":"205","endLine":25,"endColumn":85},{"ruleId":"208","severity":1,"message":"209","line":46,"column":25,"nodeType":"205","endLine":46,"endColumn":155},{"ruleId":"208","severity":1,"message":"209","line":64,"column":29,"nodeType":"205","endLine":64,"endColumn":73},{"ruleId":"195","severity":1,"message":"244","line":85,"column":28,"nodeType":"197","endLine":85,"endColumn":38,"suggestions":"245"},{"ruleId":"190","severity":1,"message":"234","line":3,"column":20,"nodeType":"192","messageId":"193","endLine":3,"endColumn":29},{"ruleId":"190","severity":1,"message":"246","line":9,"column":12,"nodeType":"192","messageId":"193","endLine":9,"endColumn":27},{"ruleId":"190","severity":1,"message":"247","line":9,"column":28,"nodeType":"192","messageId":"193","endLine":9,"endColumn":46},{"ruleId":"190","severity":1,"message":"248","line":12,"column":11,"nodeType":"192","messageId":"193","endLine":12,"endColumn":29},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"no-unused-vars","'seconds' is assigned a value but never used.","Identifier","unusedVar","'isActive' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["251"],["252"],"The 'counter' function makes the dependencies of useEffect Hook (at line 69) change on every render. To fix this, wrap the definition of 'counter' in its own useCallback() Hook.","VariableDeclarator",["253"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Navigate' is defined but never used.",["254"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Link' is defined but never used.","'ExerciseCardList' is defined but never used.","'ExerciseCard' is defined but never used.","'EditWorkoutCSS' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'id' and 'workoutName'. Either include them or remove the dependency array.",["255"],["256"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-dupe-keys","Duplicate key 'fill'.","ObjectExpression","'Workout' is defined but never used.","'ExerciseTarget' is defined but never used.","'useEffect' is defined but never used.","'weight' is defined but never used.","'useState' is defined but never used.","'weights' is defined but never used.","'newExerciseTarget' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleSubmitTarget'. Either include it or remove the dependency array.",["257"],"React Hook useEffect has missing dependencies: 'date', 'handleSubmitTarget', 'reps', 'sets', and 'weights'. Either include them or remove the dependency array.",["258"],"'bin' is defined but never used.","React Hook useEffect has a missing dependency: 'handleDelete'. Either include it or remove the dependency array.",["259"],"'exerciseTargets' is assigned a value but never used.","'setExerciseTargets' is assigned a value but never used.","'getExerciseTargets' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"260","fix":"266"},{"desc":"267","fix":"268"},{"desc":"260","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},"Update the dependencies array to be: [id]",{"range":"276","text":"277"},"Update the dependencies array to be: [id, nextExercise]",{"range":"278","text":"279"},"Wrap the definition of 'counter' in its own useCallback() Hook.",{"range":"280","text":"281"},{"range":"282","text":"277"},"Update the dependencies array to be: [id, workoutName]",{"range":"283","text":"284"},{"range":"285","text":"277"},"Update the dependencies array to be: [exercise, handleSubmitTarget]",{"range":"286","text":"287"},"Update the dependencies array to be: [date, exercise, handleSubmitTarget, reps, sets, weights]",{"range":"288","text":"289"},"Update the dependencies array to be: [exercise, handleDelete]",{"range":"290","text":"291"},[1256,1258],"[id]",[1611,1625],"[id, nextExercise]",[1746,2180],"useCallback(() => {\n\n\n        if(nextExercise < exercisesOfWorkout.length-1) {\n            setNextExercise(nextExercise + 1);\n        }\n\n        if(nextExercise === exercisesOfWorkout.length - 2) {\n            changeText(\"Finish Workout\")\n        }\n        if(nextExercise === exercisesOfWorkout.length - 1) {\n            setModal(true)\n        }\n\n        console.log(nextExercise)\n        setSeconds(0);\n        setIsActive(true);\n        \n    })",[739,741],[1628,1630],"[id, workoutName]",[1918,1920],[6578,6588],"[exercise, handleSubmitTarget]",[7768,7778],"[date, exercise, handleSubmitTarget, reps, sets, weights]",[3796,3806],"[exercise, handleDelete]"]