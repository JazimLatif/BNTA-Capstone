[{"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\index.js":"1","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\App.js":"2","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\ProteinTrackerPage.js":"3","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\StartWorkoutPage.js":"4","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\HomePage.js":"5","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\WorkoutPage.js":"6","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\MyWorkoutsPage.js":"7","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\containers\\MyStatsContainer.js":"8","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseDropdownSearch.js":"9","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\Graph.js":"10","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseCard.js":"11","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutComponents\\RecordForm.js":"12","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutComponents\\Timer.js":"13","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\Navbar.js":"14","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\Workout.js":"15","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseTarget.js":"16","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\StartWorkoutButton.js":"17","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutsList.js":"18","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutButton.js":"19"},{"size":769,"mtime":1639582479512,"results":"20","hashOfConfig":"21"},{"size":1128,"mtime":1639582072385,"results":"22","hashOfConfig":"21"},{"size":162,"mtime":1639047547775,"results":"23","hashOfConfig":"21"},{"size":2494,"mtime":1639584204960,"results":"24","hashOfConfig":"21"},{"size":1549,"mtime":1639604052204,"results":"25","hashOfConfig":"21"},{"size":1277,"mtime":1639583910389,"results":"26","hashOfConfig":"21"},{"size":738,"mtime":1639607251470,"results":"27","hashOfConfig":"21"},{"size":1944,"mtime":1639611073614,"results":"28","hashOfConfig":"21"},{"size":667,"mtime":1639608319988,"results":"29","hashOfConfig":"21"},{"size":3214,"mtime":1639611256760,"results":"30","hashOfConfig":"21"},{"size":2848,"mtime":1639566938297,"results":"31","hashOfConfig":"21"},{"size":6787,"mtime":1639566938313,"results":"32","hashOfConfig":"21"},{"size":1464,"mtime":1639566938325,"results":"33","hashOfConfig":"21"},{"size":744,"mtime":1639604234796,"results":"34","hashOfConfig":"21"},{"size":2172,"mtime":1639566938358,"results":"35","hashOfConfig":"21"},{"size":0,"mtime":1639566925403,"results":"36","hashOfConfig":"21"},{"size":929,"mtime":1639566938302,"results":"37","hashOfConfig":"21"},{"size":822,"mtime":1639607363086,"results":"38","hashOfConfig":"21"},{"size":917,"mtime":1639607328333,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"qfve4r",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\index.js",[],["85","86"],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\App.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\ProteinTrackerPage.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\StartWorkoutPage.js",["87","88"],"import '../components/WorkoutComponents/StartWorkoutPage.css';\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport ExerciseCard from '../components/ExerciseCard';\r\nimport RecordForm from '../components/WorkoutComponents/RecordForm';\r\nimport Timer from '../components/WorkoutComponents/Timer';\r\nimport '../components/WorkoutComponents/StartWorkoutPage.css'\r\n\r\nconst StartWorkoutPage = () => {\r\n    const {id} = useParams();\r\n    const [exercises,setExercises] = useState([]);\r\n    // const [currentExercise, setCurrentExercise] = useState([]);\r\n    const [nextExercise, setNextExercise] = useState(0);\r\n    // const {initialMinute} = 0\r\n    // const {initialSeconds} = 0\r\n\r\n    let exerciseCount = 0;\r\n\r\n    const getExercisesByWorkoutId = () => {\r\n        fetch(`http://localhost:8080/api/v1/exercises/workout/id/${id}`)\r\n        .then(response => response.json())\r\n        .then(data => setExercises(data[nextExercise]))\r\n    }\r\n\r\n    useEffect(getExercisesByWorkoutId, [nextExercise]);\r\n\r\n    const counter = () => {\r\n\r\n        if(nextExercise < 2) {\r\n            setNextExercise(nextExercise + 1);\r\n        }\r\n        console.log(nextExercise)\r\n    };\r\n    // construct a new object from exercisedp\r\n\r\n    const onAddExerciseDataPoint = (newExerciseDataPoint) => {\r\n        // const new object = create object that matches backend, map the object \r\n    fetch(\"http://localhost:8080/api/v1/data/record\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(newExerciseDataPoint)\r\n    })\r\n    .then(data => console.log(data))\r\n}\r\n\r\n\r\n    return(\r\n        <>\r\n            <div className=\"preset-beginner-title\">\r\n                <h1>Workout Routine:</h1>\r\n            </div>\r\n\r\n            <div className=\"start-workout-page-container\">\r\n                \r\n\r\n                <div className=\"beginner-current-exercise\">\r\n                    <h1>Current Exercise</h1>\r\n                    <ExerciseCard exercise={exercises} />\r\n                </div>\r\n\r\n                <div>\r\n                    <RecordForm exercise={exercises} onAddExerciseDataPoint = {onAddExerciseDataPoint}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <Timer/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n            <button className = \"next-workout-button\" onClick={counter}>Next Workout</button>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default StartWorkoutPage;","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\HomePage.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\WorkoutPage.js",["89","90"],"import Workout from \"../components/Workout\"\r\nimport { useState, useEffect } from \"react\";\r\nimport { Navigate, useParams } from \"react-router\";\r\nimport StartWorkoutButton from \"../components/StartWorkoutButton\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst WorkoutPage = () => {\r\n\r\n    const {id} = useParams();\r\n    const [exercises,setExercises] = useState([])\r\n\r\n\r\n\r\n    const getExercisesByWorkoutId = () => {\r\n        fetch(`http://localhost:8080/api/v1/exercises/workout/id/${id}`)\r\n        .then(response => response.json())\r\n        .then(data => setExercises(data))\r\n    }\r\n\r\n    useEffect(getExercisesByWorkoutId, []);\r\n\r\n    let navigate = useNavigate();\r\n\r\n    const goWorkout = () => {\r\n        navigate(\"/StartWorkoutPage\")\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <div className=\"preset-beginner-title\">\r\n            <h1>Workout Routine:</h1>\r\n        </div>\r\n\r\n        <div className=\"preset-beginner-exercises\">\r\n            <Workout exercises = {exercises}/>\r\n        </div>\r\n\r\n        <div>\r\n            <StartWorkoutButton workoutId={id} goWorkout={goWorkout}/>\r\n        </div>\r\n\r\n        \r\n        {/* {exerciseTargets.map(exerciseTarget => <div>{exerciseTarget.exercise_Id}</div>)} */}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default WorkoutPage;","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\MyWorkoutsPage.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\containers\\MyStatsContainer.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseDropdownSearch.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\Graph.js",["91"],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseCard.js",["92","93","94","95"],"import React from 'react';\r\nimport cardio from '../Icons/cardio.png';\r\nimport calisthenic from '../Icons/back-lever.png';\r\nimport weight from '../Icons/dumbbell.png';\r\n\r\nconst ExerciseCard = ({exercise}) => {\r\n    switch(exercise.exerciseType)\r\n    {\r\n        case \"CALISTHENICS\":\r\n            return(\r\n            <>\r\n                <div className=\"calisthenics-workout\">\r\n                    <img className=\"calisthenics-image\" src={calisthenic} />\r\n                    \r\n                    <div className=\"calisthenics-workout-container\">\r\n                        <p className=\"calisthenics-workout-name\">{exercise.name}</p>\r\n\r\n                    <div className=\"calisthenics-workout-targets\">\r\n                        <p>Sets: {exercise.targetReps}</p>\r\n                        <p>Reps: {exercise.targetSets}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </>\r\n            )\r\n        case \"WEIGHTS\":\r\n            return(\r\n            <div className=\"weights-workout\">\r\n                <img className = 'weight-image' src = \"https://www.vippng.com/png/detail/55-554509_dumbbells-clipart-svg-gym-weight-icon-png.png\" />\r\n                <div className=\"weights-workout-container\">\r\n                    <p className=\"weights-workout-name\">{exercise.name}</p>\r\n                    <div className=\"cardio-workout-targets\">\r\n                        <p id = \"weights-workout-sets\">Sets: {exercise.targetSets}</p>\r\n                        <p id = \"weights-workout-reps\"> Reps: {exercise.targetReps}</p>\r\n                        <p id = \"weights-workout-weights\">Weights: {exercise.targetWeights}</p>\r\n                 </div>\r\n                </div>\r\n            </div>\r\n            )\r\n        case \"CARDIO\":\r\n            return(\r\n            <>\r\n                <div className=\"cardio-workout\">\r\n                    <img className=\"cardio-image\" src={cardio}/>    \r\n\r\n                    <div className=\"cardio-workout-container\">\r\n                        <p className=\"cardio-workout-name\">{exercise.name}</p>\r\n\r\n                        <div className=\"cardio-workout-targets\">\r\n                            <p id=\"cardio-workout-distance\">Distance: {exercise.targetDistance}</p>\r\n                            <p id=\"cardio-workout-time\">Time: {exercise.targetTime}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n            )\r\n        default: console.log(\"Unmatched exercise type\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {ExerciseCard}\r\n\r\n\r\n        {/* <p>Time: {exercise.targetTime}</p>\r\n        <p>Distance: {exercise.targetDistance}</p>\r\n        <p>Sets: {exercise.targetSets}</p>\r\n        <p>Reps: {exercise.targetReps}</p>\r\n        <p>Weight: {exercise.targetWeight}</p> */}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ExerciseCard;\r\n","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutComponents\\RecordForm.js",["96"],"import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport './StartWorkoutPage.css';\r\n\r\nconst RecordForm = ({exercise, onAddExerciseDataPoint}) => {\r\n\r\n    const[sets, setSets] = useState(\"\");\r\n    const[reps, setReps] = useState(\"\");\r\n    const[weights, setWeights] = useState(\"\");\r\n    const[time, setTime] = useState(\"\");\r\n    const[distance, setDistance] = useState(\"\");\r\n    const[date, setDate] = useState(\"\") \r\n\r\n    const handleSetsChange = (event) => {\r\n        setSets(event.target.value);\r\n    }\r\n\r\n    const handleDateChange = (event) => {\r\n           setDate(event.target.value)\r\n       } \r\n\r\n    const handleRepsChange = (event) => {\r\n        setReps(event.target.value);\r\n    }\r\n\r\n    const handleWeightsChange = (event) => {\r\n        setWeights(event.target.value);\r\n    }\r\n\r\n    const handleTimeChange = (event) => {\r\n        setTime(event.target.value);\r\n    }\r\n\r\n    const handleDistanceChange = (event) => {\r\n        setDistance(event.target.value);\r\n    }\r\n\r\n    const handleSubmitTarget = (event) => {\r\n        event.preventDefault();\r\n\r\n        const newExerciseDataPoint = {\r\n            \"exerciseID\": exercise.exercise_Id,\r\n            \"name\": exercise.name,\r\n            \"date\": date, \r\n            \"timeAchieved\": time,\r\n            \"distanceAchieved\": distance,\r\n            \"setsAchieved\": sets,\r\n            \"repsAchieved\": reps,\r\n            \"weightAchieved\": weights\r\n        }\r\n\r\n        onAddExerciseDataPoint(newExerciseDataPoint);\r\n        setDate(\"\") \r\n        setSets(\"\");\r\n        setReps(\"\");\r\n        setWeights(\"\");\r\n        setTime(\"\");\r\n        setDistance(\"\");\r\n    }\r\n\r\n\r\n    //TODO: Enter numbers only!\r\n    //TODO: For weights enter lb/kg\r\n    const displayForm = () => {\r\n        // console.log(exercise);\r\n        if(exercise) {\r\n                switch(exercise.exerciseType) {\r\n                case \"CALISTHENICS\":\r\n                    // console.log(\"calisthenics\");\r\n                    return (\r\n                    <>\r\n                        <div className=\"calisthenics-data\">\r\n                            \r\n                            <div className=\"calisthenics-data-container\">\r\n                                <p className=\"calisthenics-data-name\">{exercise.name}</p>\r\n\r\n                                <div className=\"calisthenics-data-targets\">\r\n                                    <form onSubmit={handleSubmitTarget}>\r\n                                        <label>Date:\r\n                                            <input type=\"text\" placeholder = \"yyyy-mm-dd\" onChange={handleDateChange}/>\r\n                                        </label>\r\n                                        <label>Sets Achieved:\r\n                                            <input type=\"text\" placeholder = \"enter sets completed\" onChange={handleSetsChange}/>\r\n                                        </label>\r\n                                        <label>Reps Achieved:\r\n                                            <input type=\"text\" placeholder = \"enter reps completed\" onChange={handleRepsChange}/>\r\n                                        </label>\r\n                                        <input type=\"submit\" value=\"Add\"/>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    )\r\n                case \"WEIGHTS\":\r\n                    // console.log(\"weights\");\r\n                    return(\r\n                    <div className=\"weights-data\">\r\n\r\n                    <div className=\"weights-data-container\">\r\n                        <p className=\"weights-data-name\">{exercise.name}</p>\r\n\r\n                        <div className=\"weights-data-targets\">\r\n                                <form onSubmit={handleSubmitTarget}>\r\n                                    <label>Date:\r\n                                            <input type=\"text\" placeholder = \"yyyy-mm-dd\" onChange={handleDateChange}/>\r\n                                    </label>\r\n                                    <label>Sets Achieved:\r\n                                        <input type=\"text\" placeholder = \"enter sets completed\" onChange={handleSetsChange}/>\r\n                                    </label>\r\n                                    <label>Reps Achievced:\r\n                                        <input type=\"text\" placeholder = \"enter reps completed\" onChange={handleRepsChange}/>\r\n                                    </label>\r\n                                    <label>Weights Achievced:\r\n                                        <input type=\"text\" placeholder = \"enter weights completed\" onChange={handleWeightsChange}/>\r\n                                    </label>\r\n                                    <input type=\"submit\" value=\"Add\"/>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                case \"CARDIO\":\r\n                    // console.log(\"cardio\")\r\n                    return(\r\n                    <>\r\n                        <div className=\"cardio-data\">\r\n                            <div className=\"cardio-data-container\">\r\n                                <p className=\"cardio-data-name\">{exercise.name}</p>\r\n\r\n                                <div className=\"cardio-data-targets\">\r\n                                    <form onSubmit={handleSubmitTarget}>\r\n                                        <label>Date:\r\n                                            <input type=\"text\" placeholder = \"yyyy-mm-dd\" onChange={handleDateChange}/>\r\n                                        </label>\r\n                                        <label>Time Achieved:\r\n                                            <input type=\"text\" placeholder = \"enter duration\" onChange={handleTimeChange}/>\r\n                                        </label>\r\n                                        <label>Distance Achieved:\r\n                                            <input type=\"text\" placeholder = \"enter distance achieved\" onChange={handleDistanceChange}/>\r\n                                        </label>\r\n                                        <input type=\"submit\" value=\"Add\"/>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    )\r\n                default: console.log(\"Unmatched exercise type\")\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(displayForm, [exercise]);\r\n\r\n    return (\r\n        <>\r\n        <h1 class=\"review-form-name\">Review Form</h1>\r\n        {displayForm({exercise})}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default RecordForm;\r\n","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutComponents\\Timer.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\Navbar.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\Workout.js",["97"],"import React from 'react';\r\nimport './Workout.css';\r\nimport ExerciseCard from './ExerciseCard';\r\nimport ExerciseTarget from './ExerciseTarget';\r\n\r\nconst Workout = ({exercises}) => {\r\n\r\n\r\n    //from exerciseTarget get exerciseId, then link to exerciseName in exercises\r\n\r\n    //filter exercises by exercise_Id, return exercise.name\r\n\r\n    // const mapExerciseTarget = exerciseTargets.map(exerciseTarget => {\r\n    //     exerciseTarget.exercise_Id;\r\n    // });\r\n\r\n    const exerciseElements = exercises.map(exercise => {\r\n        return(\r\n            <ExerciseCard exercise = {exercise} />\r\n        )\r\n    }\r\n      \r\n    )\r\n        \r\n    // const mapExercise = exercises.map(exercise => {\r\n\r\n    //     // if(exercise.id === exerciseTargets.exercise_Id) {\r\n    //         return(\r\n    //             <Exercise id={exercise.id}/>\r\n    //         )\r\n    //     // }\r\n\r\n    // })\r\n\r\n    // const filteredExercise = (exercise_Id) => exercises.filter(exercises => {\r\n        \r\n    // })\r\n    // () => {\r\n    //     if (targetExercise.exercise_Id === exercise.id){\r\n    //         return exercises.filter(exercise => {\r\n    //             return exercise.name\r\n    //         })\r\n    //     }\r\n    // }\r\n    \r\n    // const exerciseName = (exerciseTargets, {mapExercise}) => {\r\n    //     if(exerciseTargets.exercise_Id === {mapExercise}) {\r\n    //         return {exercise.name}\r\n    //     }\r\n            \r\n\r\n    // }\r\n\r\n    \r\n    return (\r\n        <>\r\n        {exerciseElements}\r\n\r\n        {/* {exerciseName(exerciseTargets, exercises)} \r\n        {exercises.map(exercise => {if(exercise.id === exerciseName(exerciseTargets)) return <div> {exercise.name} </div>})}\r\n        {exerciseTargets.map(exerciseTarget => <div> Sets {exerciseTarget.sets}</div>)}\r\n        {exerciseTargets.map(exerciseTarget => <div> Reps {exerciseTarget.reps}</div>)}\r\n        {exerciseTargets.map(exerciseTarget => <div> Time {exerciseTarget.time}</div>)}\r\n        {exerciseTargets.map(exerciseTarget => <div> Distance {exerciseTarget.distance}</div>)}\r\n        {exerciseTargets.map(exerciseTarget => <div> Weight {exerciseTarget.weight}</div>)} */}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Workout;\r\n","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseTarget.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\StartWorkoutButton.js",["98","99","100","101"],"import React from 'react';\r\nimport './Workout.css';\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StartWorkoutButton = ({workoutId, goWorkout}) => {\r\n    \r\n    const [exerciseTargets,setExerciseTargets] = useState([])\r\n\r\n    const getExerciseTargets = () =>{\r\n\r\n    }\r\n    return (\r\n        <>\r\n        <Link to={{ pathname: `/StartWorkoutPage/${workoutId}` }}>\r\n        {/* <div className=\"all-buttons\"> */}\r\n            {/* currentExercise === exercises.length ? */}\r\n            <button onClick = {()=>goWorkout(workoutId)}>Start Workout</button>\r\n            {/* : */}\r\n\r\n\r\n            {/* <div className=\"button-1\">\r\n                <button onClick = {getExerciseTargets(id)} className=\"beginner-button\"> Beginner Workout </button>\r\n            </div> */}\r\n        {/* </div> */}\r\n        </Link>\r\n        </>\r\n        \r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default StartWorkoutButton;","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutsList.js",["102","103"],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutButton.js",["104","105","106","107"],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":17,"column":9,"nodeType":"114","messageId":"115","endLine":17,"endColumn":22},{"ruleId":"116","severity":1,"message":"117","line":25,"column":40,"nodeType":"118","endLine":25,"endColumn":54,"suggestions":"119"},{"ruleId":"112","severity":1,"message":"120","line":3,"column":10,"nodeType":"114","messageId":"115","endLine":3,"endColumn":18},{"ruleId":"116","severity":1,"message":"117","line":20,"column":40,"nodeType":"118","endLine":20,"endColumn":42,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":58,"column":11,"nodeType":"124","messageId":"125","endLine":58,"endColumn":15},{"ruleId":"112","severity":1,"message":"126","line":4,"column":8,"nodeType":"114","messageId":"115","endLine":4,"endColumn":14},{"ruleId":"127","severity":1,"message":"128","line":13,"column":21,"nodeType":"129","endLine":13,"endColumn":77},{"ruleId":"127","severity":1,"message":"128","line":29,"column":17,"nodeType":"129","endLine":29,"endColumn":149},{"ruleId":"127","severity":1,"message":"128","line":44,"column":21,"nodeType":"129","endLine":44,"endColumn":65},{"ruleId":"116","severity":1,"message":"130","line":154,"column":28,"nodeType":"118","endLine":154,"endColumn":38,"suggestions":"131"},{"ruleId":"112","severity":1,"message":"132","line":4,"column":8,"nodeType":"114","messageId":"115","endLine":4,"endColumn":22},{"ruleId":"112","severity":1,"message":"133","line":3,"column":20,"nodeType":"114","messageId":"115","endLine":3,"endColumn":29},{"ruleId":"112","severity":1,"message":"134","line":8,"column":12,"nodeType":"114","messageId":"115","endLine":8,"endColumn":27},{"ruleId":"112","severity":1,"message":"135","line":8,"column":28,"nodeType":"114","messageId":"115","endLine":8,"endColumn":46},{"ruleId":"112","severity":1,"message":"136","line":10,"column":11,"nodeType":"114","messageId":"115","endLine":10,"endColumn":29},{"ruleId":"112","severity":1,"message":"137","line":2,"column":8,"nodeType":"114","messageId":"115","endLine":2,"endColumn":15},{"ruleId":"112","severity":1,"message":"138","line":6,"column":10,"nodeType":"114","messageId":"115","endLine":6,"endColumn":14},{"ruleId":"112","severity":1,"message":"133","line":3,"column":20,"nodeType":"114","messageId":"115","endLine":3,"endColumn":29},{"ruleId":"112","severity":1,"message":"134","line":9,"column":12,"nodeType":"114","messageId":"115","endLine":9,"endColumn":27},{"ruleId":"112","severity":1,"message":"135","line":9,"column":28,"nodeType":"114","messageId":"115","endLine":9,"endColumn":46},{"ruleId":"112","severity":1,"message":"136","line":12,"column":11,"nodeType":"114","messageId":"115","endLine":12,"endColumn":29},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'exerciseCount' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["141"],"'Navigate' is defined but never used.",["142"],"no-dupe-keys","Duplicate key 'fill'.","ObjectExpression","unexpected","'weight' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'handleSubmitTarget'. Either include it or remove the dependency array.",["143"],"'ExerciseTarget' is defined but never used.","'useEffect' is defined but never used.","'exerciseTargets' is assigned a value but never used.","'setExerciseTargets' is assigned a value but never used.","'getExerciseTargets' is assigned a value but never used.","'Workout' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [id, nextExercise]",{"range":"150","text":"151"},"Update the dependencies array to be: [id]",{"range":"152","text":"153"},"Update the dependencies array to be: [exercise, handleSubmitTarget]",{"range":"154","text":"155"},[1016,1030],"[id, nextExercise]",[636,638],"[id]",[6600,6610],"[exercise, handleSubmitTarget]"]