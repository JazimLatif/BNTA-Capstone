[{"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/index.js":"1","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/App.js":"2","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/Pages/ProteinTrackerPage.js":"3","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/Pages/HomePage.js":"4","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/Pages/StartWorkoutPage.js":"5","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/Pages/WorkoutPage.js":"6","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/Pages/MyWorkoutsPage.js":"7","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/containers/MyStatsContainer.js":"8","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/containers/NewWorkoutContainer.js":"9","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/Navbar.js":"10","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseCard.js":"11","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutsList.js":"12","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/StartWorkoutButton.js":"13","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/Workout.js":"14","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/Graph.js":"15","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseDropdownSearch.js":"16","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutComponents/Timer.js":"17","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutComponents/RecordForm.js":"18","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutComponents/FinishedWorkoutModal.js":"19","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/NewExerciseTargetList.js":"20","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutButton.js":"21","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseTarget.js":"22","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseTargetCard.js":"23","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseCardList.js":"24","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/Pages/EditWorkoutPage.js":"25","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseTargetForm.js":"26","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/EditWorkoutComponents/EditWorkoutButton.js":"27","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/EditWorkoutComponents/SaveWorkoutModal.js":"28"},{"size":740,"mtime":1639653872871,"results":"29","hashOfConfig":"30"},{"size":1367,"mtime":1639666304349,"results":"31","hashOfConfig":"30"},{"size":154,"mtime":1639653872870,"results":"32","hashOfConfig":"30"},{"size":1489,"mtime":1639653872870,"results":"33","hashOfConfig":"30"},{"size":4246,"mtime":1639653872870,"results":"34","hashOfConfig":"30"},{"size":1535,"mtime":1639657708708,"results":"35","hashOfConfig":"30"},{"size":774,"mtime":1639653872870,"results":"36","hashOfConfig":"30"},{"size":1880,"mtime":1639653872871,"results":"37","hashOfConfig":"30"},{"size":6433,"mtime":1639667511941,"results":"38","hashOfConfig":"30"},{"size":717,"mtime":1639653872865,"results":"39","hashOfConfig":"30"},{"size":2855,"mtime":1639657186088,"results":"40","hashOfConfig":"30"},{"size":941,"mtime":1639653872871,"results":"41","hashOfConfig":"30"},{"size":481,"mtime":1639664841459,"results":"42","hashOfConfig":"30"},{"size":2101,"mtime":1639653872871,"results":"43","hashOfConfig":"30"},{"size":3113,"mtime":1639657186088,"results":"44","hashOfConfig":"30"},{"size":680,"mtime":1639664579398,"results":"45","hashOfConfig":"30"},{"size":1401,"mtime":1639653872865,"results":"46","hashOfConfig":"30"},{"size":6782,"mtime":1639653872865,"results":"47","hashOfConfig":"30"},{"size":591,"mtime":1639664972687,"results":"48","hashOfConfig":"30"},{"size":762,"mtime":1639657186088,"results":"49","hashOfConfig":"30"},{"size":882,"mtime":1639653872871,"results":"50","hashOfConfig":"30"},{"size":0,"mtime":1639653872870,"results":"51","hashOfConfig":"30"},{"size":3602,"mtime":1639653872870,"results":"52","hashOfConfig":"30"},{"size":530,"mtime":1639653872870,"results":"53","hashOfConfig":"30"},{"size":7658,"mtime":1639667913329,"results":"54","hashOfConfig":"30"},{"size":6100,"mtime":1639656014919,"results":"55","hashOfConfig":"30"},{"size":387,"mtime":1639657274758,"results":"56","hashOfConfig":"30"},{"size":1097,"mtime":1639667189635,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1s0z7y7",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"60"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/index.js",[],["127","128"],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/App.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/Pages/ProteinTrackerPage.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/Pages/HomePage.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/Pages/StartWorkoutPage.js",["129","130","131","132","133","134"],"import '../components/WorkoutComponents/StartWorkoutPage.css';\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport ExerciseCard from '../components/ExerciseCard';\nimport RecordForm from '../components/WorkoutComponents/RecordForm';\nimport Timer from '../components/WorkoutComponents/Timer';\nimport '../components/WorkoutComponents/StartWorkoutPage.css';\nimport Slider from '@mui/material/Slider';\nimport FinishedWorkoutModal from '../components/WorkoutComponents/FinishedWorkoutModal';\n\nconst StartWorkoutPage = () => {\n    const {id} = useParams();\n    const [exercisesOfWorkout, setExercisesOfWorkout] = useState([]);\n    const [exercise, setExercise] = useState([]);\n    const [nextExercise, setNextExercise] = useState(0);\n    const [finishWorkout, setFinishWorkout] = useState(\"Next Exercise\");\n    const [modal, setModal] = useState(false);\n    const [seconds, setSeconds] = useState(0);\n    const [isActive, setIsActive] = useState(false);\n\n\n\n    const getAllExercisesByWorkoutId = () => {\n        fetch(`http://localhost:8080/api/v1/exercises/workout/id/${id}`)\n        .then(response => response.json())\n        .then(data => setExercisesOfWorkout(data))\n    }\n    \n    useEffect(getAllExercisesByWorkoutId, []);\n\n    const getExerciseByWorkoutId = () => {\n        fetch(`http://localhost:8080/api/v1/exercises/workout/id/${id}`)\n        .then(response => response.json())\n        .then(data => setExercise(data[nextExercise]))\n    }\n\n    const resetTimer = () => {\n        setSeconds(0);\n        setIsActive(false);\n\n    }\n\n    useEffect(getExerciseByWorkoutId, [nextExercise]);\n\n\n    // const reset = () => {\n    //     setSeconds(0);\n    //     setIsActive(false);\n    // }\n\n    const counter = () => {\n\n\n        if(nextExercise < exercisesOfWorkout.length-1) {\n            setNextExercise(nextExercise + 1);\n        }\n\n        if(nextExercise === exercisesOfWorkout.length - 2) {\n            changeText(\"Finish Workout\")\n        }\n        if(nextExercise === exercisesOfWorkout.length - 1) {\n            setModal(true)\n        }\n\n        console.log(nextExercise)\n        setSeconds(0);\n        setIsActive(true);\n        \n    };\n    \n    useEffect(resetTimer,[counter])\n    // construct a new object from exercisedp\n\n    const onAddExerciseDataPoint = (newExerciseDataPoint) => {\n        // const new object = create object that matches backend, map the object \n    fetch(\"http://localhost:8080/api/v1/data/record\", {\n        method: \"POST\",\n        headers: {\n            'Content-type': 'application/json'\n        },\n        body: JSON.stringify(newExerciseDataPoint)\n    })\n    .then(data => console.log(data))\n\n    \n}\n\n    const nextButton = <button className=\"finish-workout-button\"onClick={counter}>{finishWorkout}</button> \n\n    const changeText = (text) => {\n        setFinishWorkout(text)\n    }\n\n\n    return(\n        <>\n            <div className=\"preset-beginner-title\">\n                <h1>Workout Routine:</h1>\n                <div className=\"slider-container\">\n                <div className=\"slider\">\n                <Slider\n        defaultValue={1}\n        value={nextExercise+1}\n        step={1}\n        marks\n        min={1}\n        max={exercisesOfWorkout.length}\n        valueLabelDisplay=\"auto\"\n      />\n      </div>\n      </div>\n            </div>\n\n                <div className=\"start-workout-page-container\">\n\n\n                    <div className=\"beginner-current-exercise\">\n                        <h1 className=\"beginner-current-exercise-title\">Current Exercise</h1>\n                        <ExerciseCard exercise={exercise} />\n                    </div>\n\n                    <div>\n                        <RecordForm exercise={exercise} onAddExerciseDataPoint = {onAddExerciseDataPoint}/>\n                    </div>    \n\n                    <div className=\"rest-timer-wrapper\">\n                        <h1 className=\"rest-timer-title\"></h1>\n                        <Timer/>\n                    </div>\n\n            </div>\n\n\n            <div className=\"finish-workout-button-wrapper\">\n                {nextButton}\n                {modal && <FinishedWorkoutModal close={setModal}/>}\n            </div>\n        \n        </>\n    )\n\n}\n\n\nexport default StartWorkoutPage;","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/Pages/WorkoutPage.js",["135","136"],"import Workout from \"../components/Workout\"\nimport { useState, useEffect } from \"react\";\nimport { Navigate, useParams } from \"react-router\";\nimport StartWorkoutButton from \"../components/StartWorkoutButton\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../components/Workout.css\"\nimport EditWorkoutButton from \"../components/EditWorkoutComponents/EditWorkoutButton\";\n\nconst WorkoutPage = () => {\n\n    const {id} = useParams();\n    const [exercises,setExercises] = useState([])\n\n\n\n    const getExercisesByWorkoutId = () => {\n        fetch(`http://localhost:8080/api/v1/exercises/workout/id/${id}`)\n        .then(response => response.json())\n        .then(data => setExercises(data))\n    }\n\n    useEffect(getExercisesByWorkoutId, []);\n\n    let navigate = useNavigate();\n\n    const goWorkout = () => {\n        navigate(\"/StartWorkoutPage\")\n    }\n\n    const editWorkout = () => {\n        navigate(\"/EditWorkoutPage\")\n    }\n\n    return(\n        <>\n        <div className=\"preset-beginner-title\">\n            <h1>Workout Routine:</h1>\n        </div>\n\n        <div className=\"preset-beginner-exercises\">\n            <Workout exercises = {exercises}/>\n        </div>\n\n        <div className=\"start-workout-wrapper\">\n            <StartWorkoutButton workoutId={id} goWorkout={goWorkout}/>\n            <EditWorkoutButton workoutId={id} editWorkout={editWorkout}/>\n        </div>\n\n        \n        {/* {exerciseTargets.map(exerciseTarget => <div>{exerciseTarget.exercise_Id}</div>)} */}\n        </>\n    )\n\n}\n\nexport default WorkoutPage;","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/Pages/MyWorkoutsPage.js",["137"],"import React, { useState, useEffect } from \"react\";\nimport WorkoutsList from \"../components/WorkoutsList\"\nimport \"../Styles/MyWorkoutsPage.css\"\nimport { Link } from \"react-router-dom\";\n\nconst MyWorkoutsPage = () => {\n  const [workouts, setWorkouts] = useState([]);\n  // const [exerciseTargets, setExerciseTargets] = useState([]);\n\n  const getAllWorkouts = () => {\n    fetch(\"http://localhost:8080/api/v1/workout\")\n    .then(response => response.json())\n    .then(data => setWorkouts(data))\n  }\n  \n  useEffect(getAllWorkouts, [])\n  // useEffect(getAllExerciseTargets, [])\n  \n    return(\n\n        <>\n        <h1 className=\"pageTitle\">My Workouts</h1>\n          <WorkoutsList workouts = {workouts} />\n          \n\n          \n        </>\n\n\n    )\n}\n\nexport default MyWorkoutsPage;","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/containers/MyStatsContainer.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/containers/NewWorkoutContainer.js",["138","139","140","141"],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/Navbar.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseCard.js",["142","143","144","145"],"import React from 'react';\nimport cardio from '../Icons/cardio.png';\nimport calisthenic from '../Icons/back-lever.png';\nimport weight from '../Icons/dumbbell.png';\n\nconst ExerciseCard = ({exercise}) => {\n    switch(exercise.exerciseType)\n    {\n        case \"CALISTHENICS\":\n            return(\n            <>\n                <div className=\"calisthenics-workout\">\n                    <img className=\"calisthenics-image\" src={calisthenic} />\n                    \n                    <div className=\"calisthenics-workout-container\">\n                        <p className=\"calisthenics-workout-name\">{exercise.name}</p>\n\n                    <div className=\"calisthenics-workout-targets\">\n                        <p>Sets: {exercise.targetReps}</p>\n                        <p>Reps: {exercise.targetSets}</p>\n                    </div>\n                </div>\n            </div>\n            </>\n            )\n        case \"WEIGHTS\":\n            return(\n            <div className=\"weights-workout\">\n                <img className = 'weight-image' src = \"https://www.vippng.com/png/detail/55-554509_dumbbells-clipart-svg-gym-weight-icon-png.png\" />\n                <div className=\"weights-workout-container\">\n                    <p className=\"weights-workout-name\">{exercise.name}</p>\n                    <div className=\"cardio-workout-targets\">\n                        <p id = \"weights-workout-sets\">Sets: {exercise.targetSets}</p>\n                        <p id = \"weights-workout-reps\"> Reps: {exercise.targetReps}</p>\n                        <p id = \"weights-workout-weights\">Weights: {exercise.targetWeights}</p>\n                 </div>\n                </div>\n            </div>\n            )\n        case \"CARDIO\":\n            return(\n            <>\n                <div className=\"cardio-workout\">\n                    <img className=\"cardio-image\" src={cardio}/>    \n\n                    <div className=\"cardio-workout-container\">\n                        <p className=\"cardio-workout-name\">{exercise.name}</p>\n\n                        <div className=\"cardio-workout-targets\">\n                            <p id=\"cardio-workout-distance\">Distance: {exercise.targetDistance}</p>\n                            <p id=\"cardio-workout-time\">Time: {exercise.targetTime}</p>\n                        </div>\n                    </div>\n                </div>\n            </>\n            )\n        default: console.log(\"Unmatched exercise type\")\n    }\n\n    return (\n        <>\n            <h1 className=\"beginner-current-exercise-title\">Current Exercise</h1>\n            {ExerciseCard}\n\n\n        {/* <p>Time: {exercise.targetTime}</p>\n        <p>Distance: {exercise.targetDistance}</p>\n        <p>Sets: {exercise.targetSets}</p>\n        <p>Reps: {exercise.targetReps}</p>\n        <p>Weight: {exercise.targetWeight}</p> */}\n        </>\n\n    )\n}\n\nexport default ExerciseCard;\n","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutsList.js",["146"],"import React from 'react';\nimport Workout from './Workout';\nimport { useNavigate } from \"react-router-dom\";\nimport WorkoutButton from './WorkoutButton';\nimport \"../Styles/MyWorkoutsPage.css\"\nimport { Link } from \"react-router-dom\";\n\nconst WorkoutsList= ({workouts}) => {\n    let navigate = useNavigate()\n\n    const goWorkout = (id) =>{\n        navigate(\"/WorkoutPage\")\n    }\n\n    const workoutComponents = workouts.map(workout => {\n        return(\n            <WorkoutButton workout={workout} goWorkout={goWorkout}/>\n            \n        )\n    })\n\n    return (\n        <>\n            <div className=\"container__button_primary\">\n            {workoutComponents}\n\n            <Link to={{ pathname:\"/NewWorkoutPage\"}}><button className=\"advanced-button\">Create Custom Workout</button></Link>\n            \n            <section className=\"Workout-List\">\n\n            </section>\n            </div>\n        </>\n    )\n}\nexport default WorkoutsList;\n\n","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/StartWorkoutButton.js",["147","148"],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/Workout.js",["149"],"import React from 'react';\nimport './Workout.css';\nimport ExerciseCard from './ExerciseCard';\nimport ExerciseTarget from './ExerciseTarget';\n\nconst Workout = ({exercises}) => {\n\n\n    //from exerciseTarget get exerciseId, then link to exerciseName in exercises\n\n    //filter exercises by exercise_Id, return exercise.name\n\n    // const mapExerciseTarget = exerciseTargets.map(exerciseTarget => {\n    //     exerciseTarget.exercise_Id;\n    // });\n\n    const exerciseElements = exercises.map(exercise => {\n        return(\n            <ExerciseCard exercise = {exercise} />\n        )\n    }\n      \n    )\n        \n    // const mapExercise = exercises.map(exercise => {\n\n    //     // if(exercise.id === exerciseTargets.exercise_Id) {\n    //         return(\n    //             <Exercise id={exercise.id}/>\n    //         )\n    //     // }\n\n    // })\n\n    // const filteredExercise = (exercise_Id) => exercises.filter(exercises => {\n        \n    // })\n    // () => {\n    //     if (targetExercise.exercise_Id === exercise.id){\n    //         return exercises.filter(exercise => {\n    //             return exercise.name\n    //         })\n    //     }\n    // }\n    \n    // const exerciseName = (exerciseTargets, {mapExercise}) => {\n    //     if(exerciseTargets.exercise_Id === {mapExercise}) {\n    //         return {exercise.name}\n    //     }\n            \n\n    // }\n\n    \n    return (\n        <>\n        {exerciseElements}\n\n        {/* {exerciseName(exerciseTargets, exercises)} \n        {exercises.map(exercise => {if(exercise.id === exerciseName(exerciseTargets)) return <div> {exercise.name} </div>})}\n        {exerciseTargets.map(exerciseTarget => <div> Sets {exerciseTarget.sets}</div>)}\n        {exerciseTargets.map(exerciseTarget => <div> Reps {exerciseTarget.reps}</div>)}\n        {exerciseTargets.map(exerciseTarget => <div> Time {exerciseTarget.time}</div>)}\n        {exerciseTargets.map(exerciseTarget => <div> Distance {exerciseTarget.distance}</div>)}\n        {exerciseTargets.map(exerciseTarget => <div> Weight {exerciseTarget.weight}</div>)} */}\n        </>\n    )\n}\n\n\nexport default Workout;\n","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/Graph.js",["150"],"import {Line} from 'react-chartjs-2';\nimport \"../Styles/MyStatsPage.css\";\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport {CategoryScale} from 'chart.js';\nimport Chart from 'chart.js/auto';\nChart.register(CategoryScale);\n\n\nconst Graph=({valuesToGraph, exerciseType})=>{\n\n    const [chartData,setChartData]=useState([]);\n\n\n    useEffect(() => {\n        setChartData({\n            labels: valuesToGraph.map((value => value.date)),\n            valuesTime: valuesToGraph.map((value => value.timeAchieved)),\n            valuesDistance: valuesToGraph.map((value => value.distanceAchieved)),\n            valuesSets: valuesToGraph.map((value => value.setsAchieved)),\n            valuesReps: valuesToGraph.map((value => value.repsAchieved)),\n            valuesWeight: valuesToGraph.map((value => value.weightAchieved))\n        }\n    )},[valuesToGraph]);\n\n    let yAxisLabel;\n    let yAxisData;\n    let unit;\n\n    if (exerciseType === \"WEIGHTS\") {\n      yAxisData = chartData.valuesWeight;\n      unit = \"kg\";\n      yAxisLabel = \"Weight Lifted\"\n    } else if (exerciseType === \"CALISTHENICS\") {\n      yAxisData = chartData.valuesSets.map(function (n, i) {\n        return n * chartData.valuesReps[i];\n      });\n      unit = \"reps\";\n      yAxisLabel = \"Total Reps\"\n    } else if (exerciseType === \"CARDIO\") {\n      yAxisData = chartData.valuesDistance.map(function (n, i) {\n        return n / chartData.valuesTime[i];\n      });\n      unit = \"meters/min\";\n      yAxisLabel = \"Pace\"\n    }\n\n    const data = {\n      datasets: [\n        {\n          label: valuesToGraph.date,\n          data: yAxisData,\n          fill: true,\n          backgroundColor: \"transparent\",\n          borderColor: \"rgba(255,30,0, 0.50)\",\n          pointBackgroundColor: \"rgba(255, 255, 255, 1)\",\n          tension: 0.15,\n          fill: {\n            target: \"origin\",\n            above: \"rgba(255,69,0,0.6)\", // Area will be red above the origin\n            below: \"rgb(0, 0, 255)\", // And blue below the origin\n          },\n        },\n      ],\n    };\n\n    return valuesToGraph ? (\n      <>\n        {console.log(exerciseType)}\n        {console.log(data)}\n          <Line\n            data={data}\n            options={{\n              scales: {\n                x: {\n                  labels: chartData.labels,\n                  title: {\n                    color: \"grey\",\n                    display: true,\n                    text: \"Date\",\n                  },\n                },\n                y: {\n                  labels: data.datasets.data,\n                  ticks: {\n                    callback: function (value) {\n                      return value + ` ${unit}`;\n                    },\n                  },\n                  title: {\n                    color: \"grey\",\n                    display: true,\n                    text: `${yAxisLabel}`,\n                  },\n                },\n              },\n              responsive: true,\n              maintainAspectRatio: false,\n              aspectRatio:2.6\n                 }}\n          />\n      </>\n    ) : (\n      <p>Loading...</p>\n    );\n}\n \n\nexport default Graph;","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseDropdownSearch.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutComponents/Timer.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutComponents/RecordForm.js",["151"],"import React from 'react'\nimport { useState, useEffect } from 'react';\nimport './StartWorkoutPage.css';\n\nconst RecordForm = ({exercise, onAddExerciseDataPoint}) => {\n\n    const[sets, setSets] = useState(\"\");\n    const[reps, setReps] = useState(\"\");\n    const[weights, setWeights] = useState(\"\");\n    const[time, setTime] = useState(\"\");\n    const[distance, setDistance] = useState(\"\");\n    const[date, setDate] = useState(\"\") \n\n    const handleSetsChange = (event) => {\n        setSets(event.target.value);\n    }\n\n    const handleDateChange = (event) => {\n           setDate(event.target.value)\n       } \n\n    const handleRepsChange = (event) => {\n        setReps(event.target.value);\n    }\n\n    const handleWeightsChange = (event) => {\n        setWeights(event.target.value);\n    }\n\n    const handleTimeChange = (event) => {\n        setTime(event.target.value);\n    }\n\n    const handleDistanceChange = (event) => {\n        setDistance(event.target.value);\n    }\n\n    const handleSubmitTarget = (event) => {\n        event.preventDefault();\n\n        const newExerciseDataPoint = {\n            \"exerciseID\": exercise.exercise_Id,\n            \"name\": exercise.name,\n            \"date\": date, \n            \"timeAchieved\": time,\n            \"distanceAchieved\": distance,\n            \"setsAchieved\": sets,\n            \"repsAchieved\": reps,\n            \"weightAchieved\": weights\n        }\n\n        onAddExerciseDataPoint(newExerciseDataPoint);\n        setDate(\"\") \n        setSets(\"\");\n        setReps(\"\");\n        setWeights(\"\");\n        setTime(\"\");\n        setDistance(\"\");\n    }\n\n\n    //TODO: Enter numbers only!\n    //TODO: For weights enter lb/kg\n    const displayForm = () => {\n        // console.log(exercise);\n        if(exercise) {\n                switch(exercise.exerciseType) {\n                case \"CALISTHENICS\":\n                    // console.log(\"calisthenics\");\n                    return (\n                    <>\n                        <div className=\"calisthenics-data\">\n                            \n                            <div className=\"calisthenics-data-container\">\n                                <p className=\"calisthenics-data-name\">{exercise.name}</p>\n\n                                <div className=\"calisthenics-data-targets\">\n                                    <form className=\"record-form-wrapper\"onSubmit={handleSubmitTarget}>\n                                        <label>Date:\n                                            <input type=\"text\" placeholder = \"yyyy-mm-dd\" onChange={handleDateChange}/>\n                                        </label>\n                                        <label>Sets Achieved:\n                                            <input type=\"text\" placeholder = \"enter sets completed\" onChange={handleSetsChange}/>\n                                        </label>\n                                        <label>Reps Achieved:\n                                            <input type=\"text\" placeholder = \"enter reps completed\" onChange={handleRepsChange}/>\n                                        </label>\n                                        <input type=\"submit\" value=\"Add\"/>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                    )\n                case \"WEIGHTS\":\n                    // console.log(\"weights\");\n                    return(\n                    <div className=\"weights-data\">\n\n                    <div className=\"weights-data-container\">\n                        <p className=\"weights-data-name\">{exercise.name}</p>\n\n                        <div className=\"weights-data-targets\">\n                                <form className=\"record-form-wrapper\"onSubmit={handleSubmitTarget}>\n                                    <label>Date:\n                                            <input type=\"text\" placeholder = \"yyyy-mm-dd\" onChange={handleDateChange}/>\n                                    </label>\n                                    <label>Sets Achieved:\n                                        <input type=\"text\" placeholder = \"enter sets completed\" onChange={handleSetsChange}/>\n                                    </label>\n                                    <label>Reps Achievced:\n                                        <input type=\"text\" placeholder = \"enter reps completed\" onChange={handleRepsChange}/>\n                                    </label>\n                                    <label>Weights Achievced:\n                                        <input type=\"text\" placeholder = \"enter weights completed\" onChange={handleWeightsChange}/>\n                                    </label>\n                                    <input type=\"submit\" value=\"Add\"/>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    )\n                case \"CARDIO\":\n                    // console.log(\"cardio\")\n                    return(\n                    <>\n                        <div className=\"cardio-data\">\n                            <div className=\"cardio-data-container\">\n                                <p className=\"cardio-data-name\">{exercise.name}</p>\n\n                                <div className=\"cardio-data-targets\">\n                                    <form className=\"record-form-wrapper\" onSubmit={handleSubmitTarget}>\n                                        <label>Date:\n                                            <input type=\"text\" placeholder = \"yyyy-mm-dd\" onChange={handleDateChange}/>\n                                        </label>\n                                        <label>Time Achieved:\n                                            <input type=\"text\" placeholder = \"enter duration\" onChange={handleTimeChange}/>\n                                        </label>\n                                        <label>Distance Achieved:\n                                            <input type=\"text\" placeholder = \"enter distance achieved\" onChange={handleDistanceChange}/>\n                                        </label>\n                                        <input type=\"submit\" value=\"Add\"/>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                    )\n                default: console.log(\"Unmatched exercise type\")\n            }\n        }\n    }\n\n    useEffect(displayForm, [exercise]);\n\n    return (\n        <>\n        <h1 className=\"review-form-name\">Review Form</h1>\n        <div className=\"review-form-data\">\n            {displayForm({exercise})}\n        </div>\n        </>\n    )\n\n}\n\nexport default RecordForm;\n","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutComponents/FinishedWorkoutModal.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/NewExerciseTargetList.js",["152"],"\nimport ExerciseTargetCard from \"./ExerciseTargetCard\"\nimport { useEffect } from \"react/cjs/react.development\"\n\n//an array of the exerciseTargetLists\nconst NewExerciseTargetList = ({newExerciseTargetList, deleteCard}) => {\n    \n    // const exerciseTarget = console.log(\"object:\", (Object.values(newExerciseTargetList))[0][0]);\n    \n    const exerciseTargets = newExerciseTargetList.map(exerciseTarget => {\n        return (\n            <ExerciseTargetCard exercise={exerciseTarget} deleteCard={deleteCard}/>\n        )\n    });\n\n    return (\n        // newExerciseTargetList.length > 0\n        // ?\n        <>\n        {exerciseTargets}\n        </>\n        // :\n        // <>\n        // <p>Loading...</p>\n        // </>\n    )\n}\nexport default NewExerciseTargetList;","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/WorkoutButton.js",["153","154","155","156"],"import React from 'react';\nimport './Workout.css';\nimport { useState, useEffect } from \"react\";\nimport \"../Styles/MyWorkoutsPage.css\"\nimport { Link } from \"react-router-dom\";\n\nconst WorkoutButton = ({workout, goWorkout}) => {\n    \n    const [exerciseTargets,setExerciseTargets] = useState([])\n\n    \n    const getExerciseTargets = () =>{\n\n    }\n    return (\n        <>\n        <Link to={{ pathname: `/WorkoutPage/${workout.id}` }}>\n        {/* <div className=\"all-buttons\"> */}\n            \n            <button class = \"button__primary\" onClick = {()=>goWorkout(workout.id)}>{workout.name}</button>\n\n            {/* <div className=\"button-1\">\n                <button onClick = {getExerciseTargets(id)} className=\"beginner-button\"> Beginner Workout </button>\n            </div> */}\n        {/* </div> */}\n        </Link>\n        </>\n        \n    )\n\n\n\n}\n\nexport default WorkoutButton;\n","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseTarget.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseTargetCard.js",["157","158","159","160"],"import cardio from '../Icons/cardio.png'\nimport calisthenic from '../Icons/back-lever.png'\nimport { useEffect } from 'react/cjs/react.development'\nimport './Workout.css'\nimport bin from '../Icons/binIcon.png'\n\nconst ExerciseTargetCard = ({exercise, deleteCard}) => {\n\n    const handleDelete = (event) => {\n        console.log(\"id: \", exercise.exercise_Id);\n        //delete the card with id\n        event.preventDefault();\n        deleteCard(exercise.exercise_Id);\n    }\n    \n    const displayCard = () => {\n        // console.log(\"card: \", exercise);\n        if(exercise) {\n                switch(exercise.exerciseType) {\n                case \"CALISTHENICS\":\n                    console.log(\"calisthenics\");\n                    return (\n                    <>\n                        <div className=\"calisthenics-workout\">\n                            <img className=\"calisthenics-image\" src={calisthenic} />\n                            \n                            <div className=\"calisthenics-workout-container\">\n                                <p className=\"calisthenics-workout-name\">{exercise.name}</p>\n\n                            <div className=\"calisthenics-workout-targets\">\n                                <p>Sets: {exercise.targetReps}</p>\n                                <p>Reps: {exercise.targetSets}</p>\n                                <button onClick={handleDelete}>Delete\n                                    {/* <image className=\"bin-icon\" src={bin}/> */}\n                                </button>\n                            </div>\n\n                        </div>\n                    </div>\n                    </>\n                    )\n                case \"WEIGHTS\":\n                    console.log(\"weights\");\n                    return(\n                    <div className=\"weights-workout\">\n                        <p className=\"weights-workout-name\">{exercise.name}</p>\n                        <p>Sets: {exercise.targetSets}</p>\n                        <p>Reps: {exercise.targetReps}</p>\n                        <p>Weights: {exercise.targetWeights}</p>\n                        <button onClick={handleDelete}>Delete\n                                    {/* <image className=\"bin-icon\" src={bin}/> */}\n                        </button>\n                    </div>\n                    )\n                case \"CARDIO\":\n                    // console.log(\"cardio\")\n                    return(\n                    <>\n                        <div className=\"cardio-workout\">\n                            <img className=\"cardio-image\" src={cardio}/>    \n\n                            <div className=\"cardio-workout-container\">\n                                <p className=\"cardio-workout-name\">{exercise.name}</p>\n\n                                <div className=\"cardio-workout-targets\">\n                                    <p id=\"cardio-workout-time\">Time: {exercise.targetTime}</p>\n                                    <p id=\"cardio-workout-distance\">Distance: {exercise.targetDistance}</p>\n                                    <button onClick={handleDelete}>Delete\n                                    {/* <image className=\"bin-icon\" src={bin}/> */}\n                                </button>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                    )\n                default: console.log(\"Unmatched exercise type\")\n            }\n        }\n    }\n\n    useEffect(displayCard, [exercise]);\n\n    return (\n        <>\n        {displayCard({exercise})}\n        </>\n    )\n}\n\nexport default ExerciseTargetCard;","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseCardList.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/Pages/EditWorkoutPage.js",["161","162","163","164","165","166","167","168","169","170"],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/ExerciseTargetForm.js",["171","172","173","174","175","176"],"import cardio from '../Icons/cardio.png';\nimport calisthenic from '../Icons/back-lever.png';\nimport weights from '../Icons/dumbbell.png';\nimport { useState, useEffect } from 'react/cjs/react.development';\nimport './Workout.css'\n\nconst ExerciseTargetForm = ({exercise, onAddExerciseTarget}) => {\n\n    const[sets, setSets] = useState(\"\");\n    const[reps, setReps] = useState(\"\");\n    const[weights, setWeights] = useState(\"\");\n    const[time, setTime] = useState(\"\");\n    const[distance, setDistance] = useState(\"\");\n    const newExerciseTarget = \"\";\n\n    const handleSetsChange = (event) => {\n        setSets(event.target.value);\n    }\n\n    const handleRepsChange = (event) => {\n        setReps(event.target.value);\n    }\n\n    const handleWeightsChange = (event) => {\n        setWeights(event.target.value);\n    }\n\n    const handleTimeChange = (event) => {\n        setTime(event.target.value);\n    }\n\n    const handleDistanceChange = (event) => {\n        setDistance(event.target.value);\n    }\n\n    const handleSubmitTarget = (event) => {\n        event.preventDefault();\n\n        // const oldExerciseTarget = newExerciseTarget;\n\n        const newExerciseTarget = {\n            \"exercise_Id\": exercise.id,\n            \"exerciseType\": exercise.exerciseType,\n            \"name\": exercise.name,\n            \"targetTime\": time,\n            \"targetDistance\": distance,\n            \"targetSets\": sets,\n            \"targetReps\": reps,\n            \"targetWeight\": weights\n        }\n\n        // if(oldExerciseTarget === newExerciseTarget) {\n        //     console.log(\"same\");\n        // }\n        // else {\n        onAddExerciseTarget(newExerciseTarget);\n\n        setSets(\"\");\n        setReps(\"\");\n        setWeights(\"\");\n        setTime(\"\");\n        setDistance(\"\");\n        // }\n    \n    }\n\n    //TODO: Enter numbers only!\n    //TODO: For weights enter lb/kg\n    const displayForm = () => {\n        // console.log(exercise);\n        if(exercise) {\n                switch(exercise.exerciseType) {\n                case \"CALISTHENICS\":\n                    // console.log(\"calisthenics\");\n                    return (\n                    <>\n                        <div className=\"calisthenics-workout\">\n                            <img className=\"calisthenics-image\" src={calisthenic} />\n                            \n                            <div className=\"calisthenics-workout-container\">\n                                <p className=\"calisthenics-workout-name\">{exercise.name}</p>\n\n                                <div className=\"calisthenics-workout-targets\">\n                                    <form onSubmit={handleSubmitTarget}>\n                                        <label>Sets:\n                                            <input type=\"number\" onChange={handleSetsChange}/>\n                                        </label>\n                                        <label>Reps:\n                                            <input type=\"number\" onChange={handleRepsChange}/>\n                                        </label>\n                                        <input type=\"submit\" value=\"Add\"/>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                    )\n                case \"WEIGHTS\":\n                    // console.log(\"weights\");\n                    return(\n                    <div className=\"weights-workout\">\n                        <img className=\"calisthenics-image\" src={weights} />\n\n                    <div className=\"calisthenics-workout-container\">\n                        <p className=\"weights-workout-name\">{exercise.name}</p>\n\n                        <div className=\"calisthenics-workout-targets\">\n                                <form onSubmit={handleSubmitTarget}>\n                                    <label>Sets:\n                                        <input type=\"number\" onChange={handleSetsChange}/>\n                                    </label>\n                                    <label>Reps:\n                                        <input type=\"number\" onChange={handleRepsChange}/>\n                                    </label>\n                                    <label>Weight(kg):\n                                        <input type=\"number\" onChange={handleWeightsChange}/>\n                                    </label>\n                                    <input type=\"submit\" value=\"Add\"/>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    )\n                case \"CARDIO\":\n                    // console.log(\"cardio\")\n                    return(\n                    <>\n                        <div className=\"cardio-workout\">\n                            <img className=\"cardio-image\" src={cardio}/>    \n\n                            <div className=\"cardio-workout-container\">\n                                <p className=\"cardio-workout-name\">{exercise.name}</p>\n\n                                <div className=\"cardio-workout-targets\">\n                                    <form onSubmit={handleSubmitTarget}>\n                                        <label>Time:\n                                            <input type=\"number\" onChange={handleTimeChange}/>\n                                        </label>\n                                        <label>Distance:\n                                            <input type=\"number\" onChange={handleDistanceChange}/>\n                                        </label>\n                                        <input type=\"submit\" value=\"Add\"/>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                    )\n                default: console.log(\"Unmatched exercise type\")\n            }\n        }\n    }\n\n    useEffect(displayForm, [exercise]);\n\n    return (\n        <>\n        {displayForm({exercise})}\n        </>\n    )\n\n}\nexport default ExerciseTargetForm;","/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/EditWorkoutComponents/EditWorkoutButton.js",[],"/Users/queenie/Documents/bnta/Capstone/BNTA-Capstone/frontEnd/src/components/EditWorkoutComponents/SaveWorkoutModal.js",[],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":18,"column":12,"nodeType":"183","messageId":"184","endLine":18,"endColumn":19},{"ruleId":"181","severity":1,"message":"185","line":19,"column":12,"nodeType":"183","messageId":"184","endLine":19,"endColumn":20},{"ruleId":"186","severity":1,"message":"187","line":29,"column":43,"nodeType":"188","endLine":29,"endColumn":45,"suggestions":"189"},{"ruleId":"186","severity":1,"message":"187","line":43,"column":39,"nodeType":"188","endLine":43,"endColumn":53,"suggestions":"190"},{"ruleId":"186","severity":1,"message":"191","line":51,"column":11,"nodeType":"192","endLine":69,"endColumn":6,"suggestions":"193"},{"ruleId":"194","severity":1,"message":"195","line":127,"column":25,"nodeType":"196","endLine":127,"endColumn":58},{"ruleId":"181","severity":1,"message":"197","line":3,"column":10,"nodeType":"183","messageId":"184","endLine":3,"endColumn":18},{"ruleId":"186","severity":1,"message":"187","line":22,"column":40,"nodeType":"188","endLine":22,"endColumn":42,"suggestions":"198"},{"ruleId":"181","severity":1,"message":"199","line":4,"column":10,"nodeType":"183","messageId":"184","endLine":4,"endColumn":14},{"ruleId":"181","severity":1,"message":"200","line":6,"column":8,"nodeType":"183","messageId":"184","endLine":6,"endColumn":22},{"ruleId":"181","severity":1,"message":"199","line":7,"column":10,"nodeType":"183","messageId":"184","endLine":7,"endColumn":14},{"ruleId":"201","severity":1,"message":"202","line":92,"column":38,"nodeType":"203","messageId":"204","endLine":92,"endColumn":40},{"ruleId":"205","severity":1,"message":"206","line":138,"column":50,"nodeType":"207","messageId":"208","endLine":138,"endColumn":52},{"ruleId":"181","severity":1,"message":"209","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":14},{"ruleId":"210","severity":1,"message":"211","line":13,"column":21,"nodeType":"196","endLine":13,"endColumn":77},{"ruleId":"210","severity":1,"message":"211","line":29,"column":17,"nodeType":"196","endLine":29,"endColumn":149},{"ruleId":"210","severity":1,"message":"211","line":44,"column":21,"nodeType":"196","endLine":44,"endColumn":65},{"ruleId":"181","severity":1,"message":"212","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":15},{"ruleId":"181","severity":1,"message":"213","line":3,"column":10,"nodeType":"183","messageId":"184","endLine":3,"endColumn":18},{"ruleId":"181","severity":1,"message":"214","line":3,"column":20,"nodeType":"183","messageId":"184","endLine":3,"endColumn":29},{"ruleId":"181","severity":1,"message":"215","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":22},{"ruleId":"216","severity":1,"message":"217","line":58,"column":11,"nodeType":"218","messageId":"204","endLine":58,"endColumn":15},{"ruleId":"186","severity":1,"message":"219","line":154,"column":28,"nodeType":"188","endLine":154,"endColumn":38,"suggestions":"220"},{"ruleId":"181","severity":1,"message":"214","line":3,"column":10,"nodeType":"183","messageId":"184","endLine":3,"endColumn":19},{"ruleId":"181","severity":1,"message":"214","line":3,"column":20,"nodeType":"183","messageId":"184","endLine":3,"endColumn":29},{"ruleId":"181","severity":1,"message":"221","line":9,"column":12,"nodeType":"183","messageId":"184","endLine":9,"endColumn":27},{"ruleId":"181","severity":1,"message":"222","line":9,"column":28,"nodeType":"183","messageId":"184","endLine":9,"endColumn":46},{"ruleId":"181","severity":1,"message":"223","line":12,"column":11,"nodeType":"183","messageId":"184","endLine":12,"endColumn":29},{"ruleId":"181","severity":1,"message":"224","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":11},{"ruleId":"210","severity":1,"message":"211","line":25,"column":29,"nodeType":"196","endLine":25,"endColumn":85},{"ruleId":"210","severity":1,"message":"211","line":60,"column":29,"nodeType":"196","endLine":60,"endColumn":73},{"ruleId":"186","severity":1,"message":"225","line":81,"column":28,"nodeType":"188","endLine":81,"endColumn":38,"suggestions":"226"},{"ruleId":"181","severity":1,"message":"227","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":24},{"ruleId":"181","severity":1,"message":"228","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":20},{"ruleId":"181","severity":1,"message":"200","line":9,"column":8,"nodeType":"183","messageId":"184","endLine":9,"endColumn":22},{"ruleId":"201","severity":1,"message":"202","line":30,"column":32,"nodeType":"203","messageId":"204","endLine":30,"endColumn":34},{"ruleId":"186","severity":1,"message":"229","line":37,"column":35,"nodeType":"188","endLine":37,"endColumn":37,"suggestions":"230"},{"ruleId":"186","severity":1,"message":"231","line":48,"column":40,"nodeType":"188","endLine":48,"endColumn":42,"suggestions":"232"},{"ruleId":"201","severity":1,"message":"202","line":109,"column":38,"nodeType":"203","messageId":"204","endLine":109,"endColumn":40},{"ruleId":"233","severity":1,"message":"234","line":164,"column":9,"nodeType":"235","messageId":"236","endLine":164,"endColumn":56},{"ruleId":"181","severity":1,"message":"237","line":167,"column":11,"nodeType":"183","messageId":"184","endLine":167,"endColumn":22},{"ruleId":"205","severity":1,"message":"206","line":176,"column":50,"nodeType":"207","messageId":"208","endLine":176,"endColumn":52},{"ruleId":"181","severity":1,"message":"238","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":15},{"ruleId":"181","severity":1,"message":"239","line":14,"column":11,"nodeType":"183","messageId":"184","endLine":14,"endColumn":28},{"ruleId":"210","severity":1,"message":"211","line":78,"column":29,"nodeType":"196","endLine":78,"endColumn":85},{"ruleId":"210","severity":1,"message":"211","line":102,"column":25,"nodeType":"196","endLine":102,"endColumn":77},{"ruleId":"210","severity":1,"message":"211","line":129,"column":29,"nodeType":"196","endLine":129,"endColumn":73},{"ruleId":"186","severity":1,"message":"240","line":154,"column":28,"nodeType":"188","endLine":154,"endColumn":38,"suggestions":"241"},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"no-unused-vars","'seconds' is assigned a value but never used.","Identifier","unusedVar","'isActive' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["244"],["245"],"The 'counter' function makes the dependencies of useEffect Hook (at line 71) change on every render. To fix this, wrap the definition of 'counter' in its own useCallback() Hook.","VariableDeclarator",["246"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Navigate' is defined but never used.",["247"],"'Link' is defined but never used.","'EditWorkoutCSS' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'weight' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Workout' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'ExerciseTarget' is defined but never used.","no-dupe-keys","Duplicate key 'fill'.","ObjectExpression","React Hook useEffect has a missing dependency: 'handleSubmitTarget'. Either include it or remove the dependency array.",["248"],"'exerciseTargets' is assigned a value but never used.","'setExerciseTargets' is assigned a value but never used.","'getExerciseTargets' is assigned a value but never used.","'bin' is defined but never used.","React Hook useEffect has a missing dependency: 'handleDelete'. Either include it or remove the dependency array.",["249"],"'ExerciseCardList' is defined but never used.","'ExerciseCard' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'workoutName'. Either include them or remove the dependency array.",["250"],"React Hook useEffect has missing dependencies: 'exercises' and 'id'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNewExerciseTargetList' needs the current value of 'exercises'.",["251"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'handleClick' is assigned a value but never used.","'weights' is defined but never used.","'newExerciseTarget' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleSubmitTarget' and 'weights'. Either include them or remove the dependency array.",["252"],"no-global-assign","no-unsafe-negation",{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"253","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},"Update the dependencies array to be: [id]",{"range":"270","text":"271"},"Update the dependencies array to be: [id, nextExercise]",{"range":"272","text":"273"},"Wrap the definition of 'counter' in its own useCallback() Hook.",{"range":"274","text":"275"},{"range":"276","text":"271"},"Update the dependencies array to be: [exercise, handleSubmitTarget]",{"range":"277","text":"278"},"Update the dependencies array to be: [exercise, handleDelete]",{"range":"279","text":"280"},"Update the dependencies array to be: [id, workoutName]",{"range":"281","text":"282"},"Update the dependencies array to be: [exercises, id]",{"range":"283","text":"284"},"Update the dependencies array to be: [exercise, handleSubmitTarget, weights]",{"range":"285","text":"286"},[1259,1261],"[id]",[1614,1628],"[id, nextExercise]",[1749,2183],"useCallback(() => {\n\n\n        if(nextExercise < exercisesOfWorkout.length-1) {\n            setNextExercise(nextExercise + 1);\n        }\n\n        if(nextExercise === exercisesOfWorkout.length - 2) {\n            changeText(\"Finish Workout\")\n        }\n        if(nextExercise === exercisesOfWorkout.length - 1) {\n            setModal(true)\n        }\n\n        console.log(nextExercise)\n        setSeconds(0);\n        setIsActive(true);\n        \n    })",[739,741],[6541,6551],"[exercise, handleSubmitTarget]",[3475,3485],"[exercise, handleDelete]",[1625,1627],"[id, workoutName]",[1951,1953],"[exercises, id]",[5973,5983],"[exercise, handleSubmitTarget, weights]"]