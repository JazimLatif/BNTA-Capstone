[{"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\index.js":"1","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\App.js":"2","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\HomePage.js":"3","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\ProteinTrackerPage.js":"4","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\Navbar.js":"5","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\StartWorkoutPage.js":"6","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\WorkoutPage.js":"7","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\MyWorkoutsPage.js":"8","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\Graph.js":"9","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseDropdownSearch.js":"10","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\Workout.js":"11","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\StartWorkoutButton.js":"12","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseCard.js":"13","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutsList.js":"14","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutComponents\\FinishedWorkoutModal.js":"15","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\NewExerciseTargetList.js":"16","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutComponents\\RecordForm.js":"17","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutComponents\\Timer.js":"18","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseTarget.js":"19","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutButton.js":"20","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseTargetCard.js":"21","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\EditWorkoutPage.js":"22","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseTargetForm.js":"23","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseCardList.js":"24","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\containers\\NewWorkoutContainer.js":"25","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\containers\\MyStatsContainer.js":"26","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\Footer.js":"27","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\EditWorkoutComponents\\SaveWorkoutModal.js":"28","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\EditWorkoutComponents\\EditWorkoutButton.js":"29"},{"size":769,"mtime":1639582479512,"results":"30","hashOfConfig":"31"},{"size":1489,"mtime":1639692181623,"results":"32","hashOfConfig":"31"},{"size":1549,"mtime":1639604052204,"results":"33","hashOfConfig":"31"},{"size":162,"mtime":1639047547775,"results":"34","hashOfConfig":"31"},{"size":910,"mtime":1639692181662,"results":"35","hashOfConfig":"31"},{"size":4385,"mtime":1639692181694,"results":"36","hashOfConfig":"31"},{"size":1883,"mtime":1639692796285,"results":"37","hashOfConfig":"31"},{"size":808,"mtime":1639692074914,"results":"38","hashOfConfig":"31"},{"size":3223,"mtime":1639659390259,"results":"39","hashOfConfig":"31"},{"size":706,"mtime":1639692181717,"results":"40","hashOfConfig":"31"},{"size":2307,"mtime":1639692089698,"results":"41","hashOfConfig":"31"},{"size":972,"mtime":1639692213260,"results":"42","hashOfConfig":"31"},{"size":2828,"mtime":1639692181951,"results":"43","hashOfConfig":"31"},{"size":982,"mtime":1639692089699,"results":"44","hashOfConfig":"31"},{"size":760,"mtime":1639692181670,"results":"45","hashOfConfig":"31"},{"size":653,"mtime":1639659390264,"results":"46","hashOfConfig":"31"},{"size":8197,"mtime":1639659864913,"results":"47","hashOfConfig":"31"},{"size":1458,"mtime":1639651791044,"results":"48","hashOfConfig":"31"},{"size":0,"mtime":1639566925403,"results":"49","hashOfConfig":"31"},{"size":917,"mtime":1639671336321,"results":"50","hashOfConfig":"31"},{"size":4016,"mtime":1639692074919,"results":"51","hashOfConfig":"31"},{"size":7542,"mtime":1639692181687,"results":"52","hashOfConfig":"31"},{"size":6891,"mtime":1639692181929,"results":"53","hashOfConfig":"31"},{"size":548,"mtime":1639566953196,"results":"54","hashOfConfig":"31"},{"size":6353,"mtime":1639692290510,"results":"55","hashOfConfig":"31"},{"size":1944,"mtime":1639671909220,"results":"56","hashOfConfig":"31"},{"size":719,"mtime":1639692992711,"results":"57","hashOfConfig":"31"},{"size":1131,"mtime":1639692181647,"results":"58","hashOfConfig":"31"},{"size":554,"mtime":1639692868821,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"qfve4r",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\index.js",[],["135","136"],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\App.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\HomePage.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\ProteinTrackerPage.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\Navbar.js",["137"],"import { useNavigate } from \"react-router-dom\";\r\nimport \"../Styles/Navbar.css\"\r\nimport github from \"../Icons/github-icon.png\"\r\n\r\n\r\nconst Navbar = () =>{\r\n    let navigate = useNavigate();\r\n\r\n    const goHomePage = () => {\r\n      navigate(\"/\");\r\n    };\r\n    return (\r\n      <>\r\n        <div className={\"container__navbar\"}>\r\n          <h1 className={\"navbar__title\"}>GainzTracker</h1>\r\n          <div className={\"container__navbar_buttons\"}>\r\n            <button className={\"navbar__button\"} onClick={goHomePage}>\r\n              My Dashboard\r\n            </button>\r\n            <button className={\"navbar__button\"}>Login</button>\r\n            <button className={\"navbar__button\"}>Signup</button>\r\n            <a href=\"https://github.com/imcalled/BNTA-Capstone\" ><img className={\"navbar__icon\" } src={github} /></a>\r\n          </div>\r\n        </div>\r\n        <hr/>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\StartWorkoutPage.js",["138","139","140","141","142","143"],"import '../components/WorkoutComponents/StartWorkoutPage.css';\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport ExerciseCard from \"../components/ExerciseCard\"\r\nimport RecordForm from '../components/WorkoutComponents/RecordForm';\r\nimport Timer from '../components/WorkoutComponents/Timer';\r\nimport '../components/WorkoutComponents/StartWorkoutPage.css';\r\nimport Slider from '@mui/material/Slider';\r\nimport FinishedWorkoutModal from '../components/WorkoutComponents/FinishedWorkoutModal';\r\n\r\nconst StartWorkoutPage = () => {\r\n    const {id} = useParams();\r\n    const [exercisesOfWorkout, setExercisesOfWorkout] = useState([]);\r\n    const [exercise, setExercise] = useState([]);\r\n    const [nextExercise, setNextExercise] = useState(0);\r\n    const [finishWorkout, setFinishWorkout] = useState(\"Next Exercise\");\r\n    const [modal, setModal] = useState(false);\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [isActive, setIsActive] = useState(false);\r\n\r\n    const getAllExercisesByWorkoutId = () => {\r\n        fetch(`http://localhost:8080/api/v1/exercises/workout/id/${id}`)\r\n        .then(response => response.json())\r\n        .then(data => setExercisesOfWorkout(data))\r\n    }\r\n    \r\n    useEffect(getAllExercisesByWorkoutId, []);\r\n\r\n    const getExerciseByWorkoutId = () => {\r\n        fetch(`http://localhost:8080/api/v1/exercises/workout/id/${id}`)\r\n        .then(response => response.json())\r\n        .then(data => setExercise(data[nextExercise]))\r\n    }\r\n\r\n    const resetTimer = () => {\r\n        setSeconds(0);\r\n        setIsActive(false);\r\n\r\n    }\r\n\r\n    useEffect(getExerciseByWorkoutId, [nextExercise]);\r\n\r\n\r\n    // const reset = () => {\r\n    //     setSeconds(0);\r\n    //     setIsActive(false);\r\n    // }\r\n\r\n    const counter = () => {\r\n\r\n\r\n        if(nextExercise < exercisesOfWorkout.length-1) {\r\n            setNextExercise(nextExercise + 1);\r\n        }\r\n\r\n        if(nextExercise === exercisesOfWorkout.length - 2) {\r\n            changeText(\"Finish Workout\")\r\n        }\r\n        if(nextExercise === exercisesOfWorkout.length - 1) {\r\n            setModal(true)\r\n        }\r\n\r\n        console.log(nextExercise)\r\n        setSeconds(0);\r\n        setIsActive(true);\r\n        \r\n    };\r\n    \r\n    useEffect(resetTimer,[counter])\r\n    // construct a new object from exercisedp\r\n\r\n    const onAddExerciseDataPoint = (newExerciseDataPoint) => {\r\n        // const new object = create object that matches backend, map the object \r\n    fetch(\"http://localhost:8080/api/v1/data/record\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(newExerciseDataPoint)\r\n    })\r\n    .then(data => console.log(data))\r\n\r\n    \r\n}\r\n\r\n    const nextButton = <button className=\"finish-workout-button\"onClick={counter}>{finishWorkout}</button> \r\n\r\n    const changeText = (text) => {\r\n        setFinishWorkout(text)\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <div className=\"preset-beginner-title\">\r\n                <h1>Workout Routine:</h1>\r\n                <div className=\"slider-container\">\r\n                <div className=\"slider\">\r\n                <Slider\r\n        defaultValue={1}\r\n        value={nextExercise+1}\r\n        step={1}\r\n        marks\r\n        min={1}\r\n        max={exercisesOfWorkout.length}\r\n        valueLabelDisplay=\"auto\"\r\n      />\r\n      </div>\r\n      </div>\r\n            </div>\r\n\r\n                <div className=\"start-workout-page-container\">\r\n\r\n\r\n                    <div className=\"beginner-current-exercise\">\r\n                        <h1 className=\"beginner-current-exercise-title\">Current Exercise</h1>\r\n                        <ExerciseCard exercise={exercise} />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <RecordForm exercise={exercise} onAddExerciseDataPoint = {onAddExerciseDataPoint}/>\r\n                    </div>    \r\n\r\n                    <div className=\"rest-timer-wrapper\">\r\n                        <h1 className=\"rest-timer-title\"></h1>\r\n                        <Timer/>\r\n                    </div>\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"finish-workout-button-wrapper\">\r\n                {nextButton}\r\n                {modal && <FinishedWorkoutModal close={setModal}/>}\r\n            </div>\r\n        \r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default StartWorkoutPage;","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\WorkoutPage.js",["144","145","146"],"import Workout from \"../components/Workout\"\r\nimport { useState, useEffect } from \"react\";\r\nimport { Navigate, useParams } from \"react-router\";\r\nimport StartWorkoutButton from \"../components/StartWorkoutButton\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../components/Workout.css\"\r\nimport EditWorkoutButton from \"../components/EditWorkoutComponents/EditWorkoutButton\";\r\nimport \"../Styles/MyWorkoutsPage.css\";\r\n\r\nconst WorkoutPage = () => {\r\n\r\n    const {id} = useParams();\r\n    const [exercises,setExercises] = useState([])\r\n    const [name,setName] = useState([])\r\n\r\n\r\n\r\n    const getExercisesByWorkoutId = () => {\r\n        fetch(`http://localhost:8080/api/v1/exercises/workout/id/${id}`)\r\n        .then(response => response.json())\r\n        .then(data => setExercises(data))\r\n    }\r\n\r\n    const getWorkoutName = () => {\r\n        fetch(`http://localhost:8080/api/v1/workout/id/${id}`)\r\n        .then(response => response.json())\r\n        .then(data => setName(data.name))\r\n    }\r\n\r\n    useEffect(getExercisesByWorkoutId, []);\r\n    useEffect(getWorkoutName, []);\r\n\r\n    let navigate = useNavigate();\r\n\r\n    const goWorkout = () => {\r\n        navigate(\"/StartWorkoutPage\")\r\n    }\r\n\r\n    const editWorkout = () => {\r\n        navigate(\"/EditWorkoutPage\")\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h1 className=\"pageTitle\">Workout Routine: {name}</h1>\r\n\r\n\r\n        <div className=\"preset-beginner-exercises\">\r\n            <Workout exercises = {exercises}/>\r\n        </div>\r\n\r\n        <div className=\"start-workout-wrapper\">\r\n            <EditWorkoutButton workoutId={id} editWorkout={editWorkout}/>\r\n            <StartWorkoutButton workoutId={id} goWorkout={goWorkout}/>\r\n            \r\n        </div>\r\n\r\n        \r\n        {/* {exerciseTargets.map(exerciseTarget => <div>{exerciseTarget.exercise_Id}</div>)} */}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default WorkoutPage;","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\MyWorkoutsPage.js",["147"],"import React, { useState, useEffect } from \"react\";\r\nimport WorkoutsList from \"../components/WorkoutsList\"\r\nimport \"../Styles/MyWorkoutsPage.css\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst MyWorkoutsPage = () => {\r\n  const [workouts, setWorkouts] = useState([]);\r\n  // const [exerciseTargets, setExerciseTargets] = useState([]);\r\n\r\n  const getAllWorkouts = () => {\r\n    fetch(\"http://localhost:8080/api/v1/workout\")\r\n    .then(response => response.json())\r\n    .then(data => setWorkouts(data))\r\n  }\r\n  \r\n  useEffect(getAllWorkouts, [])\r\n  // useEffect(getAllExerciseTargets, [])\r\n  \r\n    return(\r\n\r\n        <>\r\n        <h1 className=\"pageTitle\">My Workouts</h1>\r\n          <WorkoutsList workouts = {workouts} />\r\n          \r\n\r\n          \r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default MyWorkoutsPage;","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\Graph.js",["148"],"import {Line} from 'react-chartjs-2';\r\nimport \"../Styles/MyStatsPage.css\";\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport {CategoryScale} from 'chart.js';\r\nimport Chart from 'chart.js/auto';\r\nChart.register(CategoryScale);\r\n\r\n\r\nconst Graph=({valuesToGraph, exerciseType})=>{\r\n\r\n    const [chartData,setChartData]=useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        setChartData({\r\n            labels: valuesToGraph.map((value => value.date)),\r\n            valuesTime: valuesToGraph.map((value => value.timeAchieved)),\r\n            valuesDistance: valuesToGraph.map((value => value.distanceAchieved)),\r\n            valuesSets: valuesToGraph.map((value => value.setsAchieved)),\r\n            valuesReps: valuesToGraph.map((value => value.repsAchieved)),\r\n            valuesWeight: valuesToGraph.map((value => value.weightAchieved))\r\n        }\r\n    )},[valuesToGraph]);\r\n\r\n    let yAxisLabel;\r\n    let yAxisData;\r\n    let unit;\r\n\r\n    if (exerciseType === \"WEIGHTS\") {\r\n      yAxisData = chartData.valuesWeight;\r\n      unit = \"kg\";\r\n      yAxisLabel = \"Weight Lifted\"\r\n    } else if (exerciseType === \"CALISTHENICS\") {\r\n      yAxisData = chartData.valuesSets.map(function (n, i) {\r\n        return n * chartData.valuesReps[i];\r\n      });\r\n      unit = \"reps\";\r\n      yAxisLabel = \"Total Reps\"\r\n    } else if (exerciseType === \"CARDIO\") {\r\n      yAxisData = chartData.valuesDistance.map(function (n, i) {\r\n        return n / chartData.valuesTime[i];\r\n      });\r\n      unit = \"meters/min\";\r\n      yAxisLabel = \"Pace\"\r\n    }\r\n\r\n    const data = {\r\n      datasets: [\r\n        {\r\n          label:\"Exercise Logs\",\r\n          data: yAxisData,\r\n          fill: true,\r\n          backgroundColor: \"transparent\",\r\n          borderColor: \"rgba(255,30,0, 0.50)\",\r\n          pointBackgroundColor: \"rgba(255, 255, 255, 1)\",\r\n          tension: 0.15,\r\n          fill: {\r\n            target: \"origin\",\r\n            above: \"rgba(255,69,0,0.6)\", // Area will be red above the origin\r\n            below: \"rgb(0, 0, 255)\", // And blue below the origin\r\n          },\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      exerciseType ?(\r\n\r\n        <Line\r\n            data={data}\r\n            options={{\r\n\r\n              scales: {\r\n                x: {\r\n                  labels: chartData.labels,\r\n                  title: {\r\n                    color: \"grey\",\r\n                    display: true,\r\n                    text: \"Date\",\r\n                  },\r\n                },\r\n                y: {\r\n                  labels: data.datasets.data,\r\n                  ticks: {\r\n                    callback: function (value) {\r\n                      return value + ` ${unit}`;\r\n                    },\r\n                  },\r\n                  title: {\r\n                    color: \"grey\",\r\n                    display: true,\r\n                    text: `${yAxisLabel}`,\r\n                  },\r\n                },\r\n              },\r\n              responsive: true,\r\n              maintainAspectRatio: false,\r\n              aspectRatio:2.6\r\n                 }}\r\n                \r\n          />)\r\n          :\r\n\r\n          (<p>Select an exercise to see your progress</p>)\r\n          \r\n          \r\n\r\n    );\r\n}\r\n \r\n\r\nexport default Graph;","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseDropdownSearch.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\Workout.js",["149"],"import React from 'react';\r\nimport './Workout.css';\r\nimport ExerciseCard from './ExerciseCard';\r\nimport ExerciseTarget from './ExerciseTarget';\r\nimport \"../Styles/MyWorkoutsPage.css\"\r\nimport \"../Styles/HomePage.css\";\r\n\r\nconst Workout = ({exercises}) => {\r\n\r\n\r\n    //from exerciseTarget get exerciseId, then link to exerciseName in exercises\r\n\r\n    //filter exercises by exercise_Id, return exercise.name\r\n\r\n    // const mapExerciseTarget = exerciseTargets.map(exerciseTarget => {\r\n    //     exerciseTarget.exercise_Id;\r\n    // });\r\n\r\n    const exerciseElements = exercises.map(exercise => {\r\n        return(\r\n            <ExerciseCard exercise = {exercise} />\r\n        )\r\n    }\r\n      \r\n    )\r\n        \r\n    // const mapExercise = exercises.map(exercise => {\r\n\r\n    //     // if(exercise.id === exerciseTargets.exercise_Id) {\r\n    //         return(\r\n    //             <Exercise id={exercise.id}/>\r\n    //         )\r\n    //     // }\r\n\r\n    // })\r\n\r\n    // const filteredExercise = (exercise_Id) => exercises.filter(exercises => {\r\n        \r\n    // })\r\n    // () => {\r\n    //     if (targetExercise.exercise_Id === exercise.id){\r\n    //         return exercises.filter(exercise => {\r\n    //             return exercise.name\r\n    //         })\r\n    //     }\r\n    // }\r\n    \r\n    // const exerciseName = (exerciseTargets, {mapExercise}) => {\r\n    //     if(exerciseTargets.exercise_Id === {mapExercise}) {\r\n    //         return {exercise.name}\r\n    //     }\r\n            \r\n\r\n    // }\r\n\r\n    \r\n    return (\r\n        <>\r\n        <div className = \"container__generic\">\r\n        {exerciseElements}\r\n        </div>\r\n        {/* {exerciseName(exerciseTargets, exercises)} \r\n        {exercises.map(exercise => {if(exercise.id === exerciseName(exerciseTargets)) return <div> {exercise.name} </div>})}\r\n        {exerciseTargets.map(exerciseTarget => <div> Sets {exerciseTarget.sets}</div>)}\r\n        {exerciseTargets.map(exerciseTarget => <div> Reps {exerciseTarget.reps}</div>)}\r\n        {exerciseTargets.map(exerciseTarget => <div> Time {exerciseTarget.time}</div>)}\r\n        {exerciseTargets.map(exerciseTarget => <div> Distance {exerciseTarget.distance}</div>)}\r\n        {exerciseTargets.map(exerciseTarget => <div> Weight {exerciseTarget.weight}</div>)} */}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Workout;\r\n","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\StartWorkoutButton.js",["150","151"],"import React from 'react';\r\nimport './Workout.css';\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport playIcon from \"../Icons/play-512.png\"\r\n\r\nconst StartWorkoutButton = ({workoutId, goWorkout}) => {\r\n\r\n    return (\r\n        <>\r\n        <Link to={{ pathname: `/StartWorkoutPage/${workoutId}` }}>\r\n        {/* <div className=\"all-buttons\"> */}\r\n            {/* currentExercise === exercises.length ? */}\r\n            <button className=\"start-workout-button\" onClick = {()=>goWorkout(workoutId)}><img src={playIcon} alt=\"a play icon\" className=\"start-workout-icon\" align=\"center\"/>Start Workout</button>\r\n            {/* : */}\r\n\r\n\r\n            {/* <div className=\"button-1\">\r\n                <button onClick = {getExerciseTargets(id)} className=\"beginner-button\"> Beginner Workout </button>\r\n            </div> */}\r\n        {/* </div> */}\r\n        </Link>\r\n        </>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default StartWorkoutButton;","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseCard.js",["152","153","154"],"import React from 'react';\r\nimport cardio from '../Icons/cardio.png';\r\nimport calisthenic from '../Icons/back-lever.png';\r\nimport weights from '../Icons/weights.png';\r\n\r\nconst ExerciseCard = ({exercise}) => {\r\n    switch(exercise.exerciseType)\r\n    {\r\n        case \"CALISTHENICS\":\r\n            return(\r\n            <>\r\n                <div className=\"calisthenics-workout\">\r\n                    <img className=\"calisthenics-image\" src={calisthenic} />\r\n                    \r\n                    <div className=\"calisthenics-workout-container\">\r\n                        <p className=\"calisthenics-workout-name\">{exercise.name}</p>\r\n\r\n                    <div className=\"calisthenics-workout-targets\">\r\n                        <p id=\"calisthenics-workout-sets\">Sets: {exercise.targetSets}</p>\r\n                        <p id=\"calisthenics-workout-sets\">Reps: {exercise.targetReps}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </>\r\n            )\r\n        case \"WEIGHTS\":\r\n            return(\r\n            <div className=\"weights-workout\">\r\n                <img className = 'weight-image' src = {weights} />\r\n                <div className=\"weights-workout-container\">\r\n                    <p className=\"weights-workout-name\">{exercise.name}</p>\r\n                    <div className=\"weights-workout-targets\">\r\n                        <p id = \"weights-workout-sets\">Sets: {exercise.targetSets}</p>\r\n                        <p id = \"weights-workout-reps\"> Reps: {exercise.targetReps}</p>\r\n                        <p id = \"weights-workout-weights\">Weights: {exercise.targetWeight}</p>\r\n                 </div>\r\n                </div>\r\n            </div>\r\n            )\r\n        case \"CARDIO\":\r\n            return(\r\n            <>\r\n                <div className=\"cardio-workout\">\r\n                    <img className=\"cardio-image\" src={cardio}/>    \r\n\r\n                    <div className=\"cardio-workout-container\">\r\n                        <p className=\"cardio-workout-name\">{exercise.name}</p>\r\n\r\n                        <div className=\"cardio-workout-targets\">\r\n                            <p id=\"cardio-workout-distance\">Distance: {exercise.targetDistance}</p>\r\n                            <p id=\"cardio-workout-time\">Time: {exercise.targetTime}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n            )\r\n        default: console.log(\"Unmatched exercise type\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {ExerciseCard}\r\n\r\n\r\n        {/* <p>Time: {exercise.targetTime}</p>\r\n        <p>Distance: {exercise.targetDistance}</p>\r\n        <p>Sets: {exercise.targetSets}</p>\r\n        <p>Reps: {exercise.targetReps}</p>\r\n        <p>Weight: {exercise.targetWeight}</p> */}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ExerciseCard;\r\n","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutsList.js",["155"],"import React from 'react';\r\nimport Workout from './Workout';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport WorkoutButton from './WorkoutButton';\r\nimport \"../Styles/MyWorkoutsPage.css\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst WorkoutsList= ({workouts}) => {\r\n    let navigate = useNavigate()\r\n\r\n    const goWorkout = (id) =>{\r\n        navigate(\"/WorkoutPage\")\r\n    }\r\n\r\n    const workoutComponents = workouts.map(workout => {\r\n        return(\r\n            <WorkoutButton workout={workout} goWorkout={goWorkout}/>\r\n            \r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container__button_primary\">\r\n            {workoutComponents}\r\n\r\n            <Link to={{ pathname:\"/NewWorkoutPage\"}}><button className=\"button__primary_alt\">Create Custom Workout</button></Link>\r\n            \r\n            <section className=\"Workout-List\">\r\n\r\n            </section>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default WorkoutsList;\r\n\r\n","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutComponents\\FinishedWorkoutModal.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\NewExerciseTargetList.js",["156"],"import ExerciseTargetCard from \"./ExerciseTargetCard\"\r\nimport { useEffect } from \"react/cjs/react.development\"\r\n\r\n//an array of the exerciseTargetLists\r\nconst NewExerciseTargetList = ({newExerciseTargetList, deleteCard}) => {\r\n    \r\n    // const exerciseTarget = console.log(\"object:\", (Object.values(newExerciseTargetList))[0][0]);\r\n    \r\n    const exerciseTargets = newExerciseTargetList.map(exerciseTarget => {\r\n        return (\r\n            <ExerciseTargetCard exercise={exerciseTarget} deleteCard={deleteCard}/>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <>\r\n        {exerciseTargets}\r\n        </>\r\n    )\r\n}\r\nexport default NewExerciseTargetList;","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutComponents\\RecordForm.js",["157"],"import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport './StartWorkoutPage.css';\r\n\r\nconst RecordForm = ({exercise, onAddExerciseDataPoint}) => {\r\n\r\n    const[sets, setSets] = useState(\"\");\r\n    const[reps, setReps] = useState(\"\");\r\n    const[weights, setWeights] = useState(\"\");\r\n    const[time, setTime] = useState(\"\");\r\n    const[distance, setDistance] = useState(\"\");\r\n    const[date, setDate] = useState(\"\") \r\n\r\n    const handleSetsChange = (event) => {\r\n        setSets(event.target.value);\r\n    }\r\n\r\n    const handleDateChange = (event) => {\r\n           setDate(event.target.value)\r\n       } \r\n\r\n    const handleDateChangeToday = () => {\r\n        var today = new Date();\r\n        var dd = String(today.getDate()).padStart(2,'0');\r\n        var mm = String(today.getMonth() +1).padStart(2,'0');\r\n        var yyyy = today.getFullYear();\r\n\r\n        today = yyyy + '-' + mm + '-' + dd;\r\n        console.log(String(today));\r\n        setDate(String(today));\r\n    }\r\n\r\n    const handleRepsChange = (event) => {\r\n        setReps(event.target.value);\r\n    }\r\n\r\n    const handleWeightsChange = (event) => {\r\n        setWeights(event.target.value);\r\n    }\r\n\r\n    const handleTimeChange = (event) => {\r\n        setTime(event.target.value);\r\n    }\r\n\r\n    const handleDistanceChange = (event) => {\r\n        setDistance(event.target.value);\r\n    }\r\n\r\n    const handleSubmitTarget = (event) => {\r\n        event.preventDefault();\r\n\r\n        const newExerciseDataPoint = {\r\n            \"exerciseID\": exercise.exercise_Id,\r\n            \"name\": exercise.name,\r\n            \"date\": date, \r\n            \"timeAchieved\": time,\r\n            \"distanceAchieved\": distance,\r\n            \"setsAchieved\": sets,\r\n            \"repsAchieved\": reps,\r\n            \"weightAchieved\": weights\r\n        }\r\n\r\n        onAddExerciseDataPoint(newExerciseDataPoint);\r\n        setDate(\"\") \r\n        setSets(\"\");\r\n        setReps(\"\");\r\n        setWeights(\"\");\r\n        setTime(\"\");\r\n        setDistance(\"\");\r\n    }\r\n\r\n\r\n    //TODO: Enter numbers only!\r\n    //TODO: For weights enter lb/kg\r\n    const displayForm = () => {\r\n        // console.log(exercise);\r\n        if(exercise) {\r\n                switch(exercise.exerciseType) {\r\n                case \"CALISTHENICS\":\r\n                    // console.log(\"calisthenics\");\r\n                    return (\r\n                    <>\r\n                        <div className=\"calisthenics-data\">\r\n                            \r\n                            <div className=\"calisthenics-data-container\">\r\n                                <p className=\"calisthenics-data-name\">{exercise.name}</p>\r\n\r\n                                <div className=\"calisthenics-data-targets\">\r\n                                    <form className=\"record-form-wrapper\"onSubmit={handleSubmitTarget}>\r\n                                        <label>Date:\r\n                                        <div className = \"container__date\">\r\n                                            <input value={date} type=\"text\" placeholder = \"yyyy-mm-dd\" onChange={handleDateChange}/>\r\n                                            <button type=\"button\" onClick={handleDateChangeToday}>Use Today's Date</button>\r\n                                        </div>\r\n                                        </label>\r\n                                        <label>Sets Achieved:\r\n                                            <input value={sets} type=\"text\" placeholder = \"enter sets completed\" onChange={handleSetsChange}/>\r\n                                        </label>\r\n                                        <label>Reps Achieved:\r\n                                            <input value={reps} type=\"text\" placeholder = \"enter reps completed\" onChange={handleRepsChange}/>\r\n                                        </label>\r\n                                        <input type=\"submit\" value=\"Add\"/>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    )\r\n                case \"WEIGHTS\":\r\n                    // console.log(\"weights\");\r\n                    return(\r\n                    <div className=\"weights-data\">\r\n\r\n                    <div className=\"weights-data-container\">\r\n                        <p className=\"weights-data-name\">{exercise.name}</p>\r\n\r\n                        <div className=\"weights-data-targets\">\r\n                                <form className=\"record-form-wrapper\"onSubmit={handleSubmitTarget}>\r\n                                    <label>Date:\r\n                                        <div className = \"container__date\">\r\n                                            <input value={date} type=\"text\" placeholder = \"yyyy-mm-dd\" onChange={handleDateChange}/>\r\n                                            <button type=\"button\" onClick={handleDateChangeToday}>Use Today's Date</button>\r\n                                        </div>\r\n                                    </label>\r\n                                    \r\n                                    <label>Sets Achieved:\r\n                                        <input value={sets} type=\"text\" placeholder = \"enter sets completed\" onChange={handleSetsChange}/>\r\n                                    </label>\r\n                                    <label>Reps Achievced:\r\n                                        <input value={reps} type=\"text\" placeholder = \"enter reps completed\" onChange={handleRepsChange}/>\r\n                                    </label>\r\n                                    <label>Weights Achievced:\r\n                                        <input value={weights} type=\"text\" placeholder = \"enter weights completed\" onChange={handleWeightsChange}/>\r\n                                    </label>\r\n                                    <input type=\"submit\" value=\"Add\"/>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                case \"CARDIO\":\r\n                    // console.log(\"cardio\")\r\n                    return(\r\n                    <>\r\n                        <div className=\"cardio-data\">\r\n                            <div className=\"cardio-data-container\">\r\n                                <p className=\"cardio-data-name\">{exercise.name}</p>\r\n\r\n                                <div className=\"cardio-data-targets\">\r\n                                    <form className=\"record-form-wrapper\" onSubmit={handleSubmitTarget}>\r\n                                        <label>Date:\r\n                                        <div className = \"container__date\">\r\n                                            <input value={date} type=\"text\" placeholder = \"yyyy-mm-dd\" onChange={handleDateChange}/>\r\n                                            <button type=\"button\" onClick={handleDateChangeToday}>Use Today's Date</button>\r\n                                        </div>\r\n                                        </label>\r\n                                        <label>Time Achieved:\r\n                                            <input type=\"text\" placeholder = \"enter minutes\" onChange={handleTimeChange}/>\r\n                                        </label>\r\n                                        <label>Distance Achieved:\r\n                                            <input type=\"text\" placeholder = \"enter meters\" onChange={handleDistanceChange}/>\r\n                                        </label>\r\n                                        <input type=\"submit\" value=\"Add\"/>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    )\r\n                default: console.log(\"Unmatched exercise type\")\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(displayForm, [exercise]);\r\n\r\n    return (\r\n        <>\r\n        <h1 className=\"review-form-name\">Review Form</h1>\r\n        <div className=\"review-form-data\">\r\n            {displayForm({exercise})}\r\n        </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default RecordForm;\r\n","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutComponents\\Timer.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseTarget.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\WorkoutButton.js",["158","159","160","161"],"import React from 'react';\r\nimport './Workout.css';\r\nimport { useState, useEffect } from \"react\";\r\nimport \"../Styles/MyWorkoutsPage.css\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst WorkoutButton = ({workout, goWorkout}) => {\r\n    \r\n    const [exerciseTargets,setExerciseTargets] = useState([])\r\n\r\n    \r\n    const getExerciseTargets = () =>{\r\n\r\n    }\r\n    return (\r\n        <>\r\n        <Link to={{ pathname: `/WorkoutPage/${workout.id}` }}>\r\n        {/* <div className=\"all-buttons\"> */}\r\n            \r\n            <button class = \"button__primary\" onClick = {()=>goWorkout(workout.id)}>{workout.name}</button>\r\n\r\n            {/* <div className=\"button-1\">\r\n                <button onClick = {getExerciseTargets(id)} className=\"beginner-button\"> Beginner Workout </button>\r\n            </div> */}\r\n        {/* </div> */}\r\n        </Link>\r\n        </>\r\n        \r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default WorkoutButton;\r\n","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseTargetCard.js",["162","163","164","165","166"],"import cardio from '../Icons/cardio.png'\r\nimport calisthenic from '../Icons/back-lever.png'\r\nimport { useEffect } from 'react/cjs/react.development'\r\nimport './Workout.css'\r\nimport bin from '../Icons/binIcon.png'\r\n\r\nconst ExerciseTargetCard = ({exercise, deleteCard}) => {\r\n\r\n    const handleDelete = (event) => {\r\n        console.log(\"id: \", exercise.exercise_Id);\r\n        //delete the card with id\r\n        event.preventDefault();\r\n        deleteCard(exercise.exercise_Id);\r\n    }\r\n    \r\n    const displayCard = () => {\r\n        // console.log(\"card: \", exercise);\r\n        if(exercise) {\r\n                switch(exercise.exerciseType) {\r\n                case \"CALISTHENICS\":\r\n                    console.log(\"calisthenics\");\r\n                    return (\r\n                    <>\r\n                        <div className=\"calisthenics-workout\">\r\n                            <img className=\"calisthenics-image\" src={calisthenic} />\r\n                            \r\n                            <div className=\"calisthenics-workout-container\">\r\n                                <p className=\"calisthenics-workout-name\">{exercise.name}</p>\r\n\r\n                            <div className=\"calisthenics-workout-targets\">\r\n                                <p>Sets: {exercise.targetReps}</p>\r\n                                <p>Reps: {exercise.targetSets}</p>\r\n                                <button className=\"delete-exercise-button\"  onClick={handleDelete}>Delete\r\n                                    {/* <image className=\"bin-icon\" src={bin}/> */}\r\n                                </button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    </>\r\n                    )\r\n                case \"WEIGHTS\":\r\n                    console.log(\"weights\");\r\n                    return(\r\n                    <div className=\"weights-workout\">\r\n                        <img className=\"weights-image2\" src=\"https://www.vippng.com/png/detail/55-554509_dumbbells-clipart-svg-gym-weight-icon-png.png\" />\r\n                        <p className=\"weights-workout-name\">{exercise.name}</p>\r\n                        <div className=\"weight-issue\">\r\n                        <p>Sets: {exercise.targetSets}</p>\r\n                        <p>Reps: {exercise.targetReps}</p>\r\n                        <p>Weight: {exercise.targetWeights}</p>\r\n                        <button className=\"delete-exercise-button\" onClick={handleDelete}>Delete</button>\r\n                        </div>\r\n                       \r\n                                    {/* <image className=\"bin-icon\" src={bin}/> */}\r\n                        \r\n                    </div>\r\n                    )\r\n                case \"CARDIO\":\r\n                    // console.log(\"cardio\")\r\n                    return(\r\n                    <>\r\n                        <div className=\"cardio-workout\">\r\n                            <img className=\"cardio-image\" src={cardio}/>    \r\n\r\n                            <div className=\"cardio-workout-container\">\r\n                                <p className=\"cardio-workout-name\">{exercise.name}</p>\r\n\r\n                                <div className=\"cardio-workout-targets\">\r\n                                    <p>Time: {exercise.targetTime}mins</p>\r\n                                    <p>Distance: {exercise.targetDistance}m</p>\r\n                                    <button className=\"delete-exercise-button\" onClick={handleDelete}>Delete\r\n                                    {/* <image className=\"bin-icon\" src={bin}/> */}\r\n                                </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    )\r\n                default: console.log(\"Unmatched exercise type\")\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(displayCard, [exercise]);\r\n\r\n    return (\r\n        <>\r\n        {displayCard({exercise})}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExerciseTargetCard;","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\Pages\\EditWorkoutPage.js",["167","168","169","170","171","172","173","174","175"],"import { useState, useEffect} from \"react\";\r\nimport ExerciseDropdownSearch from \"../components/ExerciseDropdownSearch\";\r\nimport ExerciseCardList from \"../components/ExerciseCardList\";\r\nimport ExerciseCard from \"../components/ExerciseTargetCard\";\r\nimport ExerciseTargetForm from \"../components/ExerciseTargetForm\";\r\nimport NewExerciseTargetList from \"../components/NewExerciseTargetList\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport SaveWorkoutModal from \"../components/EditWorkoutComponents/SaveWorkoutModal\"\r\nimport EditWorkoutCSS from \"../components/EditWorkoutComponents/EditWorkoutCSS.css\"\r\n\r\nconst EditWorkoutPage = () => {\r\n\r\n    const{id} = useParams();\r\n\r\n    // const[exercises,setExercises] = useState([]);    \r\n    const[allExercises, setAllExercises] = useState([]);\r\n    const[selectedExercise, setSelectedExercise] = useState(null);\r\n    const[DropSelect, setDropSelect]=useState(null);\r\n    const[exerciseTarget, setExerciseTarget] = useState(null);\r\n    const[newExerciseTargetList, setNewExerciseTargetList] = useState([]);\r\n    const[workoutName, setWorkoutName] = useState(\"\");\r\n    const[modal, setModal] = useState(false);\r\n    const[empty, setEmpty] = useState(false);\r\n\r\n    const getWorkoutNameById = () => {\r\n        return fetch(\"http://localhost:8080/api/v1/workout\")\r\n            .then(response => response.json())\r\n            .then(data => data.filter(workout => {\r\n                return (\r\n                    workout.id == id\r\n                )\r\n            }))\r\n            .then(workout => setWorkoutName(workout[0].name))\r\n            .then(() => console.log(workoutName))\r\n    }\r\n\r\n    useEffect(getWorkoutNameById, []);\r\n\r\n    const getExercisesByWorkoutId = () => {\r\n        fetch(`http://localhost:8080/api/v1/exercises/workout/id/${id}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setNewExerciseTargetList(data)\r\n        })\r\n    }\r\n\r\n    useEffect(getExercisesByWorkoutId, []);\r\n\r\n    const getSelectedExercise = () =>{\r\n        if(DropSelect){\r\n        fetch(`http://localhost:8080/api/v1/exercises/id/${DropSelect}`)\r\n        .then(response => response.json())\r\n        .then(data => setSelectedExercise(data));\r\n        }\r\n    }\r\n\r\n    useEffect(getSelectedExercise, [DropSelect]);\r\n\r\n    const updateDrop=(event) => {\r\n        setDropSelect(event.target.value);\r\n    }\r\n\r\n    const getAllExercises = () => {\r\n        fetch(\"http://localhost:8080/api/v1/exercises\")\r\n            .then(response => response.json())\r\n            .then(data => setAllExercises(data))\r\n    }\r\n\r\n    useEffect(getAllExercises, []);\r\n\r\n    const getAllExerciseTargets = () => {\r\n        fetch(\"http://localhost:8080/api/v1/exerciseTargets\")\r\n            .then(response => response.json())\r\n            .then(data => setExerciseTarget(data))\r\n            .then(console.log(exerciseTarget))\r\n    }\r\n\r\n    const onAddExerciseTarget = (newExerciseTarget) => {\r\n        // console.log(newExerciseTarget);\r\n\r\n        if(newExerciseTarget === newExerciseTargetList[newExerciseTargetList.length-1]) {\r\n            console.log(\"same\");\r\n        }\r\n        else{\r\n            setNewExerciseTargetList([...newExerciseTargetList, newExerciseTarget]);\r\n        }\r\n    }\r\n\r\n    const deleteCard = (id) => {\r\n        const card = newExerciseTargetList.filter(exercise => {\r\n            return (\r\n                exercise.exercise_Id !== id\r\n        )\r\n    })\r\n        setNewExerciseTargetList(card);\r\n    }\r\n\r\n    const handleWorkoutName = (event) => {\r\n        setWorkoutName(event.target.value);\r\n    }\r\n\r\n    const getWorkoutId = () => {\r\n        return fetch(\"http://localhost:8080/api/v1/workout\")\r\n                .then(response => response.json())\r\n                .then(data => data.filter(workout => {\r\n                    console.log(\"workout: \", workout);\r\n                    return (\r\n                        workout.name == workoutName\r\n                    )\r\n                }))\r\n                .then(workout => {return(workout[0].id)})\r\n    }\r\n\r\n    const saveWorkout = () => {\r\n        //create new workout object, post it, get workoutId\r\n\r\n        if(workoutName === \"\") {\r\n            setEmpty(true);\r\n            alert(\"Enter a workout name\");\r\n            window.scrollTo({\r\n                top: 0, \r\n                behavior: 'smooth'\r\n                /* you can also use 'auto' behaviour\r\n                   in place of 'smooth' */\r\n              });\r\n        }\r\n\r\n        if(newExerciseTargetList === []) {\r\n            alert(\"Add exercises to your workout!\");\r\n            window.scrollTo({\r\n                top: 0, \r\n                behavior: 'smooth'\r\n                /* you can also use 'auto' behaviour\r\n                   in place of 'smooth' */\r\n              });\r\n        }\r\n\r\n        else {\r\n            const newWorkout = {\r\n                \"name\": workoutName\r\n            }\r\n    \r\n            fetch(\"http://localhost:8080/api/v1/workout\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify(newWorkout)\r\n            })\r\n            .then(() => getWorkoutId())\r\n            //anonymous function, take nothing and call the function\r\n            .then((workoutId) => {\r\n                console.log(\"workoutId: \", workoutId);\r\n                postExerciseTargets(workoutId)})\r\n            .then(setModal(true))\r\n            .then(successPopup());\r\n            //pop up alert to say successful, redirect to \r\n        }\r\n    }\r\n\r\n    const successPopup = () => {\r\n        {modal && <SaveWorkoutModal close={setModal}/>}\r\n    }\r\n\r\n    const postExerciseTargets = (workoutId) => {\r\n        newExerciseTargetList.map(exerciseTarget => {\r\n\r\n        const newExerciseTarget = { \r\n            \"exercise_Id\": exerciseTarget.exercise_Id,\r\n            \"workout_Id\": workoutId,\r\n            \"time\": exerciseTarget.targetTime,\r\n            \"distance\": exerciseTarget.targetDistance,\r\n            \"sets\": exerciseTarget.targetSets,\r\n            \"reps\": exerciseTarget.targetReps,\r\n            \"weight\": exerciseTarget.targetWeight\r\n        }\r\n\r\n        fetch(\"http://localhost:8080/api/v1/exerciseTargets\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newExerciseTarget)\r\n        })\r\n        .then(data => console.log(data))  \r\n    })\r\n    getAllExerciseTargets();\r\n}\r\n\r\n    const saveButton = newExerciseTargetList.length > 0 ? <button onClick={saveWorkout}>Save</button> : null\r\n\r\n    return (\r\n        allExercises.length > 0\r\n        ?\r\n        <>\r\n        <h1>Edit workout</h1>\r\n            <form>\r\n                <label>Workout Name:\r\n                    <input className={empty ? \"invalid\" : \"workoutName\"} type=\"text\" value={workoutName} onChange={handleWorkoutName}/>\r\n                </label>\r\n            </form>\r\n        {/* {workoutNameForm} */}\r\n        <ExerciseDropdownSearch allExercises = {allExercises} updateDrop={updateDrop}/>\r\n        <ExerciseTargetForm exercise={selectedExercise} onAddExerciseTarget={onAddExerciseTarget}/>\r\n        <NewExerciseTargetList newExerciseTargetList={newExerciseTargetList} deleteCard={deleteCard} />\r\n        {saveButton}\r\n        {modal && <SaveWorkoutModal close={setModal}/>}\r\n        {/* <saveButton /> */}\r\n        {/* <button onClick={saveWorkout}>Save</button> */}\r\n        \r\n        </>\r\n        :\r\n        <p>Loading...</p>\r\n    )\r\n}\r\nexport default EditWorkoutPage;","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseTargetForm.js",["176","177","178","179","180","181"],"import cardio from '../Icons/cardio.png';\r\nimport calisthenic from '../Icons/back-lever.png';\r\nimport weights from '../Icons/dumbbell.png';\r\nimport { useState, useEffect } from 'react/cjs/react.development';\r\nimport './Workout.css'\r\n\r\nconst ExerciseTargetForm = ({exercise, onAddExerciseTarget}) => {\r\n\r\n    const[sets, setSets] = useState(\"\");\r\n    const[reps, setReps] = useState(\"\");\r\n    const[weights, setWeights] = useState(\"\");\r\n    const[time, setTime] = useState(\"\");\r\n    const[distance, setDistance] = useState(\"\");\r\n    const newExerciseTarget = \"\";\r\n\r\n    const handleSetsChange = (event) => {\r\n        setSets(event.target.value);\r\n    }\r\n\r\n    const handleRepsChange = (event) => {\r\n        setReps(event.target.value);\r\n    }\r\n\r\n    const handleWeightsChange = (event) => {\r\n        setWeights(event.target.value);\r\n    }\r\n\r\n    const handleTimeChange = (event) => {\r\n        setTime(event.target.value);\r\n    }\r\n\r\n    const handleDistanceChange = (event) => {\r\n        setDistance(event.target.value);\r\n    }\r\n\r\n    const handleSubmitTarget = (event) => {\r\n        event.preventDefault();\r\n\r\n        // const oldExerciseTarget = newExerciseTarget;\r\n\r\n        const newExerciseTarget = {\r\n            \"exercise_Id\": exercise.id,\r\n            \"exerciseType\": exercise.exerciseType,\r\n            \"name\": exercise.name,\r\n            \"targetTime\": time,\r\n            \"targetDistance\": distance,\r\n            \"targetSets\": sets,\r\n            \"targetReps\": reps,\r\n            \"targetWeight\": weights\r\n        }\r\n\r\n        // if(oldExerciseTarget === newExerciseTarget) {\r\n        //     console.log(\"same\");\r\n        // }\r\n        // else {\r\n        onAddExerciseTarget(newExerciseTarget);\r\n\r\n        setSets(\"\");\r\n        setReps(\"\");\r\n        setWeights(\"\");\r\n        setTime(\"\");\r\n        setDistance(\"\");\r\n        // }\r\n\r\n        event.target.reset();\r\n    \r\n    }\r\n\r\n    //TODO: Enter numbers only!\r\n    //TODO: For weights enter lb/kg\r\n    const displayForm = () => {\r\n        // console.log(exercise);\r\n        if(exercise) {\r\n                switch(exercise.exerciseType) {\r\n                case \"CALISTHENICS\":\r\n                    // console.log(\"calisthenics\");\r\n                    return (\r\n                    <>\r\n                        <div className=\"calisthenics-workout\">\r\n                            <img className=\"calisthenics-image\" src={calisthenic} />\r\n                            \r\n                            <div className=\"calisthenics-workout-container\">\r\n                                <p className=\"calisthenics-workout-name\">{exercise.name}</p>\r\n\r\n                                <div className=\"calisthenics-workout-targets\">\r\n                                    <form onSubmit={handleSubmitTarget}>\r\n                                        <label>Sets:\r\n                                            <input type=\"number\" onChange={handleSetsChange}/>\r\n                                        </label>\r\n                                        <label>Reps:\r\n                                            <input type=\"number\" onChange={handleRepsChange}/>\r\n                                        </label>\r\n                                        <div className=\"add-exercise-button-container\" >\r\n                                        <input className=\"add-exercise-button\" type=\"submit\" value=\"Add\"/>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    )\r\n                case \"WEIGHTS\":\r\n                    // console.log(\"weights\");\r\n                    return(\r\n                    <div className=\"weights-workout\">\r\n                        <img className=\"weights-image2\" src=\"https://www.vippng.com/png/detail/55-554509_dumbbells-clipart-svg-gym-weight-icon-png.png\" />\r\n\r\n                    <div className=\"calisthenics-workout-container\">\r\n                        <p className=\"weights-workout-name\">{exercise.name}</p>\r\n\r\n                        <div className=\"calisthenics-workout-targets\">\r\n                                <form  onSubmit={handleSubmitTarget}>\r\n                                    <label>Sets:\r\n                                        <input type=\"number\" onChange={handleSetsChange}/>\r\n                                    </label>\r\n                                    <label>Reps:\r\n                                        <input type=\"number\" onChange={handleRepsChange}/>\r\n                                    </label>\r\n                                    <label>Weight(kg):\r\n                                        <input type=\"number\" onChange={handleWeightsChange}/>\r\n                                    </label>\r\n                                    <div className=\"add-exercise-button-container\">\r\n                                    <input className=\"add-exercise-button\" type=\"submit\" value=\"Add\"/>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                case \"CARDIO\":\r\n                    // console.log(\"cardio\")\r\n                    return(\r\n                    <>\r\n                        <div className=\"cardio-workout exercise-to-add\">\r\n                            <img className=\"cardio-image\" src={cardio}/>    \r\n\r\n                            <div className=\"cardio-workout-container\">\r\n                                <p className=\"cardio-workout-name\">{exercise.name}</p>\r\n\r\n                                <div className=\"cardio-workout-targets\">\r\n                                    <form  onSubmit={handleSubmitTarget}>\r\n                                        <label>Time:\r\n                                            <input type=\"number\" onChange={handleTimeChange}/>\r\n                                        </label>\r\n                                        <label>Distance:\r\n                                            <input type=\"number\" onChange={handleDistanceChange}/>\r\n                                        </label>\r\n                                        <div className=\"add-exercise-button-container\">\r\n                                        <input className=\"add-exercise-button\" type=\"submit\" value=\"Add\"/>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    )\r\n                default: console.log(\"Unmatched exercise type\")\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(displayForm, [exercise]);\r\n\r\n    return (\r\n        <>\r\n        {displayForm({exercise})}\r\n        </>\r\n    )\r\n\r\n}\r\nexport default ExerciseTargetForm;","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\ExerciseCardList.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\containers\\NewWorkoutContainer.js",["182","183","184","185"],"import { useState, useEffect } from \"react\";\r\nimport ExerciseDropdownSearch from \"../components/ExerciseDropdownSearch\";\r\nimport ExerciseTargetForm from \"../components/ExerciseTargetForm\";\r\nimport NewExerciseTargetList from \"../components/NewExerciseTargetList\";\r\nimport SaveWorkoutModal from \"../components/EditWorkoutComponents/SaveWorkoutModal\"\r\nimport EditWorkoutCSS from \"../components/EditWorkoutComponents/EditWorkoutCSS.css\"\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../Styles/NewWorkoutContainer.css\"\r\n\r\nconst NewWorkoutContainer = () => {\r\n    \r\n    const[allExercises, setAllExercises] = useState([]);\r\n    const[selectedExercise, setSelectedExercise] = useState(null);\r\n    const[DropSelect, setDropSelect]=useState(null);\r\n    const[exerciseTarget, setExerciseTarget] = useState(null);\r\n    const[newExerciseTargetList, setNewExerciseTargetList] = useState([]);\r\n    const[workoutName, setWorkoutName] = useState(\"\");\r\n    const[empty, setEmpty] = useState(false);\r\n    const[modal, setModal] = useState(false);\r\n    const[workoutId, setWorkoutId] = useState(\"\");\r\n\r\n    const getSelectedExercise =()=>{\r\n        if(DropSelect){\r\n        fetch(`http://localhost:8080/api/v1/exercises/id/${DropSelect}`)\r\n        .then(response => response.json())\r\n        .then(data => setSelectedExercise(data));\r\n        }\r\n    }\r\n\r\n    useEffect(getSelectedExercise, [DropSelect]);\r\n\r\n    const updateDrop=(event) => {\r\n        setDropSelect(event.target.value);\r\n    }\r\n\r\n    const getAllExercises = () => {\r\n        fetch(\"http://localhost:8080/api/v1/exercises\")\r\n            .then(response => response.json())\r\n            .then(data => setAllExercises(data))\r\n    }\r\n\r\n    useEffect(getAllExercises, []);\r\n\r\n    const getAllExerciseTargets = () => {\r\n        fetch(\"http://localhost:8080/api/v1/exerciseTargets\")\r\n            .then(response => response.json())\r\n            .then(data => setExerciseTarget(data))\r\n            .then(console.log(exerciseTarget))\r\n    }\r\n\r\n    const onAddExerciseTarget = (newExerciseTarget) => {\r\n\r\n        if(newExerciseTarget === newExerciseTargetList[newExerciseTargetList.length-1]) {\r\n            console.log(\"same\");\r\n        }\r\n        else{\r\n            setNewExerciseTargetList([...newExerciseTargetList, newExerciseTarget]);\r\n        }\r\n    }\r\n\r\n    const deleteCard = (id) => {\r\n        const card = newExerciseTargetList.filter(exercise => {\r\n            return (\r\n                exercise.exercise_Id !== id\r\n        )\r\n    })\r\n        setNewExerciseTargetList(card);\r\n    }\r\n\r\n    const handleWorkoutName = (event) => {\r\n        setEmpty(false);\r\n        setWorkoutName(event.target.value);\r\n    }\r\n\r\n    const getWorkoutId = () => {\r\n        return fetch(\"http://localhost:8080/api/v1/workout\")\r\n                .then(response => response.json())\r\n                .then(data => data.filter(workout => {\r\n                    console.log(\"workout: \", workout);\r\n                    return (\r\n                        workout.name == workoutName\r\n                    )\r\n                }))\r\n                .then(workout => {return(workout[0].id)})\r\n    }\r\n\r\n    const saveWorkout = () => {\r\n        //create new workout object, post it, get workoutId\r\n\r\n        if(workoutName === \"\") {\r\n            setEmpty(true);\r\n            alert(\"Enter a workout name\");\r\n            window.scrollTo({\r\n                top: 0, \r\n                behavior: 'smooth'\r\n                /* you can also use 'auto' behaviour\r\n                   in place of 'smooth' */\r\n              });\r\n        }\r\n\r\n        else {\r\n            const newWorkout = {\r\n                \"name\": workoutName\r\n            }\r\n\r\n            fetch(\"http://localhost:8080/api/v1/workout\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify(newWorkout)\r\n            })\r\n            .then(() => getWorkoutId())\r\n            //anonymous function, take nothing and call the function\r\n            .then((id) => {setWorkoutId(workoutId); return id})\r\n            .then((id) => {postExerciseTargets(id)})\r\n            .then(setModal(true))\r\n            // .then(successPopup());\r\n        }\r\n    }\r\n\r\n    // const successPopup = () => {\r\n    //     {modal && <SaveWorkoutModal close={setModal}/>}\r\n    // }\r\n\r\n    const postExerciseTargets = (workoutId) => {\r\n        newExerciseTargetList.map(exerciseTarget => {\r\n\r\n        const newExerciseTarget = { \r\n            \"exercise_Id\": exerciseTarget.exercise_Id,\r\n            \"workout_Id\": workoutId,\r\n            \"time\": exerciseTarget.targetTime,\r\n            \"distance\": exerciseTarget.targetDistance,\r\n            \"sets\": exerciseTarget.targetSets,\r\n            \"reps\": exerciseTarget.targetReps,\r\n            \"weight\": exerciseTarget.targetWeight\r\n        }\r\n\r\n        fetch(\"http://localhost:8080/api/v1/exerciseTargets\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newExerciseTarget)\r\n        })\r\n        .then(data => console.log(data))  \r\n    })\r\n    getAllExerciseTargets();\r\n}\r\n\r\n    const saveButton = newExerciseTargetList.length > 0 ? <button onClick={saveWorkout}>Save</button> : null\r\n\r\n    return (\r\n        allExercises.length > 0\r\n        ?\r\n        <>\r\n            <form>\r\n                <label>Workout Name:\r\n                    <input className={empty ? \"invalid\" : \"workoutName\"} type=\"text\" onChange={handleWorkoutName}/>\r\n                </label>\r\n            </form>\r\n        {/* {workoutNameForm} */}\r\n        <ExerciseDropdownSearch allExercises = {allExercises} updateDrop={updateDrop}/>\r\n        <div className=\"container__exercise_selected\">\r\n        <ExerciseTargetForm exercise={selectedExercise} onAddExerciseTarget={onAddExerciseTarget}/>\r\n        </div>\r\n        <div className=\"container__exercises_added\">\r\n        <NewExerciseTargetList newExerciseTargetList={newExerciseTargetList} deleteCard={deleteCard} />\r\n        </div>\r\n        {saveButton}\r\n        {modal && <SaveWorkoutModal close={setModal} id={workoutId}/>}\r\n        {/* <saveButton /> */}\r\n        {/* <button onClick={saveWorkout}>Save</button> */}\r\n        \r\n        </>\r\n        :\r\n        <p>Loading...</p>\r\n    )\r\n}\r\nexport default NewWorkoutContainer;","C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\containers\\MyStatsContainer.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\Footer.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\EditWorkoutComponents\\SaveWorkoutModal.js",[],"C:\\Users\\ninoa\\Documents\\BNTA\\BNTA-Capstone\\frontEnd\\src\\components\\EditWorkoutComponents\\EditWorkoutButton.js",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":22,"column":66,"nodeType":"192","endLine":22,"endColumn":114},{"ruleId":"193","severity":1,"message":"194","line":18,"column":12,"nodeType":"195","messageId":"196","endLine":18,"endColumn":19},{"ruleId":"193","severity":1,"message":"197","line":19,"column":12,"nodeType":"195","messageId":"196","endLine":19,"endColumn":20},{"ruleId":"198","severity":1,"message":"199","line":27,"column":43,"nodeType":"200","endLine":27,"endColumn":45,"suggestions":"201"},{"ruleId":"198","severity":1,"message":"199","line":41,"column":39,"nodeType":"200","endLine":41,"endColumn":53,"suggestions":"202"},{"ruleId":"198","severity":1,"message":"203","line":49,"column":11,"nodeType":"204","endLine":67,"endColumn":6,"suggestions":"205"},{"ruleId":"206","severity":1,"message":"207","line":125,"column":25,"nodeType":"192","endLine":125,"endColumn":58},{"ruleId":"193","severity":1,"message":"208","line":3,"column":10,"nodeType":"195","messageId":"196","endLine":3,"endColumn":18},{"ruleId":"198","severity":1,"message":"199","line":30,"column":40,"nodeType":"200","endLine":30,"endColumn":42,"suggestions":"209"},{"ruleId":"198","severity":1,"message":"199","line":31,"column":31,"nodeType":"200","endLine":31,"endColumn":33,"suggestions":"210"},{"ruleId":"193","severity":1,"message":"211","line":4,"column":10,"nodeType":"195","messageId":"196","endLine":4,"endColumn":14},{"ruleId":"212","severity":1,"message":"213","line":58,"column":11,"nodeType":"214","messageId":"215","endLine":58,"endColumn":15},{"ruleId":"193","severity":1,"message":"216","line":4,"column":8,"nodeType":"195","messageId":"196","endLine":4,"endColumn":22},{"ruleId":"193","severity":1,"message":"217","line":3,"column":10,"nodeType":"195","messageId":"196","endLine":3,"endColumn":18},{"ruleId":"193","severity":1,"message":"218","line":3,"column":20,"nodeType":"195","messageId":"196","endLine":3,"endColumn":29},{"ruleId":"190","severity":1,"message":"191","line":13,"column":21,"nodeType":"192","endLine":13,"endColumn":77},{"ruleId":"190","severity":1,"message":"191","line":29,"column":17,"nodeType":"192","endLine":29,"endColumn":67},{"ruleId":"190","severity":1,"message":"191","line":44,"column":21,"nodeType":"192","endLine":44,"endColumn":65},{"ruleId":"193","severity":1,"message":"219","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":15},{"ruleId":"193","severity":1,"message":"218","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":19},{"ruleId":"198","severity":1,"message":"220","line":175,"column":28,"nodeType":"200","endLine":175,"endColumn":38,"suggestions":"221"},{"ruleId":"193","severity":1,"message":"218","line":3,"column":20,"nodeType":"195","messageId":"196","endLine":3,"endColumn":29},{"ruleId":"193","severity":1,"message":"222","line":9,"column":12,"nodeType":"195","messageId":"196","endLine":9,"endColumn":27},{"ruleId":"193","severity":1,"message":"223","line":9,"column":28,"nodeType":"195","messageId":"196","endLine":9,"endColumn":46},{"ruleId":"193","severity":1,"message":"224","line":12,"column":11,"nodeType":"195","messageId":"196","endLine":12,"endColumn":29},{"ruleId":"193","severity":1,"message":"225","line":5,"column":8,"nodeType":"195","messageId":"196","endLine":5,"endColumn":11},{"ruleId":"190","severity":1,"message":"191","line":25,"column":29,"nodeType":"192","endLine":25,"endColumn":85},{"ruleId":"190","severity":1,"message":"191","line":46,"column":25,"nodeType":"192","endLine":46,"endColumn":155},{"ruleId":"190","severity":1,"message":"191","line":64,"column":29,"nodeType":"192","endLine":64,"endColumn":73},{"ruleId":"198","severity":1,"message":"226","line":85,"column":28,"nodeType":"200","endLine":85,"endColumn":38,"suggestions":"227"},{"ruleId":"193","severity":1,"message":"228","line":3,"column":8,"nodeType":"195","messageId":"196","endLine":3,"endColumn":24},{"ruleId":"193","severity":1,"message":"229","line":4,"column":8,"nodeType":"195","messageId":"196","endLine":4,"endColumn":20},{"ruleId":"193","severity":1,"message":"230","line":9,"column":8,"nodeType":"195","messageId":"196","endLine":9,"endColumn":22},{"ruleId":"231","severity":1,"message":"232","line":30,"column":32,"nodeType":"233","messageId":"215","endLine":30,"endColumn":34},{"ruleId":"198","severity":1,"message":"234","line":37,"column":35,"nodeType":"200","endLine":37,"endColumn":37,"suggestions":"235"},{"ruleId":"198","severity":1,"message":"199","line":47,"column":40,"nodeType":"200","endLine":47,"endColumn":42,"suggestions":"236"},{"ruleId":"231","severity":1,"message":"232","line":108,"column":38,"nodeType":"233","messageId":"215","endLine":108,"endColumn":40},{"ruleId":"237","severity":1,"message":"238","line":162,"column":9,"nodeType":"239","messageId":"240","endLine":162,"endColumn":56},{"ruleId":"241","severity":1,"message":"242","line":166,"column":50,"nodeType":"243","messageId":"244","endLine":166,"endColumn":52},{"ruleId":"193","severity":1,"message":"245","line":3,"column":8,"nodeType":"195","messageId":"196","endLine":3,"endColumn":15},{"ruleId":"193","severity":1,"message":"246","line":14,"column":11,"nodeType":"195","messageId":"196","endLine":14,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":80,"column":29,"nodeType":"192","endLine":80,"endColumn":85},{"ruleId":"190","severity":1,"message":"191","line":106,"column":25,"nodeType":"192","endLine":106,"endColumn":155},{"ruleId":"190","severity":1,"message":"191","line":135,"column":29,"nodeType":"192","endLine":135,"endColumn":73},{"ruleId":"198","severity":1,"message":"247","line":162,"column":28,"nodeType":"200","endLine":162,"endColumn":38,"suggestions":"248"},{"ruleId":"193","severity":1,"message":"230","line":6,"column":8,"nodeType":"195","messageId":"196","endLine":6,"endColumn":22},{"ruleId":"193","severity":1,"message":"211","line":7,"column":10,"nodeType":"195","messageId":"196","endLine":7,"endColumn":14},{"ruleId":"231","severity":1,"message":"232","line":81,"column":38,"nodeType":"233","messageId":"215","endLine":81,"endColumn":40},{"ruleId":"241","severity":1,"message":"242","line":127,"column":50,"nodeType":"243","messageId":"244","endLine":127,"endColumn":52},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'seconds' is assigned a value but never used.","Identifier","unusedVar","'isActive' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["251"],["252"],"The 'counter' function makes the dependencies of useEffect Hook (at line 69) change on every render. To fix this, wrap the definition of 'counter' in its own useCallback() Hook.","VariableDeclarator",["253"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'Navigate' is defined but never used.",["254"],["255"],"'Link' is defined but never used.","no-dupe-keys","Duplicate key 'fill'.","ObjectExpression","unexpected","'ExerciseTarget' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Workout' is defined but never used.","React Hook useEffect has missing dependencies: 'date', 'handleSubmitTarget', 'reps', 'sets', and 'weights'. Either include them or remove the dependency array.",["256"],"'exerciseTargets' is assigned a value but never used.","'setExerciseTargets' is assigned a value but never used.","'getExerciseTargets' is assigned a value but never used.","'bin' is defined but never used.","React Hook useEffect has a missing dependency: 'handleDelete'. Either include it or remove the dependency array.",["257"],"'ExerciseCardList' is defined but never used.","'ExerciseCard' is defined but never used.","'EditWorkoutCSS' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","React Hook useEffect has missing dependencies: 'id' and 'workoutName'. Either include them or remove the dependency array.",["258"],["259"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'weights' is defined but never used.","'newExerciseTarget' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleSubmitTarget'. Either include it or remove the dependency array.",["260"],"no-global-assign","no-unsafe-negation",{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"261","fix":"267"},{"desc":"261","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"261","fix":"275"},{"desc":"276","fix":"277"},"Update the dependencies array to be: [id]",{"range":"278","text":"279"},"Update the dependencies array to be: [id, nextExercise]",{"range":"280","text":"281"},"Wrap the definition of 'counter' in its own useCallback() Hook.",{"range":"282","text":"283"},{"range":"284","text":"279"},{"range":"285","text":"279"},"Update the dependencies array to be: [date, exercise, handleSubmitTarget, reps, sets, weights]",{"range":"286","text":"287"},"Update the dependencies array to be: [exercise, handleDelete]",{"range":"288","text":"289"},"Update the dependencies array to be: [id, workoutName]",{"range":"290","text":"291"},{"range":"292","text":"279"},"Update the dependencies array to be: [exercise, handleSubmitTarget]",{"range":"293","text":"294"},[1282,1284],"[id]",[1651,1665],"[id, nextExercise]",[1794,2246],"useCallback(() => {\r\n\r\n\r\n        if(nextExercise < exercisesOfWorkout.length-1) {\r\n            setNextExercise(nextExercise + 1);\r\n        }\r\n\r\n        if(nextExercise === exercisesOfWorkout.length - 2) {\r\n            changeText(\"Finish Workout\")\r\n        }\r\n        if(nextExercise === exercisesOfWorkout.length - 1) {\r\n            setModal(true)\r\n        }\r\n\r\n        console.log(nextExercise)\r\n        setSeconds(0);\r\n        setIsActive(true);\r\n        \r\n    })",[1037,1039],[1073,1075],[7942,7952],"[date, exercise, handleSubmitTarget, reps, sets, weights]",[3880,3890],"[exercise, handleDelete]",[1664,1666],"[id, workoutName]",[1964,1966],[6755,6765],"[exercise, handleSubmitTarget]"]
