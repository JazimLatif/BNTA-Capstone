[{"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/frontEnd/src/index.js":"1","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/frontEnd/src/App.js":"2","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/frontEnd/src/reportWebVitals.js":"3","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/frontEnd/src/containers/NewWorkoutContainer.js":"4","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/frontEnd/src/containers/MyStatsContainer.js":"5","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/frontEnd/src/components/ExerciseList.js":"6","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/frontEnd/src/components/ExerciseDropdownSearch.js":"7","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/frontEnd/src/components/Graph.js":"8","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/frontEnd/src/components/ExerciseCard.js":"9"},{"size":542,"mtime":1639396383046,"results":"10","hashOfConfig":"11"},{"size":370,"mtime":1639404518468,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1638807921757,"results":"13","hashOfConfig":"11"},{"size":1613,"mtime":1639398772306,"results":"14","hashOfConfig":"11"},{"size":1304,"mtime":1639405657847,"results":"15","hashOfConfig":"11"},{"size":409,"mtime":1639397076555,"results":"16","hashOfConfig":"11"},{"size":608,"mtime":1639397791808,"results":"17","hashOfConfig":"11"},{"size":902,"mtime":1639406584060,"results":"18","hashOfConfig":"11"},{"size":2295,"mtime":1639398875357,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ycji7",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/frontEnd/src/index.js",[],["43","44"],"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/frontEnd/src/App.js",["45","46","47","48"],"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/frontEnd/src/reportWebVitals.js",[],"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/frontEnd/src/containers/NewWorkoutContainer.js",["49","50"],"import { useState, useEffect } from \"react\";\nimport ExerciseDropdownSearch from \"../components/ExerciseDropdownSearch\";\nimport ExerciseList from \"../components/ExerciseList\";\nimport ExerciseCard from \"../components/ExerciseCard\";\nconst NewWorkoutContainer = () => {\n    \n    const[allExercises, setAllExercises] = useState([]);\n    const [selectedExercise, setSelectedExercise] = useState(null);\n    const [DropSelect, setDropSelect]=useState(null);\n\n    const getSelectedExercise =()=>{\n        if(DropSelect){\n        fetch(`http://localhost:8080/api/v1/exercises/id/${DropSelect}`)\n        .then(response => response.json())\n        .then(data => setSelectedExercise(data));\n        console.log(selectedExercise);\n        }\n    }\n\n    useEffect(getSelectedExercise, [DropSelect]);\n\n\n    const updateDrop=(event) => {\n        setDropSelect(event.target.value);\n    }\n\n    const getAllExercises = () => {\n        fetch(\"http://localhost:8080/api/v1/exercises\")\n            .then(response => response.json())\n            .then(data => setAllExercises(data))\n    }\n\n    useEffect(getAllExercises, []);\n\n    const x = ()=> {    if(selectedExercise){\n        <ExerciseCard exercise={selectedExercise}/>}\n        else{<p>loading...</p>}\n    }\n\n    return (\n        allExercises.length > 0\n        ?\n        <>\n        <p>NavBar</p> \n        <p>New Workout Page</p>\n        <ExerciseDropdownSearch allExercises = {allExercises} updateDrop={updateDrop}/>\n        {x}\n\n        {/* <ExerciseList allExercises={allExercises}/> */}\n        </>\n        :\n        <p>Loading...</p>\n    )\n}\nexport default NewWorkoutContainer;","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/frontEnd/src/containers/MyStatsContainer.js",[],"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/frontEnd/src/components/ExerciseList.js",["51"],"import ExerciseDropdownSearch from \"./ExerciseDropdownSearch\";\nimport Exercise from \"./ExerciseCard\";\n\nconst ExerciseList = ({allExercises, dropSelect}) => {\n    const ExerciseComponent = allExercises.map(exercise => {\n        return (\n            <Exercise exercise={exercise} dropSelect={dropSelect}/>\n        )});\n\n    return(\n    <>\n        {ExerciseComponent}\n    </>\n    )\n}\nexport default ExerciseList;","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/frontEnd/src/components/ExerciseDropdownSearch.js",["52"],"\nimport ExerciseList from './ExerciseList';\n\nconst ExerciseDropdownSearch = ({allExercises, dropSelect, updateDrop}) => {\n\n    const exerciseOptions = allExercises.map(exercise => {\n        return <option value={exercise.id}>{exercise.name}</option>\n    });\n\n\n// console.log(allExercises.map(exercise => exercise.name));\n\n    return(\n        <div class=\"ExerciseDropDownSearch\">\n\n        <form>\n        <select onChange={updateDrop}>\n            <option label=\"Select an exercise!\"/>\n        {exerciseOptions}\n        </select>\n\n        </form>\n\n\n        </div>\n    )\n}\nexport default ExerciseDropdownSearch;","/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/frontEnd/src/components/Graph.js",[],"/Users/jazimlatif/Desktop/BNTA/BNTA-Capstone/frontEnd/src/components/ExerciseCard.js",["53","54"],"import React from 'react';\nimport cardio from '../Icons/cardio.png';\nimport calisthenic from '../Icons/back-lever.png';\n\nconst ExerciseCard = ({exercise}) => {\n    switch(exercise.exerciseType)\n    {\n        case \"CALISTHENICS\":\n            return(\n            <>\n                <div className=\"calisthenics-workout\">\n                    <img className=\"calisthenics-image\" src={calisthenic} />\n                    \n                    <div className=\"calisthenics-workout-container\">\n                        <p className=\"calisthenics-workout-name\">{exercise.name}</p>\n\n                    <div className=\"calisthenics-workout-targets\">\n                        <p>Sets: {exercise.targetReps}</p>\n                        <p>Reps: {exercise.targetSets}</p>\n                    </div>\n                </div>\n            </div>\n            </>\n            )\n        case \"WEIGHTS\":\n            return(\n            <div className=\"weights-workout\">\n                <p className=\"weights-workout-name\">{exercise.name}</p>\n                <p>Sets: {exercise.targetSets}</p>\n                <p>Reps: {exercise.targetReps}</p>\n                <p>Weights: {exercise.targetWeights}</p>\n            </div>\n            )\n        case \"CARDIO\":\n            return(\n            <>\n                <div className=\"cardio-workout\">\n                    <img className=\"cardio-image\" src={cardio}/>    \n\n                    <div className=\"cardio-workout-container\">\n                        <p className=\"cardio-workout-name\">{exercise.name}</p>\n\n                        <div className=\"cardio-workout-targets\">\n                            <p id=\"cardio-workout-distance\">Distance: {exercise.targetDistance}</p>\n                            <p id=\"cardio-workout-time\">Time: {exercise.targetTime}</p>\n                        </div>\n                    </div>\n                </div>\n            </>\n            )\n        default: console.log(\"Unmatched exercise type\")\n    }\n\n    return (\n        <>\n            {ExerciseCard}\n\n\n        {/* <p>Time: {exercise.targetTime}</p>\n        <p>Distance: {exercise.targetDistance}</p>\n        <p>Sets: {exercise.targetSets}</p>\n        <p>Reps: {exercise.targetReps}</p>\n        <p>Weight: {exercise.targetWeight}</p> */}\n        </>\n\n    )\n}\n\nexport default ExerciseCard;",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":2,"column":8,"nodeType":"61","messageId":"62","endLine":2,"endColumn":27},{"ruleId":"59","severity":1,"message":"63","line":3,"column":9,"nodeType":"61","messageId":"62","endLine":3,"endColumn":22},{"ruleId":"59","severity":1,"message":"64","line":3,"column":24,"nodeType":"61","messageId":"62","endLine":3,"endColumn":30},{"ruleId":"59","severity":1,"message":"65","line":3,"column":32,"nodeType":"61","messageId":"62","endLine":3,"endColumn":37},{"ruleId":"59","severity":1,"message":"66","line":3,"column":8,"nodeType":"61","messageId":"62","endLine":3,"endColumn":20},{"ruleId":"67","severity":1,"message":"68","line":20,"column":36,"nodeType":"69","endLine":20,"endColumn":48,"suggestions":"70"},{"ruleId":"59","severity":1,"message":"71","line":1,"column":8,"nodeType":"61","messageId":"62","endLine":1,"endColumn":30},{"ruleId":"59","severity":1,"message":"66","line":2,"column":8,"nodeType":"61","messageId":"62","endLine":2,"endColumn":20},{"ruleId":"72","severity":1,"message":"73","line":12,"column":21,"nodeType":"74","endLine":12,"endColumn":77},{"ruleId":"72","severity":1,"message":"73","line":38,"column":21,"nodeType":"74","endLine":38,"endColumn":65},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'NewWorkoutContainer' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'ExerciseList' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedExercise'. Either include it or remove the dependency array.","ArrayExpression",["77"],"'ExerciseDropdownSearch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [DropSelect, selectedExercise]",{"range":"80","text":"81"},[769,781],"[DropSelect, selectedExercise]"]